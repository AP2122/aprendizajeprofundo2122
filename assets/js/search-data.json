{
  
    
        "post0": {
            "title": "Interpretabilidad de modelos de clasificación",
            "content": "En este notebook se muestra cómo crear mapas de activación para visualizar las decisiones tomadas por un modelo de clasificación de imágenes. Esta técnica está basada en el trabajo &quot;Grad-CAM: Why Did You Say That? Visual Explanations from Deep Networks via Gradient-based Localization&quot;. . Para ello vamos a reutilizar nuestro modelo de la práctica 1 creado con la librería fastAI. . En esta práctica vamos a hacer un uso intensivo de la GPU, así que es importante activar su uso desde la opción Configuración del cuaderno del menú Editar (esta opción debería estar habilitada por defecto, pero es recomendable que lo compruebes). . Pasos previos . En primer lugar debemos entrenar un modelo como vimos en la práctica 1. A continuación se dan los pasos explicados en dicha práctica. . Librer&#237;as . Comenzamos descargando la última versión de la librería FastAI. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uq . |████████████████████████████████| 188 kB 4.2 MB/s |████████████████████████████████| 56 kB 4.5 MB/s . A continuación, cargamos aquellas librerías que son necesarias. . from fastai.vision.all import * . Dataset . Para esta práctica vamos a usar como ejemplo de dataset el Intel Image Classification dataset. Este dataset consta de imágenes de tamaño 150x150 distribuidas en 6 categorías (buildings, forest, glacier, mountain, sea, street). Los siguientes comandos descargan y descomprimen dicho dataset. . !wget https://unirioja-my.sharepoint.com/:u:/g/personal/joheras_unirioja_es/EbMVHqKMSnNHh6I0-4-QWdQBlVDKz2Uz5Ky73zc5tHGofg?download=1 -O IntelImageClassification.zip !unzip IntelImageClassification.zip . Streaming output truncated to the last 5000 lines. inflating: IntelImageClassification/train/mountain/16901.jpg inflating: IntelImageClassification/train/mountain/16904.jpg inflating: IntelImageClassification/train/mountain/16962.jpg inflating: IntelImageClassification/train/mountain/16991.jpg inflating: IntelImageClassification/train/mountain/17004.jpg inflating: IntelImageClassification/train/mountain/17019.jpg inflating: IntelImageClassification/train/mountain/17102.jpg inflating: IntelImageClassification/train/mountain/17226.jpg inflating: IntelImageClassification/train/mountain/17234.jpg inflating: IntelImageClassification/train/mountain/17240.jpg inflating: IntelImageClassification/train/mountain/17339.jpg inflating: IntelImageClassification/train/mountain/17379.jpg inflating: IntelImageClassification/train/mountain/17387.jpg inflating: IntelImageClassification/train/mountain/17424.jpg inflating: IntelImageClassification/train/mountain/17429.jpg inflating: IntelImageClassification/train/mountain/17504.jpg inflating: IntelImageClassification/train/mountain/17507.jpg inflating: IntelImageClassification/train/mountain/17519.jpg inflating: IntelImageClassification/train/mountain/17530.jpg inflating: IntelImageClassification/train/mountain/17553.jpg inflating: IntelImageClassification/train/mountain/17579.jpg inflating: IntelImageClassification/train/mountain/17648.jpg inflating: IntelImageClassification/train/mountain/17661.jpg inflating: IntelImageClassification/train/mountain/17674.jpg inflating: IntelImageClassification/train/mountain/17705.jpg inflating: IntelImageClassification/train/mountain/17714.jpg inflating: IntelImageClassification/train/mountain/17726.jpg inflating: IntelImageClassification/train/mountain/17729.jpg inflating: IntelImageClassification/train/mountain/17744.jpg inflating: IntelImageClassification/train/mountain/17882.jpg inflating: IntelImageClassification/train/mountain/17916.jpg inflating: IntelImageClassification/train/mountain/17919.jpg inflating: IntelImageClassification/train/mountain/17968.jpg inflating: IntelImageClassification/train/mountain/17980.jpg inflating: IntelImageClassification/train/mountain/17996.jpg inflating: IntelImageClassification/train/mountain/18000.jpg inflating: IntelImageClassification/train/mountain/18020.jpg inflating: IntelImageClassification/train/mountain/18102.jpg inflating: IntelImageClassification/train/mountain/18106.jpg inflating: IntelImageClassification/train/mountain/18149.jpg inflating: IntelImageClassification/train/mountain/18186.jpg inflating: IntelImageClassification/train/mountain/1819.jpg inflating: IntelImageClassification/train/mountain/18204.jpg inflating: IntelImageClassification/train/mountain/18206.jpg inflating: IntelImageClassification/train/mountain/18218.jpg inflating: IntelImageClassification/train/mountain/18219.jpg inflating: IntelImageClassification/train/mountain/18256.jpg inflating: IntelImageClassification/train/mountain/1826.jpg inflating: IntelImageClassification/train/mountain/18270.jpg inflating: IntelImageClassification/train/mountain/18280.jpg inflating: IntelImageClassification/train/mountain/18287.jpg inflating: IntelImageClassification/train/mountain/18303.jpg inflating: IntelImageClassification/train/mountain/18309.jpg inflating: IntelImageClassification/train/mountain/18354.jpg inflating: IntelImageClassification/train/mountain/18380.jpg inflating: IntelImageClassification/train/mountain/18418.jpg inflating: IntelImageClassification/train/mountain/18442.jpg inflating: IntelImageClassification/train/mountain/1845.jpg inflating: IntelImageClassification/train/mountain/18474.jpg inflating: IntelImageClassification/train/mountain/18578.jpg inflating: IntelImageClassification/train/mountain/1860.jpg inflating: IntelImageClassification/train/mountain/18645.jpg inflating: IntelImageClassification/train/mountain/18659.jpg inflating: IntelImageClassification/train/mountain/18737.jpg inflating: IntelImageClassification/train/mountain/18744.jpg inflating: IntelImageClassification/train/mountain/1875.jpg inflating: IntelImageClassification/train/mountain/18765.jpg inflating: IntelImageClassification/train/mountain/18789.jpg inflating: IntelImageClassification/train/mountain/18839.jpg inflating: IntelImageClassification/train/mountain/18901.jpg inflating: IntelImageClassification/train/mountain/18931.jpg inflating: IntelImageClassification/train/mountain/18946.jpg inflating: IntelImageClassification/train/mountain/19024.jpg inflating: IntelImageClassification/train/mountain/1903.jpg inflating: IntelImageClassification/train/mountain/19041.jpg inflating: IntelImageClassification/train/mountain/19114.jpg inflating: IntelImageClassification/train/mountain/19136.jpg inflating: IntelImageClassification/train/mountain/19162.jpg inflating: IntelImageClassification/train/mountain/19186.jpg inflating: IntelImageClassification/train/mountain/19276.jpg inflating: IntelImageClassification/train/mountain/19281.jpg inflating: IntelImageClassification/train/mountain/19296.jpg inflating: IntelImageClassification/train/mountain/19303.jpg inflating: IntelImageClassification/train/mountain/19318.jpg inflating: IntelImageClassification/train/mountain/19400.jpg inflating: IntelImageClassification/train/mountain/19437.jpg inflating: IntelImageClassification/train/mountain/19600.jpg inflating: IntelImageClassification/train/mountain/19616.jpg inflating: IntelImageClassification/train/mountain/19621.jpg inflating: IntelImageClassification/train/mountain/19647.jpg inflating: IntelImageClassification/train/mountain/19692.jpg inflating: IntelImageClassification/train/mountain/19749.jpg inflating: IntelImageClassification/train/mountain/19760.jpg inflating: IntelImageClassification/train/mountain/19769.jpg inflating: IntelImageClassification/train/mountain/19793.jpg inflating: IntelImageClassification/train/mountain/19843.jpg inflating: IntelImageClassification/train/mountain/19857.jpg inflating: IntelImageClassification/train/mountain/19887.jpg inflating: IntelImageClassification/train/mountain/19889.jpg inflating: IntelImageClassification/train/mountain/19912.jpg inflating: IntelImageClassification/train/mountain/19929.jpg inflating: IntelImageClassification/train/mountain/1993.jpg inflating: IntelImageClassification/train/mountain/19964.jpg inflating: IntelImageClassification/train/mountain/19987.jpg inflating: IntelImageClassification/train/mountain/2003.jpg inflating: IntelImageClassification/train/mountain/20052.jpg inflating: IntelImageClassification/train/mountain/2078.jpg inflating: IntelImageClassification/train/mountain/2079.jpg inflating: IntelImageClassification/train/mountain/2120.jpg inflating: IntelImageClassification/train/mountain/2142.jpg inflating: IntelImageClassification/train/mountain/2147.jpg inflating: IntelImageClassification/train/mountain/2166.jpg inflating: IntelImageClassification/train/mountain/2181.jpg inflating: IntelImageClassification/train/mountain/2183.jpg inflating: IntelImageClassification/train/mountain/2199.jpg inflating: IntelImageClassification/train/mountain/2303.jpg inflating: IntelImageClassification/train/mountain/232.jpg inflating: IntelImageClassification/train/mountain/2320.jpg inflating: IntelImageClassification/train/mountain/245.jpg inflating: IntelImageClassification/train/mountain/2458.jpg inflating: IntelImageClassification/train/mountain/2477.jpg inflating: IntelImageClassification/train/mountain/2481.jpg inflating: IntelImageClassification/train/mountain/2505.jpg inflating: IntelImageClassification/train/mountain/2531.jpg inflating: IntelImageClassification/train/mountain/2569.jpg inflating: IntelImageClassification/train/mountain/2579.jpg inflating: IntelImageClassification/train/mountain/2604.jpg inflating: IntelImageClassification/train/mountain/2625.jpg inflating: IntelImageClassification/train/mountain/2672.jpg inflating: IntelImageClassification/train/mountain/2677.jpg inflating: IntelImageClassification/train/mountain/2753.jpg inflating: IntelImageClassification/train/mountain/2932.jpg inflating: IntelImageClassification/train/mountain/2968.jpg inflating: IntelImageClassification/train/mountain/2983.jpg inflating: IntelImageClassification/train/mountain/2998.jpg inflating: IntelImageClassification/train/mountain/3005.jpg inflating: IntelImageClassification/train/mountain/3070.jpg inflating: IntelImageClassification/train/mountain/3090.jpg inflating: IntelImageClassification/train/mountain/3111.jpg inflating: IntelImageClassification/train/mountain/313.jpg inflating: IntelImageClassification/train/mountain/3162.jpg inflating: IntelImageClassification/train/mountain/3210.jpg inflating: IntelImageClassification/train/mountain/3236.jpg inflating: IntelImageClassification/train/mountain/3241.jpg inflating: IntelImageClassification/train/mountain/3269.jpg inflating: IntelImageClassification/train/mountain/3305.jpg inflating: IntelImageClassification/train/mountain/331.jpg inflating: IntelImageClassification/train/mountain/3313.jpg inflating: IntelImageClassification/train/mountain/3373.jpg inflating: IntelImageClassification/train/mountain/34.jpg inflating: IntelImageClassification/train/mountain/3442.jpg inflating: IntelImageClassification/train/mountain/3446.jpg inflating: IntelImageClassification/train/mountain/3569.jpg inflating: IntelImageClassification/train/mountain/3593.jpg inflating: IntelImageClassification/train/mountain/3598.jpg inflating: IntelImageClassification/train/mountain/3599.jpg inflating: IntelImageClassification/train/mountain/3650.jpg inflating: IntelImageClassification/train/mountain/3689.jpg inflating: IntelImageClassification/train/mountain/3765.jpg inflating: IntelImageClassification/train/mountain/378.jpg inflating: IntelImageClassification/train/mountain/3786.jpg inflating: IntelImageClassification/train/mountain/3787.jpg inflating: IntelImageClassification/train/mountain/380.jpg inflating: IntelImageClassification/train/mountain/3806.jpg inflating: IntelImageClassification/train/mountain/3828.jpg inflating: IntelImageClassification/train/mountain/3860.jpg inflating: IntelImageClassification/train/mountain/3872.jpg inflating: IntelImageClassification/train/mountain/3896.jpg inflating: IntelImageClassification/train/mountain/3940.jpg inflating: IntelImageClassification/train/mountain/3941.jpg inflating: IntelImageClassification/train/mountain/3963.jpg inflating: IntelImageClassification/train/mountain/3967.jpg inflating: IntelImageClassification/train/mountain/3978.jpg inflating: IntelImageClassification/train/mountain/4009.jpg inflating: IntelImageClassification/train/mountain/4162.jpg inflating: IntelImageClassification/train/mountain/42.jpg inflating: IntelImageClassification/train/mountain/4209.jpg inflating: IntelImageClassification/train/mountain/4224.jpg inflating: IntelImageClassification/train/mountain/4260.jpg inflating: IntelImageClassification/train/mountain/4339.jpg inflating: IntelImageClassification/train/mountain/459.jpg inflating: IntelImageClassification/train/mountain/4601.jpg inflating: IntelImageClassification/train/mountain/4624.jpg inflating: IntelImageClassification/train/mountain/4638.jpg inflating: IntelImageClassification/train/mountain/4639.jpg inflating: IntelImageClassification/train/mountain/4644.jpg inflating: IntelImageClassification/train/mountain/4676.jpg inflating: IntelImageClassification/train/mountain/4704.jpg inflating: IntelImageClassification/train/mountain/4768.jpg inflating: IntelImageClassification/train/mountain/480.jpg inflating: IntelImageClassification/train/mountain/4850.jpg inflating: IntelImageClassification/train/mountain/4864.jpg inflating: IntelImageClassification/train/mountain/4913.jpg inflating: IntelImageClassification/train/mountain/4924.jpg inflating: IntelImageClassification/train/mountain/4977.jpg inflating: IntelImageClassification/train/mountain/5065.jpg inflating: IntelImageClassification/train/mountain/5093.jpg inflating: IntelImageClassification/train/mountain/5117.jpg inflating: IntelImageClassification/train/mountain/5122.jpg inflating: IntelImageClassification/train/mountain/5234.jpg inflating: IntelImageClassification/train/mountain/5272.jpg inflating: IntelImageClassification/train/mountain/5276.jpg inflating: IntelImageClassification/train/mountain/5296.jpg inflating: IntelImageClassification/train/mountain/5306.jpg inflating: IntelImageClassification/train/mountain/5396.jpg inflating: IntelImageClassification/train/mountain/543.jpg inflating: IntelImageClassification/train/mountain/5431.jpg inflating: IntelImageClassification/train/mountain/5433.jpg inflating: IntelImageClassification/train/mountain/5485.jpg inflating: IntelImageClassification/train/mountain/5532.jpg inflating: IntelImageClassification/train/mountain/5538.jpg inflating: IntelImageClassification/train/mountain/5554.jpg inflating: IntelImageClassification/train/mountain/5641.jpg inflating: IntelImageClassification/train/mountain/5655.jpg inflating: IntelImageClassification/train/mountain/5676.jpg inflating: IntelImageClassification/train/mountain/5680.jpg inflating: IntelImageClassification/train/mountain/5722.jpg inflating: IntelImageClassification/train/mountain/574.jpg inflating: IntelImageClassification/train/mountain/5753.jpg inflating: IntelImageClassification/train/mountain/5790.jpg inflating: IntelImageClassification/train/mountain/5795.jpg inflating: IntelImageClassification/train/mountain/5832.jpg inflating: IntelImageClassification/train/mountain/5878.jpg inflating: IntelImageClassification/train/mountain/5895.jpg inflating: IntelImageClassification/train/mountain/5926.jpg inflating: IntelImageClassification/train/mountain/5937.jpg inflating: IntelImageClassification/train/mountain/5940.jpg inflating: IntelImageClassification/train/mountain/5963.jpg inflating: IntelImageClassification/train/mountain/6006.jpg inflating: IntelImageClassification/train/mountain/6022.jpg inflating: IntelImageClassification/train/mountain/6036.jpg inflating: IntelImageClassification/train/mountain/6115.jpg inflating: IntelImageClassification/train/mountain/6147.jpg inflating: IntelImageClassification/train/mountain/6156.jpg inflating: IntelImageClassification/train/mountain/6172.jpg inflating: IntelImageClassification/train/mountain/6273.jpg inflating: IntelImageClassification/train/mountain/6323.jpg inflating: IntelImageClassification/train/mountain/6367.jpg inflating: IntelImageClassification/train/mountain/6411.jpg inflating: IntelImageClassification/train/mountain/6455.jpg inflating: IntelImageClassification/train/mountain/6471.jpg inflating: IntelImageClassification/train/mountain/6510.jpg inflating: IntelImageClassification/train/mountain/6592.jpg inflating: IntelImageClassification/train/mountain/6600.jpg inflating: IntelImageClassification/train/mountain/6633.jpg inflating: IntelImageClassification/train/mountain/6664.jpg inflating: IntelImageClassification/train/mountain/6676.jpg inflating: IntelImageClassification/train/mountain/6697.jpg inflating: IntelImageClassification/train/mountain/6760.jpg inflating: IntelImageClassification/train/mountain/6770.jpg inflating: IntelImageClassification/train/mountain/6782.jpg inflating: IntelImageClassification/train/mountain/6907.jpg inflating: IntelImageClassification/train/mountain/6944.jpg inflating: IntelImageClassification/train/mountain/6972.jpg inflating: IntelImageClassification/train/mountain/7037.jpg inflating: IntelImageClassification/train/mountain/7049.jpg inflating: IntelImageClassification/train/mountain/7061.jpg inflating: IntelImageClassification/train/mountain/7073.jpg inflating: IntelImageClassification/train/mountain/7139.jpg inflating: IntelImageClassification/train/mountain/7226.jpg inflating: IntelImageClassification/train/mountain/7268.jpg inflating: IntelImageClassification/train/mountain/7278.jpg inflating: IntelImageClassification/train/mountain/7416.jpg inflating: IntelImageClassification/train/mountain/7679.jpg inflating: IntelImageClassification/train/mountain/7693.jpg inflating: IntelImageClassification/train/mountain/7695.jpg inflating: IntelImageClassification/train/mountain/7698.jpg inflating: IntelImageClassification/train/mountain/7700.jpg inflating: IntelImageClassification/train/mountain/7744.jpg inflating: IntelImageClassification/train/mountain/7763.jpg inflating: IntelImageClassification/train/mountain/7787.jpg inflating: IntelImageClassification/train/mountain/7836.jpg inflating: IntelImageClassification/train/mountain/784.jpg inflating: IntelImageClassification/train/mountain/7865.jpg inflating: IntelImageClassification/train/mountain/7922.jpg inflating: IntelImageClassification/train/mountain/8045.jpg inflating: IntelImageClassification/train/mountain/8105.jpg inflating: IntelImageClassification/train/mountain/8136.jpg inflating: IntelImageClassification/train/mountain/8195.jpg inflating: IntelImageClassification/train/mountain/8200.jpg inflating: IntelImageClassification/train/mountain/822.jpg inflating: IntelImageClassification/train/mountain/8223.jpg inflating: IntelImageClassification/train/mountain/8235.jpg inflating: IntelImageClassification/train/mountain/8242.jpg inflating: IntelImageClassification/train/mountain/8331.jpg inflating: IntelImageClassification/train/mountain/8343.jpg inflating: IntelImageClassification/train/mountain/8377.jpg inflating: IntelImageClassification/train/mountain/8404.jpg inflating: IntelImageClassification/train/mountain/8409.jpg inflating: IntelImageClassification/train/mountain/8433.jpg inflating: IntelImageClassification/train/mountain/8450.jpg inflating: IntelImageClassification/train/mountain/8479.jpg inflating: IntelImageClassification/train/mountain/848.jpg inflating: IntelImageClassification/train/mountain/8488.jpg inflating: IntelImageClassification/train/mountain/8498.jpg inflating: IntelImageClassification/train/mountain/85.jpg inflating: IntelImageClassification/train/mountain/8573.jpg inflating: IntelImageClassification/train/mountain/8640.jpg inflating: IntelImageClassification/train/mountain/8655.jpg inflating: IntelImageClassification/train/mountain/8679.jpg inflating: IntelImageClassification/train/mountain/8724.jpg inflating: IntelImageClassification/train/mountain/8816.jpg inflating: IntelImageClassification/train/mountain/8883.jpg inflating: IntelImageClassification/train/mountain/8895.jpg inflating: IntelImageClassification/train/mountain/8902.jpg inflating: IntelImageClassification/train/mountain/8924.jpg inflating: IntelImageClassification/train/mountain/8940.jpg inflating: IntelImageClassification/train/mountain/899.jpg inflating: IntelImageClassification/train/mountain/9012.jpg inflating: IntelImageClassification/train/mountain/9045.jpg inflating: IntelImageClassification/train/mountain/9071.jpg inflating: IntelImageClassification/train/mountain/9105.jpg inflating: IntelImageClassification/train/mountain/9120.jpg inflating: IntelImageClassification/train/mountain/914.jpg inflating: IntelImageClassification/train/mountain/9147.jpg inflating: IntelImageClassification/train/mountain/9186.jpg inflating: IntelImageClassification/train/mountain/9213.jpg inflating: IntelImageClassification/train/mountain/9276.jpg inflating: IntelImageClassification/train/mountain/9409.jpg inflating: IntelImageClassification/train/mountain/9444.jpg inflating: IntelImageClassification/train/mountain/9460.jpg inflating: IntelImageClassification/train/mountain/9533.jpg inflating: IntelImageClassification/train/mountain/9536.jpg inflating: IntelImageClassification/train/mountain/9568.jpg inflating: IntelImageClassification/train/mountain/959.jpg inflating: IntelImageClassification/train/mountain/9610.jpg inflating: IntelImageClassification/train/mountain/9633.jpg inflating: IntelImageClassification/train/mountain/964.jpg inflating: IntelImageClassification/train/mountain/9642.jpg inflating: IntelImageClassification/train/mountain/9669.jpg inflating: IntelImageClassification/train/mountain/9686.jpg inflating: IntelImageClassification/train/mountain/9689.jpg inflating: IntelImageClassification/train/mountain/972.jpg inflating: IntelImageClassification/train/mountain/976.jpg inflating: IntelImageClassification/train/mountain/9779.jpg inflating: IntelImageClassification/train/mountain/9856.jpg inflating: IntelImageClassification/train/mountain/9868.jpg inflating: IntelImageClassification/train/mountain/9884.jpg inflating: IntelImageClassification/train/mountain/9901.jpg inflating: IntelImageClassification/train/mountain/9907.jpg inflating: IntelImageClassification/train/mountain/9941.jpg inflating: IntelImageClassification/train/mountain/9952.jpg creating: IntelImageClassification/train/sea/ inflating: IntelImageClassification/train/sea/10053.jpg inflating: IntelImageClassification/train/sea/10068.jpg inflating: IntelImageClassification/train/sea/10095.jpg inflating: IntelImageClassification/train/sea/10108.jpg inflating: IntelImageClassification/train/sea/10120.jpg inflating: IntelImageClassification/train/sea/10122.jpg inflating: IntelImageClassification/train/sea/10128.jpg inflating: IntelImageClassification/train/sea/1014.jpg inflating: IntelImageClassification/train/sea/10150.jpg inflating: IntelImageClassification/train/sea/10177.jpg inflating: IntelImageClassification/train/sea/10183.jpg inflating: IntelImageClassification/train/sea/102.jpg inflating: IntelImageClassification/train/sea/10203.jpg inflating: IntelImageClassification/train/sea/1021.jpg inflating: IntelImageClassification/train/sea/10237.jpg inflating: IntelImageClassification/train/sea/10262.jpg inflating: IntelImageClassification/train/sea/10345.jpg inflating: IntelImageClassification/train/sea/10373.jpg inflating: IntelImageClassification/train/sea/10399.jpg inflating: IntelImageClassification/train/sea/10426.jpg inflating: IntelImageClassification/train/sea/10443.jpg inflating: IntelImageClassification/train/sea/10493.jpg inflating: IntelImageClassification/train/sea/10525.jpg inflating: IntelImageClassification/train/sea/10529.jpg inflating: IntelImageClassification/train/sea/10532.jpg inflating: IntelImageClassification/train/sea/10543.jpg inflating: IntelImageClassification/train/sea/10551.jpg inflating: IntelImageClassification/train/sea/10595.jpg inflating: IntelImageClassification/train/sea/10602.jpg inflating: IntelImageClassification/train/sea/10619.jpg inflating: IntelImageClassification/train/sea/10621.jpg inflating: IntelImageClassification/train/sea/10658.jpg inflating: IntelImageClassification/train/sea/10671.jpg inflating: IntelImageClassification/train/sea/10683.jpg inflating: IntelImageClassification/train/sea/10715.jpg inflating: IntelImageClassification/train/sea/10725.jpg inflating: IntelImageClassification/train/sea/1075.jpg inflating: IntelImageClassification/train/sea/10766.jpg inflating: IntelImageClassification/train/sea/10775.jpg inflating: IntelImageClassification/train/sea/10802.jpg inflating: IntelImageClassification/train/sea/10803.jpg inflating: IntelImageClassification/train/sea/10826.jpg inflating: IntelImageClassification/train/sea/10833.jpg inflating: IntelImageClassification/train/sea/10882.jpg inflating: IntelImageClassification/train/sea/10883.jpg inflating: IntelImageClassification/train/sea/10904.jpg inflating: IntelImageClassification/train/sea/10948.jpg inflating: IntelImageClassification/train/sea/10950.jpg inflating: IntelImageClassification/train/sea/10955.jpg inflating: IntelImageClassification/train/sea/10967.jpg inflating: IntelImageClassification/train/sea/10982.jpg inflating: IntelImageClassification/train/sea/10983.jpg inflating: IntelImageClassification/train/sea/10995.jpg inflating: IntelImageClassification/train/sea/11026.jpg inflating: IntelImageClassification/train/sea/11033.jpg inflating: IntelImageClassification/train/sea/11047.jpg inflating: IntelImageClassification/train/sea/11053.jpg inflating: IntelImageClassification/train/sea/11056.jpg inflating: IntelImageClassification/train/sea/11081.jpg inflating: IntelImageClassification/train/sea/11107.jpg inflating: IntelImageClassification/train/sea/11129.jpg inflating: IntelImageClassification/train/sea/11133.jpg inflating: IntelImageClassification/train/sea/11150.jpg inflating: IntelImageClassification/train/sea/11152.jpg inflating: IntelImageClassification/train/sea/11177.jpg inflating: IntelImageClassification/train/sea/11186.jpg inflating: IntelImageClassification/train/sea/11237.jpg inflating: IntelImageClassification/train/sea/11271.jpg inflating: IntelImageClassification/train/sea/11275.jpg inflating: IntelImageClassification/train/sea/11281.jpg inflating: IntelImageClassification/train/sea/11327.jpg inflating: IntelImageClassification/train/sea/11347.jpg inflating: IntelImageClassification/train/sea/11368.jpg inflating: IntelImageClassification/train/sea/1138.jpg inflating: IntelImageClassification/train/sea/11382.jpg inflating: IntelImageClassification/train/sea/11388.jpg inflating: IntelImageClassification/train/sea/11412.jpg inflating: IntelImageClassification/train/sea/11438.jpg inflating: IntelImageClassification/train/sea/11465.jpg inflating: IntelImageClassification/train/sea/11489.jpg inflating: IntelImageClassification/train/sea/11493.jpg inflating: IntelImageClassification/train/sea/11498.jpg inflating: IntelImageClassification/train/sea/11507.jpg inflating: IntelImageClassification/train/sea/11526.jpg inflating: IntelImageClassification/train/sea/11559.jpg inflating: IntelImageClassification/train/sea/11561.jpg inflating: IntelImageClassification/train/sea/11591.jpg inflating: IntelImageClassification/train/sea/116.jpg inflating: IntelImageClassification/train/sea/11632.jpg inflating: IntelImageClassification/train/sea/11647.jpg inflating: IntelImageClassification/train/sea/11653.jpg inflating: IntelImageClassification/train/sea/11664.jpg inflating: IntelImageClassification/train/sea/11675.jpg inflating: IntelImageClassification/train/sea/11681.jpg inflating: IntelImageClassification/train/sea/11694.jpg inflating: IntelImageClassification/train/sea/11698.jpg inflating: IntelImageClassification/train/sea/1172.jpg inflating: IntelImageClassification/train/sea/11728.jpg inflating: IntelImageClassification/train/sea/11739.jpg inflating: IntelImageClassification/train/sea/11743.jpg inflating: IntelImageClassification/train/sea/11745.jpg inflating: IntelImageClassification/train/sea/11749.jpg inflating: IntelImageClassification/train/sea/1175.jpg inflating: IntelImageClassification/train/sea/11751.jpg inflating: IntelImageClassification/train/sea/11765.jpg inflating: IntelImageClassification/train/sea/1178.jpg inflating: IntelImageClassification/train/sea/11786.jpg inflating: IntelImageClassification/train/sea/11794.jpg inflating: IntelImageClassification/train/sea/11804.jpg inflating: IntelImageClassification/train/sea/11807.jpg inflating: IntelImageClassification/train/sea/11844.jpg inflating: IntelImageClassification/train/sea/11861.jpg inflating: IntelImageClassification/train/sea/11880.jpg inflating: IntelImageClassification/train/sea/11905.jpg inflating: IntelImageClassification/train/sea/11922.jpg inflating: IntelImageClassification/train/sea/11974.jpg inflating: IntelImageClassification/train/sea/1198.jpg inflating: IntelImageClassification/train/sea/11985.jpg inflating: IntelImageClassification/train/sea/12001.jpg inflating: IntelImageClassification/train/sea/12029.jpg inflating: IntelImageClassification/train/sea/12051.jpg inflating: IntelImageClassification/train/sea/12054.jpg inflating: IntelImageClassification/train/sea/12055.jpg inflating: IntelImageClassification/train/sea/12064.jpg inflating: IntelImageClassification/train/sea/12071.jpg inflating: IntelImageClassification/train/sea/12113.jpg inflating: IntelImageClassification/train/sea/12116.jpg inflating: IntelImageClassification/train/sea/12121.jpg inflating: IntelImageClassification/train/sea/12146.jpg inflating: IntelImageClassification/train/sea/12178.jpg inflating: IntelImageClassification/train/sea/12204.jpg inflating: IntelImageClassification/train/sea/12214.jpg inflating: IntelImageClassification/train/sea/12226.jpg inflating: IntelImageClassification/train/sea/12235.jpg inflating: IntelImageClassification/train/sea/12243.jpg inflating: IntelImageClassification/train/sea/12249.jpg inflating: IntelImageClassification/train/sea/12255.jpg inflating: IntelImageClassification/train/sea/12258.jpg inflating: IntelImageClassification/train/sea/12270.jpg inflating: IntelImageClassification/train/sea/12287.jpg inflating: IntelImageClassification/train/sea/12303.jpg inflating: IntelImageClassification/train/sea/12309.jpg inflating: IntelImageClassification/train/sea/12313.jpg inflating: IntelImageClassification/train/sea/12316.jpg inflating: IntelImageClassification/train/sea/12338.jpg inflating: IntelImageClassification/train/sea/1236.jpg inflating: IntelImageClassification/train/sea/12385.jpg inflating: IntelImageClassification/train/sea/12389.jpg inflating: IntelImageClassification/train/sea/12424.jpg inflating: IntelImageClassification/train/sea/12429.jpg inflating: IntelImageClassification/train/sea/12471.jpg inflating: IntelImageClassification/train/sea/12479.jpg inflating: IntelImageClassification/train/sea/12485.jpg inflating: IntelImageClassification/train/sea/12487.jpg inflating: IntelImageClassification/train/sea/12546.jpg inflating: IntelImageClassification/train/sea/12618.jpg inflating: IntelImageClassification/train/sea/12620.jpg inflating: IntelImageClassification/train/sea/12658.jpg inflating: IntelImageClassification/train/sea/12693.jpg inflating: IntelImageClassification/train/sea/12737.jpg inflating: IntelImageClassification/train/sea/12752.jpg inflating: IntelImageClassification/train/sea/12767.jpg inflating: IntelImageClassification/train/sea/12821.jpg inflating: IntelImageClassification/train/sea/12839.jpg inflating: IntelImageClassification/train/sea/12885.jpg inflating: IntelImageClassification/train/sea/12892.jpg inflating: IntelImageClassification/train/sea/12910.jpg inflating: IntelImageClassification/train/sea/12929.jpg inflating: IntelImageClassification/train/sea/12933.jpg inflating: IntelImageClassification/train/sea/1295.jpg inflating: IntelImageClassification/train/sea/12965.jpg inflating: IntelImageClassification/train/sea/13051.jpg inflating: IntelImageClassification/train/sea/13054.jpg inflating: IntelImageClassification/train/sea/13061.jpg inflating: IntelImageClassification/train/sea/13064.jpg inflating: IntelImageClassification/train/sea/13078.jpg inflating: IntelImageClassification/train/sea/13092.jpg inflating: IntelImageClassification/train/sea/13160.jpg inflating: IntelImageClassification/train/sea/13166.jpg inflating: IntelImageClassification/train/sea/1318.jpg inflating: IntelImageClassification/train/sea/13194.jpg inflating: IntelImageClassification/train/sea/13207.jpg inflating: IntelImageClassification/train/sea/13241.jpg inflating: IntelImageClassification/train/sea/13249.jpg inflating: IntelImageClassification/train/sea/13257.jpg inflating: IntelImageClassification/train/sea/1326.jpg inflating: IntelImageClassification/train/sea/13273.jpg inflating: IntelImageClassification/train/sea/13306.jpg inflating: IntelImageClassification/train/sea/13361.jpg inflating: IntelImageClassification/train/sea/13366.jpg inflating: IntelImageClassification/train/sea/1342.jpg inflating: IntelImageClassification/train/sea/1345.jpg inflating: IntelImageClassification/train/sea/13479.jpg inflating: IntelImageClassification/train/sea/13482.jpg inflating: IntelImageClassification/train/sea/13494.jpg inflating: IntelImageClassification/train/sea/13506.jpg inflating: IntelImageClassification/train/sea/13535.jpg inflating: IntelImageClassification/train/sea/13560.jpg inflating: IntelImageClassification/train/sea/13565.jpg inflating: IntelImageClassification/train/sea/136.jpg inflating: IntelImageClassification/train/sea/13612.jpg inflating: IntelImageClassification/train/sea/13617.jpg inflating: IntelImageClassification/train/sea/13665.jpg inflating: IntelImageClassification/train/sea/13679.jpg inflating: IntelImageClassification/train/sea/1377.jpg inflating: IntelImageClassification/train/sea/13780.jpg inflating: IntelImageClassification/train/sea/13782.jpg inflating: IntelImageClassification/train/sea/13784.jpg inflating: IntelImageClassification/train/sea/13785.jpg inflating: IntelImageClassification/train/sea/13873.jpg inflating: IntelImageClassification/train/sea/13898.jpg inflating: IntelImageClassification/train/sea/13911.jpg inflating: IntelImageClassification/train/sea/13926.jpg inflating: IntelImageClassification/train/sea/1394.jpg inflating: IntelImageClassification/train/sea/13948.jpg inflating: IntelImageClassification/train/sea/13981.jpg inflating: IntelImageClassification/train/sea/14048.jpg inflating: IntelImageClassification/train/sea/14056.jpg inflating: IntelImageClassification/train/sea/14057.jpg inflating: IntelImageClassification/train/sea/14076.jpg inflating: IntelImageClassification/train/sea/14145.jpg inflating: IntelImageClassification/train/sea/14170.jpg inflating: IntelImageClassification/train/sea/14183.jpg inflating: IntelImageClassification/train/sea/1421.jpg inflating: IntelImageClassification/train/sea/14220.jpg inflating: IntelImageClassification/train/sea/14279.jpg inflating: IntelImageClassification/train/sea/14328.jpg inflating: IntelImageClassification/train/sea/14337.jpg inflating: IntelImageClassification/train/sea/1434.jpg inflating: IntelImageClassification/train/sea/14343.jpg inflating: IntelImageClassification/train/sea/14349.jpg inflating: IntelImageClassification/train/sea/14382.jpg inflating: IntelImageClassification/train/sea/14394.jpg inflating: IntelImageClassification/train/sea/14396.jpg inflating: IntelImageClassification/train/sea/14407.jpg inflating: IntelImageClassification/train/sea/14425.jpg inflating: IntelImageClassification/train/sea/14432.jpg inflating: IntelImageClassification/train/sea/14448.jpg inflating: IntelImageClassification/train/sea/14461.jpg inflating: IntelImageClassification/train/sea/14466.jpg inflating: IntelImageClassification/train/sea/14468.jpg inflating: IntelImageClassification/train/sea/14470.jpg inflating: IntelImageClassification/train/sea/14489.jpg inflating: IntelImageClassification/train/sea/14492.jpg inflating: IntelImageClassification/train/sea/1450.jpg inflating: IntelImageClassification/train/sea/14514.jpg inflating: IntelImageClassification/train/sea/14519.jpg inflating: IntelImageClassification/train/sea/14532.jpg inflating: IntelImageClassification/train/sea/14552.jpg inflating: IntelImageClassification/train/sea/14553.jpg inflating: IntelImageClassification/train/sea/14569.jpg inflating: IntelImageClassification/train/sea/14588.jpg inflating: IntelImageClassification/train/sea/14593.jpg inflating: IntelImageClassification/train/sea/14599.jpg inflating: IntelImageClassification/train/sea/14620.jpg inflating: IntelImageClassification/train/sea/14626.jpg inflating: IntelImageClassification/train/sea/14665.jpg inflating: IntelImageClassification/train/sea/14706.jpg inflating: IntelImageClassification/train/sea/14741.jpg inflating: IntelImageClassification/train/sea/14763.jpg inflating: IntelImageClassification/train/sea/14797.jpg inflating: IntelImageClassification/train/sea/14817.jpg inflating: IntelImageClassification/train/sea/14825.jpg inflating: IntelImageClassification/train/sea/14833.jpg inflating: IntelImageClassification/train/sea/14836.jpg inflating: IntelImageClassification/train/sea/1484.jpg inflating: IntelImageClassification/train/sea/14843.jpg inflating: IntelImageClassification/train/sea/14865.jpg inflating: IntelImageClassification/train/sea/14879.jpg inflating: IntelImageClassification/train/sea/14902.jpg inflating: IntelImageClassification/train/sea/14904.jpg inflating: IntelImageClassification/train/sea/14924.jpg inflating: IntelImageClassification/train/sea/14928.jpg inflating: IntelImageClassification/train/sea/14949.jpg inflating: IntelImageClassification/train/sea/14959.jpg inflating: IntelImageClassification/train/sea/1498.jpg inflating: IntelImageClassification/train/sea/15003.jpg inflating: IntelImageClassification/train/sea/15051.jpg inflating: IntelImageClassification/train/sea/15059.jpg inflating: IntelImageClassification/train/sea/15073.jpg inflating: IntelImageClassification/train/sea/15087.jpg inflating: IntelImageClassification/train/sea/15097.jpg inflating: IntelImageClassification/train/sea/15124.jpg inflating: IntelImageClassification/train/sea/15165.jpg inflating: IntelImageClassification/train/sea/15185.jpg inflating: IntelImageClassification/train/sea/15188.jpg inflating: IntelImageClassification/train/sea/15210.jpg inflating: IntelImageClassification/train/sea/15212.jpg inflating: IntelImageClassification/train/sea/15214.jpg inflating: IntelImageClassification/train/sea/15228.jpg inflating: IntelImageClassification/train/sea/15289.jpg inflating: IntelImageClassification/train/sea/15292.jpg inflating: IntelImageClassification/train/sea/15294.jpg inflating: IntelImageClassification/train/sea/15330.jpg inflating: IntelImageClassification/train/sea/15341.jpg inflating: IntelImageClassification/train/sea/15356.jpg inflating: IntelImageClassification/train/sea/15377.jpg inflating: IntelImageClassification/train/sea/15393.jpg inflating: IntelImageClassification/train/sea/15395.jpg inflating: IntelImageClassification/train/sea/15443.jpg inflating: IntelImageClassification/train/sea/15453.jpg inflating: IntelImageClassification/train/sea/15456.jpg inflating: IntelImageClassification/train/sea/15460.jpg inflating: IntelImageClassification/train/sea/15479.jpg inflating: IntelImageClassification/train/sea/15480.jpg inflating: IntelImageClassification/train/sea/15483.jpg inflating: IntelImageClassification/train/sea/15497.jpg inflating: IntelImageClassification/train/sea/15511.jpg inflating: IntelImageClassification/train/sea/15536.jpg inflating: IntelImageClassification/train/sea/15579.jpg inflating: IntelImageClassification/train/sea/15582.jpg inflating: IntelImageClassification/train/sea/15595.jpg inflating: IntelImageClassification/train/sea/15604.jpg inflating: IntelImageClassification/train/sea/15615.jpg inflating: IntelImageClassification/train/sea/15617.jpg inflating: IntelImageClassification/train/sea/15618.jpg inflating: IntelImageClassification/train/sea/15635.jpg inflating: IntelImageClassification/train/sea/15637.jpg inflating: IntelImageClassification/train/sea/15651.jpg inflating: IntelImageClassification/train/sea/15659.jpg inflating: IntelImageClassification/train/sea/15666.jpg inflating: IntelImageClassification/train/sea/15671.jpg inflating: IntelImageClassification/train/sea/15691.jpg inflating: IntelImageClassification/train/sea/15711.jpg inflating: IntelImageClassification/train/sea/15769.jpg inflating: IntelImageClassification/train/sea/15775.jpg inflating: IntelImageClassification/train/sea/15809.jpg inflating: IntelImageClassification/train/sea/15810.jpg inflating: IntelImageClassification/train/sea/15817.jpg inflating: IntelImageClassification/train/sea/15820.jpg inflating: IntelImageClassification/train/sea/15821.jpg inflating: IntelImageClassification/train/sea/15880.jpg inflating: IntelImageClassification/train/sea/15893.jpg inflating: IntelImageClassification/train/sea/15921.jpg inflating: IntelImageClassification/train/sea/15925.jpg inflating: IntelImageClassification/train/sea/15937.jpg inflating: IntelImageClassification/train/sea/15986.jpg inflating: IntelImageClassification/train/sea/15989.jpg inflating: IntelImageClassification/train/sea/16049.jpg inflating: IntelImageClassification/train/sea/16052.jpg inflating: IntelImageClassification/train/sea/16061.jpg inflating: IntelImageClassification/train/sea/16067.jpg inflating: IntelImageClassification/train/sea/16091.jpg inflating: IntelImageClassification/train/sea/16092.jpg inflating: IntelImageClassification/train/sea/16109.jpg inflating: IntelImageClassification/train/sea/16113.jpg inflating: IntelImageClassification/train/sea/16122.jpg inflating: IntelImageClassification/train/sea/16130.jpg inflating: IntelImageClassification/train/sea/16136.jpg inflating: IntelImageClassification/train/sea/16147.jpg inflating: IntelImageClassification/train/sea/1616.jpg inflating: IntelImageClassification/train/sea/16184.jpg inflating: IntelImageClassification/train/sea/1619.jpg inflating: IntelImageClassification/train/sea/16206.jpg inflating: IntelImageClassification/train/sea/16297.jpg inflating: IntelImageClassification/train/sea/16310.jpg inflating: IntelImageClassification/train/sea/16372.jpg inflating: IntelImageClassification/train/sea/16385.jpg inflating: IntelImageClassification/train/sea/16476.jpg inflating: IntelImageClassification/train/sea/16485.jpg inflating: IntelImageClassification/train/sea/165.jpg inflating: IntelImageClassification/train/sea/1650.jpg inflating: IntelImageClassification/train/sea/1654.jpg inflating: IntelImageClassification/train/sea/16555.jpg inflating: IntelImageClassification/train/sea/16563.jpg inflating: IntelImageClassification/train/sea/16573.jpg inflating: IntelImageClassification/train/sea/16581.jpg inflating: IntelImageClassification/train/sea/16621.jpg inflating: IntelImageClassification/train/sea/16717.jpg inflating: IntelImageClassification/train/sea/1673.jpg inflating: IntelImageClassification/train/sea/1675.jpg inflating: IntelImageClassification/train/sea/1679.jpg inflating: IntelImageClassification/train/sea/16865.jpg inflating: IntelImageClassification/train/sea/16868.jpg inflating: IntelImageClassification/train/sea/16899.jpg inflating: IntelImageClassification/train/sea/16944.jpg inflating: IntelImageClassification/train/sea/1696.jpg inflating: IntelImageClassification/train/sea/16984.jpg inflating: IntelImageClassification/train/sea/17024.jpg inflating: IntelImageClassification/train/sea/17045.jpg inflating: IntelImageClassification/train/sea/1706.jpg inflating: IntelImageClassification/train/sea/17060.jpg inflating: IntelImageClassification/train/sea/1707.jpg inflating: IntelImageClassification/train/sea/17110.jpg inflating: IntelImageClassification/train/sea/17175.jpg inflating: IntelImageClassification/train/sea/17176.jpg inflating: IntelImageClassification/train/sea/17181.jpg inflating: IntelImageClassification/train/sea/17191.jpg inflating: IntelImageClassification/train/sea/17201.jpg inflating: IntelImageClassification/train/sea/17265.jpg inflating: IntelImageClassification/train/sea/17275.jpg inflating: IntelImageClassification/train/sea/17306.jpg inflating: IntelImageClassification/train/sea/17356.jpg inflating: IntelImageClassification/train/sea/17363.jpg inflating: IntelImageClassification/train/sea/174.jpg inflating: IntelImageClassification/train/sea/17402.jpg inflating: IntelImageClassification/train/sea/1741.jpg inflating: IntelImageClassification/train/sea/17426.jpg inflating: IntelImageClassification/train/sea/17499.jpg inflating: IntelImageClassification/train/sea/17509.jpg inflating: IntelImageClassification/train/sea/17526.jpg inflating: IntelImageClassification/train/sea/17543.jpg inflating: IntelImageClassification/train/sea/17554.jpg inflating: IntelImageClassification/train/sea/17585.jpg inflating: IntelImageClassification/train/sea/17589.jpg inflating: IntelImageClassification/train/sea/17603.jpg inflating: IntelImageClassification/train/sea/17607.jpg inflating: IntelImageClassification/train/sea/17645.jpg inflating: IntelImageClassification/train/sea/17666.jpg inflating: IntelImageClassification/train/sea/17672.jpg inflating: IntelImageClassification/train/sea/17691.jpg inflating: IntelImageClassification/train/sea/17701.jpg inflating: IntelImageClassification/train/sea/17727.jpg inflating: IntelImageClassification/train/sea/17759.jpg inflating: IntelImageClassification/train/sea/17770.jpg inflating: IntelImageClassification/train/sea/17776.jpg inflating: IntelImageClassification/train/sea/17784.jpg inflating: IntelImageClassification/train/sea/17788.jpg inflating: IntelImageClassification/train/sea/17798.jpg inflating: IntelImageClassification/train/sea/178.jpg inflating: IntelImageClassification/train/sea/17807.jpg inflating: IntelImageClassification/train/sea/17819.jpg inflating: IntelImageClassification/train/sea/17837.jpg inflating: IntelImageClassification/train/sea/17895.jpg inflating: IntelImageClassification/train/sea/17902.jpg inflating: IntelImageClassification/train/sea/1791.jpg inflating: IntelImageClassification/train/sea/17933.jpg inflating: IntelImageClassification/train/sea/17937.jpg inflating: IntelImageClassification/train/sea/17942.jpg inflating: IntelImageClassification/train/sea/17948.jpg inflating: IntelImageClassification/train/sea/17992.jpg inflating: IntelImageClassification/train/sea/17993.jpg inflating: IntelImageClassification/train/sea/18011.jpg inflating: IntelImageClassification/train/sea/18023.jpg inflating: IntelImageClassification/train/sea/18027.jpg inflating: IntelImageClassification/train/sea/18035.jpg inflating: IntelImageClassification/train/sea/18063.jpg inflating: IntelImageClassification/train/sea/18065.jpg inflating: IntelImageClassification/train/sea/18100.jpg inflating: IntelImageClassification/train/sea/18101.jpg inflating: IntelImageClassification/train/sea/18129.jpg inflating: IntelImageClassification/train/sea/18144.jpg inflating: IntelImageClassification/train/sea/18150.jpg inflating: IntelImageClassification/train/sea/18205.jpg inflating: IntelImageClassification/train/sea/18238.jpg inflating: IntelImageClassification/train/sea/18302.jpg inflating: IntelImageClassification/train/sea/18316.jpg inflating: IntelImageClassification/train/sea/1832.jpg inflating: IntelImageClassification/train/sea/18325.jpg inflating: IntelImageClassification/train/sea/18373.jpg inflating: IntelImageClassification/train/sea/1840.jpg inflating: IntelImageClassification/train/sea/18403.jpg inflating: IntelImageClassification/train/sea/18409.jpg inflating: IntelImageClassification/train/sea/18425.jpg inflating: IntelImageClassification/train/sea/18433.jpg inflating: IntelImageClassification/train/sea/18443.jpg inflating: IntelImageClassification/train/sea/18445.jpg inflating: IntelImageClassification/train/sea/18462.jpg inflating: IntelImageClassification/train/sea/18468.jpg inflating: IntelImageClassification/train/sea/18480.jpg inflating: IntelImageClassification/train/sea/18499.jpg inflating: IntelImageClassification/train/sea/1857.jpg inflating: IntelImageClassification/train/sea/18573.jpg inflating: IntelImageClassification/train/sea/18587.jpg inflating: IntelImageClassification/train/sea/18598.jpg inflating: IntelImageClassification/train/sea/18612.jpg inflating: IntelImageClassification/train/sea/1862.jpg inflating: IntelImageClassification/train/sea/18670.jpg inflating: IntelImageClassification/train/sea/18671.jpg inflating: IntelImageClassification/train/sea/18677.jpg inflating: IntelImageClassification/train/sea/18689.jpg inflating: IntelImageClassification/train/sea/18730.jpg inflating: IntelImageClassification/train/sea/1874.jpg inflating: IntelImageClassification/train/sea/18741.jpg inflating: IntelImageClassification/train/sea/18748.jpg inflating: IntelImageClassification/train/sea/18761.jpg inflating: IntelImageClassification/train/sea/18780.jpg inflating: IntelImageClassification/train/sea/18790.jpg inflating: IntelImageClassification/train/sea/18843.jpg inflating: IntelImageClassification/train/sea/18872.jpg inflating: IntelImageClassification/train/sea/18876.jpg inflating: IntelImageClassification/train/sea/18878.jpg inflating: IntelImageClassification/train/sea/1890.jpg inflating: IntelImageClassification/train/sea/1895.jpg inflating: IntelImageClassification/train/sea/18950.jpg inflating: IntelImageClassification/train/sea/18958.jpg inflating: IntelImageClassification/train/sea/18977.jpg inflating: IntelImageClassification/train/sea/18978.jpg inflating: IntelImageClassification/train/sea/18999.jpg inflating: IntelImageClassification/train/sea/19030.jpg inflating: IntelImageClassification/train/sea/19068.jpg inflating: IntelImageClassification/train/sea/19076.jpg inflating: IntelImageClassification/train/sea/19098.jpg inflating: IntelImageClassification/train/sea/19103.jpg inflating: IntelImageClassification/train/sea/1911.jpg inflating: IntelImageClassification/train/sea/19112.jpg inflating: IntelImageClassification/train/sea/19122.jpg inflating: IntelImageClassification/train/sea/19133.jpg inflating: IntelImageClassification/train/sea/19168.jpg inflating: IntelImageClassification/train/sea/19176.jpg inflating: IntelImageClassification/train/sea/19204.jpg inflating: IntelImageClassification/train/sea/19225.jpg inflating: IntelImageClassification/train/sea/19244.jpg inflating: IntelImageClassification/train/sea/19253.jpg inflating: IntelImageClassification/train/sea/19289.jpg inflating: IntelImageClassification/train/sea/19294.jpg inflating: IntelImageClassification/train/sea/19304.jpg inflating: IntelImageClassification/train/sea/19306.jpg inflating: IntelImageClassification/train/sea/19311.jpg inflating: IntelImageClassification/train/sea/19323.jpg inflating: IntelImageClassification/train/sea/19328.jpg inflating: IntelImageClassification/train/sea/19348.jpg inflating: IntelImageClassification/train/sea/19353.jpg inflating: IntelImageClassification/train/sea/19355.jpg inflating: IntelImageClassification/train/sea/19356.jpg inflating: IntelImageClassification/train/sea/19367.jpg inflating: IntelImageClassification/train/sea/19371.jpg inflating: IntelImageClassification/train/sea/19378.jpg inflating: IntelImageClassification/train/sea/19384.jpg inflating: IntelImageClassification/train/sea/19411.jpg inflating: IntelImageClassification/train/sea/19439.jpg inflating: IntelImageClassification/train/sea/19459.jpg inflating: IntelImageClassification/train/sea/19461.jpg inflating: IntelImageClassification/train/sea/19547.jpg inflating: IntelImageClassification/train/sea/19551.jpg inflating: IntelImageClassification/train/sea/19578.jpg inflating: IntelImageClassification/train/sea/19585.jpg inflating: IntelImageClassification/train/sea/19627.jpg inflating: IntelImageClassification/train/sea/19636.jpg inflating: IntelImageClassification/train/sea/19675.jpg inflating: IntelImageClassification/train/sea/19676.jpg inflating: IntelImageClassification/train/sea/19693.jpg inflating: IntelImageClassification/train/sea/19695.jpg inflating: IntelImageClassification/train/sea/19705.jpg inflating: IntelImageClassification/train/sea/19715.jpg inflating: IntelImageClassification/train/sea/19716.jpg inflating: IntelImageClassification/train/sea/19732.jpg inflating: IntelImageClassification/train/sea/1976.jpg inflating: IntelImageClassification/train/sea/19774.jpg inflating: IntelImageClassification/train/sea/19780.jpg inflating: IntelImageClassification/train/sea/19812.jpg inflating: IntelImageClassification/train/sea/19841.jpg inflating: IntelImageClassification/train/sea/19851.jpg inflating: IntelImageClassification/train/sea/19853.jpg inflating: IntelImageClassification/train/sea/19876.jpg inflating: IntelImageClassification/train/sea/19898.jpg inflating: IntelImageClassification/train/sea/19937.jpg inflating: IntelImageClassification/train/sea/19967.jpg inflating: IntelImageClassification/train/sea/19971.jpg inflating: IntelImageClassification/train/sea/200.jpg inflating: IntelImageClassification/train/sea/20010.jpg inflating: IntelImageClassification/train/sea/20041.jpg inflating: IntelImageClassification/train/sea/2048.jpg inflating: IntelImageClassification/train/sea/2061.jpg inflating: IntelImageClassification/train/sea/2062.jpg inflating: IntelImageClassification/train/sea/207.jpg inflating: IntelImageClassification/train/sea/2070.jpg inflating: IntelImageClassification/train/sea/2080.jpg inflating: IntelImageClassification/train/sea/21.jpg inflating: IntelImageClassification/train/sea/2109.jpg inflating: IntelImageClassification/train/sea/217.jpg inflating: IntelImageClassification/train/sea/2192.jpg inflating: IntelImageClassification/train/sea/2194.jpg inflating: IntelImageClassification/train/sea/2214.jpg inflating: IntelImageClassification/train/sea/2225.jpg inflating: IntelImageClassification/train/sea/224.jpg inflating: IntelImageClassification/train/sea/2272.jpg inflating: IntelImageClassification/train/sea/2291.jpg inflating: IntelImageClassification/train/sea/2318.jpg inflating: IntelImageClassification/train/sea/2334.jpg inflating: IntelImageClassification/train/sea/2365.jpg inflating: IntelImageClassification/train/sea/2371.jpg inflating: IntelImageClassification/train/sea/2384.jpg inflating: IntelImageClassification/train/sea/2391.jpg inflating: IntelImageClassification/train/sea/2407.jpg inflating: IntelImageClassification/train/sea/2409.jpg inflating: IntelImageClassification/train/sea/2460.jpg inflating: IntelImageClassification/train/sea/2462.jpg inflating: IntelImageClassification/train/sea/2484.jpg inflating: IntelImageClassification/train/sea/2486.jpg inflating: IntelImageClassification/train/sea/2489.jpg inflating: IntelImageClassification/train/sea/2508.jpg inflating: IntelImageClassification/train/sea/2515.jpg inflating: IntelImageClassification/train/sea/2516.jpg inflating: IntelImageClassification/train/sea/2529.jpg inflating: IntelImageClassification/train/sea/2544.jpg inflating: IntelImageClassification/train/sea/2547.jpg inflating: IntelImageClassification/train/sea/2548.jpg inflating: IntelImageClassification/train/sea/2550.jpg inflating: IntelImageClassification/train/sea/2566.jpg inflating: IntelImageClassification/train/sea/2589.jpg inflating: IntelImageClassification/train/sea/2594.jpg inflating: IntelImageClassification/train/sea/2596.jpg inflating: IntelImageClassification/train/sea/2616.jpg inflating: IntelImageClassification/train/sea/2619.jpg inflating: IntelImageClassification/train/sea/2621.jpg inflating: IntelImageClassification/train/sea/2668.jpg inflating: IntelImageClassification/train/sea/27.jpg inflating: IntelImageClassification/train/sea/2707.jpg inflating: IntelImageClassification/train/sea/2723.jpg inflating: IntelImageClassification/train/sea/2732.jpg inflating: IntelImageClassification/train/sea/2759.jpg inflating: IntelImageClassification/train/sea/2765.jpg inflating: IntelImageClassification/train/sea/2806.jpg inflating: IntelImageClassification/train/sea/2811.jpg inflating: IntelImageClassification/train/sea/2822.jpg inflating: IntelImageClassification/train/sea/283.jpg inflating: IntelImageClassification/train/sea/2870.jpg inflating: IntelImageClassification/train/sea/2878.jpg inflating: IntelImageClassification/train/sea/2891.jpg inflating: IntelImageClassification/train/sea/2902.jpg inflating: IntelImageClassification/train/sea/2944.jpg inflating: IntelImageClassification/train/sea/2963.jpg inflating: IntelImageClassification/train/sea/298.jpg inflating: IntelImageClassification/train/sea/2991.jpg inflating: IntelImageClassification/train/sea/2996.jpg inflating: IntelImageClassification/train/sea/300.jpg inflating: IntelImageClassification/train/sea/3009.jpg inflating: IntelImageClassification/train/sea/3032.jpg inflating: IntelImageClassification/train/sea/3040.jpg inflating: IntelImageClassification/train/sea/3066.jpg inflating: IntelImageClassification/train/sea/3083.jpg inflating: IntelImageClassification/train/sea/3103.jpg inflating: IntelImageClassification/train/sea/3110.jpg inflating: IntelImageClassification/train/sea/3154.jpg inflating: IntelImageClassification/train/sea/3196.jpg inflating: IntelImageClassification/train/sea/3197.jpg inflating: IntelImageClassification/train/sea/3200.jpg inflating: IntelImageClassification/train/sea/3238.jpg inflating: IntelImageClassification/train/sea/3262.jpg inflating: IntelImageClassification/train/sea/3264.jpg inflating: IntelImageClassification/train/sea/3268.jpg inflating: IntelImageClassification/train/sea/3296.jpg inflating: IntelImageClassification/train/sea/3307.jpg inflating: IntelImageClassification/train/sea/332.jpg inflating: IntelImageClassification/train/sea/3361.jpg inflating: IntelImageClassification/train/sea/3381.jpg inflating: IntelImageClassification/train/sea/341.jpg inflating: IntelImageClassification/train/sea/3467.jpg inflating: IntelImageClassification/train/sea/3479.jpg inflating: IntelImageClassification/train/sea/3484.jpg inflating: IntelImageClassification/train/sea/3491.jpg inflating: IntelImageClassification/train/sea/357.jpg inflating: IntelImageClassification/train/sea/3601.jpg inflating: IntelImageClassification/train/sea/3607.jpg inflating: IntelImageClassification/train/sea/3623.jpg inflating: IntelImageClassification/train/sea/3635.jpg inflating: IntelImageClassification/train/sea/3671.jpg inflating: IntelImageClassification/train/sea/3678.jpg inflating: IntelImageClassification/train/sea/3718.jpg inflating: IntelImageClassification/train/sea/372.jpg inflating: IntelImageClassification/train/sea/3726.jpg inflating: IntelImageClassification/train/sea/376.jpg inflating: IntelImageClassification/train/sea/3795.jpg inflating: IntelImageClassification/train/sea/3810.jpg inflating: IntelImageClassification/train/sea/3812.jpg inflating: IntelImageClassification/train/sea/3841.jpg inflating: IntelImageClassification/train/sea/3882.jpg inflating: IntelImageClassification/train/sea/3884.jpg inflating: IntelImageClassification/train/sea/3952.jpg inflating: IntelImageClassification/train/sea/3968.jpg inflating: IntelImageClassification/train/sea/3980.jpg inflating: IntelImageClassification/train/sea/3984.jpg inflating: IntelImageClassification/train/sea/4017.jpg inflating: IntelImageClassification/train/sea/4027.jpg inflating: IntelImageClassification/train/sea/4047.jpg inflating: IntelImageClassification/train/sea/4076.jpg inflating: IntelImageClassification/train/sea/4116.jpg inflating: IntelImageClassification/train/sea/4202.jpg inflating: IntelImageClassification/train/sea/4211.jpg inflating: IntelImageClassification/train/sea/4256.jpg inflating: IntelImageClassification/train/sea/4287.jpg inflating: IntelImageClassification/train/sea/431.jpg inflating: IntelImageClassification/train/sea/4314.jpg inflating: IntelImageClassification/train/sea/4334.jpg inflating: IntelImageClassification/train/sea/4346.jpg inflating: IntelImageClassification/train/sea/4386.jpg inflating: IntelImageClassification/train/sea/4401.jpg inflating: IntelImageClassification/train/sea/4410.jpg inflating: IntelImageClassification/train/sea/4412.jpg inflating: IntelImageClassification/train/sea/4428.jpg inflating: IntelImageClassification/train/sea/4433.jpg inflating: IntelImageClassification/train/sea/444.jpg inflating: IntelImageClassification/train/sea/4482.jpg inflating: IntelImageClassification/train/sea/449.jpg inflating: IntelImageClassification/train/sea/4514.jpg inflating: IntelImageClassification/train/sea/4529.jpg inflating: IntelImageClassification/train/sea/456.jpg inflating: IntelImageClassification/train/sea/4561.jpg inflating: IntelImageClassification/train/sea/4578.jpg inflating: IntelImageClassification/train/sea/4617.jpg inflating: IntelImageClassification/train/sea/4622.jpg inflating: IntelImageClassification/train/sea/4669.jpg inflating: IntelImageClassification/train/sea/4671.jpg inflating: IntelImageClassification/train/sea/468.jpg inflating: IntelImageClassification/train/sea/4716.jpg inflating: IntelImageClassification/train/sea/4729.jpg inflating: IntelImageClassification/train/sea/4731.jpg inflating: IntelImageClassification/train/sea/4775.jpg inflating: IntelImageClassification/train/sea/4785.jpg inflating: IntelImageClassification/train/sea/4788.jpg inflating: IntelImageClassification/train/sea/4789.jpg inflating: IntelImageClassification/train/sea/4790.jpg inflating: IntelImageClassification/train/sea/4794.jpg inflating: IntelImageClassification/train/sea/4798.jpg inflating: IntelImageClassification/train/sea/4819.jpg inflating: IntelImageClassification/train/sea/4870.jpg inflating: IntelImageClassification/train/sea/4874.jpg inflating: IntelImageClassification/train/sea/4898.jpg inflating: IntelImageClassification/train/sea/4901.jpg inflating: IntelImageClassification/train/sea/4904.jpg inflating: IntelImageClassification/train/sea/4914.jpg inflating: IntelImageClassification/train/sea/4934.jpg inflating: IntelImageClassification/train/sea/4936.jpg inflating: IntelImageClassification/train/sea/4958.jpg inflating: IntelImageClassification/train/sea/4973.jpg inflating: IntelImageClassification/train/sea/4982.jpg inflating: IntelImageClassification/train/sea/5021.jpg inflating: IntelImageClassification/train/sea/5033.jpg inflating: IntelImageClassification/train/sea/5034.jpg inflating: IntelImageClassification/train/sea/5047.jpg inflating: IntelImageClassification/train/sea/5050.jpg inflating: IntelImageClassification/train/sea/5076.jpg inflating: IntelImageClassification/train/sea/5123.jpg inflating: IntelImageClassification/train/sea/5127.jpg inflating: IntelImageClassification/train/sea/5129.jpg inflating: IntelImageClassification/train/sea/514.jpg inflating: IntelImageClassification/train/sea/5145.jpg inflating: IntelImageClassification/train/sea/5154.jpg inflating: IntelImageClassification/train/sea/5173.jpg inflating: IntelImageClassification/train/sea/5189.jpg inflating: IntelImageClassification/train/sea/5194.jpg inflating: IntelImageClassification/train/sea/5221.jpg inflating: IntelImageClassification/train/sea/5223.jpg inflating: IntelImageClassification/train/sea/5233.jpg inflating: IntelImageClassification/train/sea/5235.jpg inflating: IntelImageClassification/train/sea/5242.jpg inflating: IntelImageClassification/train/sea/5256.jpg inflating: IntelImageClassification/train/sea/5270.jpg inflating: IntelImageClassification/train/sea/5283.jpg inflating: IntelImageClassification/train/sea/5308.jpg inflating: IntelImageClassification/train/sea/5310.jpg inflating: IntelImageClassification/train/sea/5347.jpg inflating: IntelImageClassification/train/sea/5353.jpg inflating: IntelImageClassification/train/sea/5368.jpg inflating: IntelImageClassification/train/sea/5381.jpg inflating: IntelImageClassification/train/sea/5397.jpg inflating: IntelImageClassification/train/sea/5401.jpg inflating: IntelImageClassification/train/sea/5419.jpg inflating: IntelImageClassification/train/sea/5432.jpg inflating: IntelImageClassification/train/sea/5441.jpg inflating: IntelImageClassification/train/sea/5449.jpg inflating: IntelImageClassification/train/sea/5464.jpg inflating: IntelImageClassification/train/sea/5482.jpg inflating: IntelImageClassification/train/sea/5484.jpg inflating: IntelImageClassification/train/sea/5488.jpg inflating: IntelImageClassification/train/sea/5490.jpg inflating: IntelImageClassification/train/sea/5501.jpg inflating: IntelImageClassification/train/sea/5516.jpg inflating: IntelImageClassification/train/sea/5592.jpg inflating: IntelImageClassification/train/sea/5597.jpg inflating: IntelImageClassification/train/sea/5625.jpg inflating: IntelImageClassification/train/sea/5632.jpg inflating: IntelImageClassification/train/sea/5649.jpg inflating: IntelImageClassification/train/sea/5653.jpg inflating: IntelImageClassification/train/sea/5654.jpg inflating: IntelImageClassification/train/sea/5662.jpg inflating: IntelImageClassification/train/sea/5669.jpg inflating: IntelImageClassification/train/sea/5678.jpg inflating: IntelImageClassification/train/sea/5686.jpg inflating: IntelImageClassification/train/sea/569.jpg inflating: IntelImageClassification/train/sea/5710.jpg inflating: IntelImageClassification/train/sea/5714.jpg inflating: IntelImageClassification/train/sea/5727.jpg inflating: IntelImageClassification/train/sea/5731.jpg inflating: IntelImageClassification/train/sea/5738.jpg inflating: IntelImageClassification/train/sea/5748.jpg inflating: IntelImageClassification/train/sea/5772.jpg inflating: IntelImageClassification/train/sea/5801.jpg inflating: IntelImageClassification/train/sea/5819.jpg inflating: IntelImageClassification/train/sea/5858.jpg inflating: IntelImageClassification/train/sea/5865.jpg inflating: IntelImageClassification/train/sea/5900.jpg inflating: IntelImageClassification/train/sea/5931.jpg inflating: IntelImageClassification/train/sea/5946.jpg inflating: IntelImageClassification/train/sea/5976.jpg inflating: IntelImageClassification/train/sea/5977.jpg inflating: IntelImageClassification/train/sea/599.jpg inflating: IntelImageClassification/train/sea/6015.jpg inflating: IntelImageClassification/train/sea/6060.jpg inflating: IntelImageClassification/train/sea/6092.jpg inflating: IntelImageClassification/train/sea/6124.jpg inflating: IntelImageClassification/train/sea/613.jpg inflating: IntelImageClassification/train/sea/6138.jpg inflating: IntelImageClassification/train/sea/6150.jpg inflating: IntelImageClassification/train/sea/6171.jpg inflating: IntelImageClassification/train/sea/62.jpg inflating: IntelImageClassification/train/sea/6219.jpg inflating: IntelImageClassification/train/sea/6226.jpg inflating: IntelImageClassification/train/sea/6242.jpg inflating: IntelImageClassification/train/sea/6260.jpg inflating: IntelImageClassification/train/sea/6261.jpg inflating: IntelImageClassification/train/sea/6301.jpg inflating: IntelImageClassification/train/sea/6302.jpg inflating: IntelImageClassification/train/sea/631.jpg inflating: IntelImageClassification/train/sea/6312.jpg inflating: IntelImageClassification/train/sea/6336.jpg inflating: IntelImageClassification/train/sea/6354.jpg inflating: IntelImageClassification/train/sea/6381.jpg inflating: IntelImageClassification/train/sea/6400.jpg inflating: IntelImageClassification/train/sea/6413.jpg inflating: IntelImageClassification/train/sea/6432.jpg inflating: IntelImageClassification/train/sea/6466.jpg inflating: IntelImageClassification/train/sea/6481.jpg inflating: IntelImageClassification/train/sea/6506.jpg inflating: IntelImageClassification/train/sea/652.jpg inflating: IntelImageClassification/train/sea/6561.jpg inflating: IntelImageClassification/train/sea/6567.jpg inflating: IntelImageClassification/train/sea/6591.jpg inflating: IntelImageClassification/train/sea/6598.jpg inflating: IntelImageClassification/train/sea/6640.jpg inflating: IntelImageClassification/train/sea/6683.jpg inflating: IntelImageClassification/train/sea/6691.jpg inflating: IntelImageClassification/train/sea/670.jpg inflating: IntelImageClassification/train/sea/6713.jpg inflating: IntelImageClassification/train/sea/6729.jpg inflating: IntelImageClassification/train/sea/6741.jpg inflating: IntelImageClassification/train/sea/6745.jpg inflating: IntelImageClassification/train/sea/6750.jpg inflating: IntelImageClassification/train/sea/680.jpg inflating: IntelImageClassification/train/sea/681.jpg inflating: IntelImageClassification/train/sea/6831.jpg inflating: IntelImageClassification/train/sea/6834.jpg inflating: IntelImageClassification/train/sea/6845.jpg inflating: IntelImageClassification/train/sea/6853.jpg inflating: IntelImageClassification/train/sea/6856.jpg inflating: IntelImageClassification/train/sea/6864.jpg inflating: IntelImageClassification/train/sea/6867.jpg inflating: IntelImageClassification/train/sea/6911.jpg inflating: IntelImageClassification/train/sea/6912.jpg inflating: IntelImageClassification/train/sea/6942.jpg inflating: IntelImageClassification/train/sea/6947.jpg inflating: IntelImageClassification/train/sea/6953.jpg inflating: IntelImageClassification/train/sea/6960.jpg inflating: IntelImageClassification/train/sea/6962.jpg inflating: IntelImageClassification/train/sea/6993.jpg inflating: IntelImageClassification/train/sea/6997.jpg inflating: IntelImageClassification/train/sea/7014.jpg inflating: IntelImageClassification/train/sea/7027.jpg inflating: IntelImageClassification/train/sea/7051.jpg inflating: IntelImageClassification/train/sea/706.jpg inflating: IntelImageClassification/train/sea/7072.jpg inflating: IntelImageClassification/train/sea/7078.jpg inflating: IntelImageClassification/train/sea/7081.jpg inflating: IntelImageClassification/train/sea/7150.jpg inflating: IntelImageClassification/train/sea/7173.jpg inflating: IntelImageClassification/train/sea/7189.jpg inflating: IntelImageClassification/train/sea/7196.jpg inflating: IntelImageClassification/train/sea/7212.jpg inflating: IntelImageClassification/train/sea/7215.jpg inflating: IntelImageClassification/train/sea/7232.jpg inflating: IntelImageClassification/train/sea/7233.jpg inflating: IntelImageClassification/train/sea/7234.jpg inflating: IntelImageClassification/train/sea/7245.jpg inflating: IntelImageClassification/train/sea/7259.jpg inflating: IntelImageClassification/train/sea/7281.jpg inflating: IntelImageClassification/train/sea/7302.jpg inflating: IntelImageClassification/train/sea/7323.jpg inflating: IntelImageClassification/train/sea/7369.jpg inflating: IntelImageClassification/train/sea/7396.jpg inflating: IntelImageClassification/train/sea/7420.jpg inflating: IntelImageClassification/train/sea/7429.jpg inflating: IntelImageClassification/train/sea/7452.jpg inflating: IntelImageClassification/train/sea/7462.jpg inflating: IntelImageClassification/train/sea/7485.jpg inflating: IntelImageClassification/train/sea/7505.jpg inflating: IntelImageClassification/train/sea/7582.jpg inflating: IntelImageClassification/train/sea/762.jpg inflating: IntelImageClassification/train/sea/7655.jpg inflating: IntelImageClassification/train/sea/7664.jpg inflating: IntelImageClassification/train/sea/7706.jpg inflating: IntelImageClassification/train/sea/7712.jpg inflating: IntelImageClassification/train/sea/7735.jpg inflating: IntelImageClassification/train/sea/7767.jpg inflating: IntelImageClassification/train/sea/7777.jpg inflating: IntelImageClassification/train/sea/78.jpg inflating: IntelImageClassification/train/sea/7801.jpg inflating: IntelImageClassification/train/sea/7806.jpg inflating: IntelImageClassification/train/sea/781.jpg inflating: IntelImageClassification/train/sea/7825.jpg inflating: IntelImageClassification/train/sea/7872.jpg inflating: IntelImageClassification/train/sea/7879.jpg inflating: IntelImageClassification/train/sea/7882.jpg inflating: IntelImageClassification/train/sea/7927.jpg inflating: IntelImageClassification/train/sea/7935.jpg inflating: IntelImageClassification/train/sea/795.jpg inflating: IntelImageClassification/train/sea/7961.jpg inflating: IntelImageClassification/train/sea/7971.jpg inflating: IntelImageClassification/train/sea/7990.jpg inflating: IntelImageClassification/train/sea/8014.jpg inflating: IntelImageClassification/train/sea/8028.jpg inflating: IntelImageClassification/train/sea/804.jpg inflating: IntelImageClassification/train/sea/8062.jpg inflating: IntelImageClassification/train/sea/8153.jpg inflating: IntelImageClassification/train/sea/8185.jpg inflating: IntelImageClassification/train/sea/8203.jpg inflating: IntelImageClassification/train/sea/8209.jpg inflating: IntelImageClassification/train/sea/8239.jpg inflating: IntelImageClassification/train/sea/8244.jpg inflating: IntelImageClassification/train/sea/8299.jpg inflating: IntelImageClassification/train/sea/8344.jpg inflating: IntelImageClassification/train/sea/8392.jpg inflating: IntelImageClassification/train/sea/8402.jpg inflating: IntelImageClassification/train/sea/8422.jpg inflating: IntelImageClassification/train/sea/8453.jpg inflating: IntelImageClassification/train/sea/8457.jpg inflating: IntelImageClassification/train/sea/8473.jpg inflating: IntelImageClassification/train/sea/8499.jpg inflating: IntelImageClassification/train/sea/8502.jpg inflating: IntelImageClassification/train/sea/851.jpg inflating: IntelImageClassification/train/sea/8515.jpg inflating: IntelImageClassification/train/sea/8517.jpg inflating: IntelImageClassification/train/sea/8575.jpg inflating: IntelImageClassification/train/sea/8603.jpg inflating: IntelImageClassification/train/sea/8605.jpg inflating: IntelImageClassification/train/sea/8648.jpg inflating: IntelImageClassification/train/sea/8663.jpg inflating: IntelImageClassification/train/sea/8669.jpg inflating: IntelImageClassification/train/sea/8702.jpg inflating: IntelImageClassification/train/sea/8709.jpg inflating: IntelImageClassification/train/sea/8712.jpg inflating: IntelImageClassification/train/sea/8728.jpg inflating: IntelImageClassification/train/sea/8733.jpg inflating: IntelImageClassification/train/sea/8775.jpg inflating: IntelImageClassification/train/sea/8779.jpg inflating: IntelImageClassification/train/sea/8819.jpg inflating: IntelImageClassification/train/sea/8834.jpg inflating: IntelImageClassification/train/sea/8841.jpg inflating: IntelImageClassification/train/sea/8861.jpg inflating: IntelImageClassification/train/sea/8868.jpg inflating: IntelImageClassification/train/sea/8884.jpg inflating: IntelImageClassification/train/sea/8908.jpg inflating: IntelImageClassification/train/sea/8953.jpg inflating: IntelImageClassification/train/sea/901.jpg inflating: IntelImageClassification/train/sea/9040.jpg inflating: IntelImageClassification/train/sea/9069.jpg inflating: IntelImageClassification/train/sea/907.jpg inflating: IntelImageClassification/train/sea/9074.jpg inflating: IntelImageClassification/train/sea/9077.jpg inflating: IntelImageClassification/train/sea/9129.jpg inflating: IntelImageClassification/train/sea/9171.jpg inflating: IntelImageClassification/train/sea/9172.jpg inflating: IntelImageClassification/train/sea/9199.jpg inflating: IntelImageClassification/train/sea/9253.jpg inflating: IntelImageClassification/train/sea/9263.jpg inflating: IntelImageClassification/train/sea/9282.jpg inflating: IntelImageClassification/train/sea/9289.jpg inflating: IntelImageClassification/train/sea/9292.jpg inflating: IntelImageClassification/train/sea/9307.jpg inflating: IntelImageClassification/train/sea/9310.jpg inflating: IntelImageClassification/train/sea/9334.jpg inflating: IntelImageClassification/train/sea/9335.jpg inflating: IntelImageClassification/train/sea/9339.jpg inflating: IntelImageClassification/train/sea/9416.jpg inflating: IntelImageClassification/train/sea/9457.jpg inflating: IntelImageClassification/train/sea/9459.jpg inflating: IntelImageClassification/train/sea/9467.jpg inflating: IntelImageClassification/train/sea/9483.jpg inflating: IntelImageClassification/train/sea/9485.jpg inflating: IntelImageClassification/train/sea/9506.jpg inflating: IntelImageClassification/train/sea/9507.jpg inflating: IntelImageClassification/train/sea/9514.jpg inflating: IntelImageClassification/train/sea/953.jpg inflating: IntelImageClassification/train/sea/9573.jpg inflating: IntelImageClassification/train/sea/9574.jpg inflating: IntelImageClassification/train/sea/9589.jpg inflating: IntelImageClassification/train/sea/9603.jpg inflating: IntelImageClassification/train/sea/9648.jpg inflating: IntelImageClassification/train/sea/9664.jpg inflating: IntelImageClassification/train/sea/97.jpg inflating: IntelImageClassification/train/sea/9701.jpg inflating: IntelImageClassification/train/sea/9709.jpg inflating: IntelImageClassification/train/sea/9722.jpg inflating: IntelImageClassification/train/sea/9745.jpg inflating: IntelImageClassification/train/sea/9755.jpg inflating: IntelImageClassification/train/sea/9761.jpg inflating: IntelImageClassification/train/sea/979.jpg inflating: IntelImageClassification/train/sea/9812.jpg inflating: IntelImageClassification/train/sea/9839.jpg inflating: IntelImageClassification/train/sea/984.jpg inflating: IntelImageClassification/train/sea/9850.jpg inflating: IntelImageClassification/train/sea/9866.jpg inflating: IntelImageClassification/train/sea/9881.jpg inflating: IntelImageClassification/train/sea/9898.jpg inflating: IntelImageClassification/train/sea/9908.jpg inflating: IntelImageClassification/train/sea/9916.jpg inflating: IntelImageClassification/train/sea/9937.jpg inflating: IntelImageClassification/train/sea/9965.jpg inflating: IntelImageClassification/train/sea/9968.jpg inflating: IntelImageClassification/train/sea/9981.jpg inflating: IntelImageClassification/train/sea/1.jpg inflating: IntelImageClassification/train/sea/10016.jpg inflating: IntelImageClassification/train/sea/10041.jpg inflating: IntelImageClassification/train/sea/10061.jpg inflating: IntelImageClassification/train/sea/10071.jpg inflating: IntelImageClassification/train/sea/10080.jpg inflating: IntelImageClassification/train/sea/10087.jpg inflating: IntelImageClassification/train/sea/10093.jpg inflating: IntelImageClassification/train/sea/10114.jpg inflating: IntelImageClassification/train/sea/10115.jpg inflating: IntelImageClassification/train/sea/10143.jpg inflating: IntelImageClassification/train/sea/1022.jpg inflating: IntelImageClassification/train/sea/10245.jpg inflating: IntelImageClassification/train/sea/10249.jpg inflating: IntelImageClassification/train/sea/10259.jpg inflating: IntelImageClassification/train/sea/1027.jpg inflating: IntelImageClassification/train/sea/10271.jpg inflating: IntelImageClassification/train/sea/10274.jpg inflating: IntelImageClassification/train/sea/10304.jpg inflating: IntelImageClassification/train/sea/10309.jpg inflating: IntelImageClassification/train/sea/10343.jpg inflating: IntelImageClassification/train/sea/10344.jpg inflating: IntelImageClassification/train/sea/1035.jpg inflating: IntelImageClassification/train/sea/10351.jpg inflating: IntelImageClassification/train/sea/10378.jpg inflating: IntelImageClassification/train/sea/1038.jpg inflating: IntelImageClassification/train/sea/10396.jpg inflating: IntelImageClassification/train/sea/10416.jpg inflating: IntelImageClassification/train/sea/10420.jpg inflating: IntelImageClassification/train/sea/10428.jpg inflating: IntelImageClassification/train/sea/10429.jpg inflating: IntelImageClassification/train/sea/1043.jpg inflating: IntelImageClassification/train/sea/10433.jpg inflating: IntelImageClassification/train/sea/10450.jpg inflating: IntelImageClassification/train/sea/10451.jpg inflating: IntelImageClassification/train/sea/10465.jpg inflating: IntelImageClassification/train/sea/10494.jpg inflating: IntelImageClassification/train/sea/10550.jpg inflating: IntelImageClassification/train/sea/10556.jpg inflating: IntelImageClassification/train/sea/10565.jpg inflating: IntelImageClassification/train/sea/10584.jpg inflating: IntelImageClassification/train/sea/10596.jpg inflating: IntelImageClassification/train/sea/10628.jpg inflating: IntelImageClassification/train/sea/10644.jpg inflating: IntelImageClassification/train/sea/107.jpg inflating: IntelImageClassification/train/sea/10706.jpg inflating: IntelImageClassification/train/sea/10740.jpg inflating: IntelImageClassification/train/sea/10745.jpg inflating: IntelImageClassification/train/sea/10750.jpg inflating: IntelImageClassification/train/sea/10753.jpg inflating: IntelImageClassification/train/sea/10773.jpg inflating: IntelImageClassification/train/sea/10776.jpg inflating: IntelImageClassification/train/sea/10789.jpg inflating: IntelImageClassification/train/sea/10840.jpg inflating: IntelImageClassification/train/sea/10846.jpg inflating: IntelImageClassification/train/sea/10856.jpg inflating: IntelImageClassification/train/sea/10877.jpg inflating: IntelImageClassification/train/sea/10887.jpg inflating: IntelImageClassification/train/sea/10908.jpg inflating: IntelImageClassification/train/sea/10942.jpg inflating: IntelImageClassification/train/sea/10947.jpg inflating: IntelImageClassification/train/sea/10973.jpg inflating: IntelImageClassification/train/sea/1098.jpg inflating: IntelImageClassification/train/sea/10992.jpg inflating: IntelImageClassification/train/sea/11039.jpg inflating: IntelImageClassification/train/sea/11106.jpg inflating: IntelImageClassification/train/sea/1116.jpg inflating: IntelImageClassification/train/sea/11160.jpg inflating: IntelImageClassification/train/sea/11165.jpg inflating: IntelImageClassification/train/sea/11183.jpg inflating: IntelImageClassification/train/sea/11184.jpg inflating: IntelImageClassification/train/sea/11206.jpg inflating: IntelImageClassification/train/sea/11211.jpg inflating: IntelImageClassification/train/sea/11233.jpg inflating: IntelImageClassification/train/sea/11238.jpg inflating: IntelImageClassification/train/sea/1124.jpg inflating: IntelImageClassification/train/sea/11283.jpg inflating: IntelImageClassification/train/sea/11287.jpg inflating: IntelImageClassification/train/sea/11292.jpg inflating: IntelImageClassification/train/sea/11295.jpg inflating: IntelImageClassification/train/sea/11303.jpg inflating: IntelImageClassification/train/sea/11348.jpg inflating: IntelImageClassification/train/sea/11351.jpg inflating: IntelImageClassification/train/sea/11365.jpg inflating: IntelImageClassification/train/sea/11373.jpg inflating: IntelImageClassification/train/sea/11385.jpg inflating: IntelImageClassification/train/sea/11390.jpg inflating: IntelImageClassification/train/sea/11415.jpg inflating: IntelImageClassification/train/sea/11442.jpg inflating: IntelImageClassification/train/sea/11455.jpg inflating: IntelImageClassification/train/sea/11476.jpg inflating: IntelImageClassification/train/sea/11482.jpg inflating: IntelImageClassification/train/sea/11492.jpg inflating: IntelImageClassification/train/sea/11495.jpg inflating: IntelImageClassification/train/sea/11503.jpg inflating: IntelImageClassification/train/sea/11505.jpg inflating: IntelImageClassification/train/sea/11532.jpg inflating: IntelImageClassification/train/sea/11543.jpg inflating: IntelImageClassification/train/sea/1157.jpg inflating: IntelImageClassification/train/sea/11582.jpg inflating: IntelImageClassification/train/sea/11592.jpg inflating: IntelImageClassification/train/sea/11600.jpg inflating: IntelImageClassification/train/sea/11661.jpg inflating: IntelImageClassification/train/sea/11667.jpg inflating: IntelImageClassification/train/sea/11701.jpg inflating: IntelImageClassification/train/sea/11708.jpg inflating: IntelImageClassification/train/sea/11735.jpg inflating: IntelImageClassification/train/sea/11746.jpg inflating: IntelImageClassification/train/sea/11754.jpg inflating: IntelImageClassification/train/sea/11772.jpg inflating: IntelImageClassification/train/sea/11783.jpg inflating: IntelImageClassification/train/sea/11797.jpg inflating: IntelImageClassification/train/sea/11859.jpg inflating: IntelImageClassification/train/sea/11892.jpg inflating: IntelImageClassification/train/sea/11896.jpg inflating: IntelImageClassification/train/sea/11946.jpg inflating: IntelImageClassification/train/sea/11980.jpg inflating: IntelImageClassification/train/sea/12002.jpg inflating: IntelImageClassification/train/sea/12013.jpg inflating: IntelImageClassification/train/sea/12019.jpg inflating: IntelImageClassification/train/sea/12027.jpg inflating: IntelImageClassification/train/sea/12048.jpg inflating: IntelImageClassification/train/sea/12092.jpg inflating: IntelImageClassification/train/sea/12165.jpg inflating: IntelImageClassification/train/sea/12185.jpg inflating: IntelImageClassification/train/sea/12198.jpg inflating: IntelImageClassification/train/sea/12212.jpg inflating: IntelImageClassification/train/sea/12241.jpg inflating: IntelImageClassification/train/sea/12266.jpg inflating: IntelImageClassification/train/sea/12300.jpg inflating: IntelImageClassification/train/sea/12307.jpg inflating: IntelImageClassification/train/sea/12314.jpg inflating: IntelImageClassification/train/sea/12357.jpg inflating: IntelImageClassification/train/sea/124.jpg inflating: IntelImageClassification/train/sea/12403.jpg inflating: IntelImageClassification/train/sea/12416.jpg inflating: IntelImageClassification/train/sea/12428.jpg inflating: IntelImageClassification/train/sea/12442.jpg inflating: IntelImageClassification/train/sea/12454.jpg inflating: IntelImageClassification/train/sea/12460.jpg inflating: IntelImageClassification/train/sea/12466.jpg inflating: IntelImageClassification/train/sea/1251.jpg inflating: IntelImageClassification/train/sea/12511.jpg inflating: IntelImageClassification/train/sea/1254.jpg inflating: IntelImageClassification/train/sea/12562.jpg inflating: IntelImageClassification/train/sea/12568.jpg inflating: IntelImageClassification/train/sea/12571.jpg inflating: IntelImageClassification/train/sea/12589.jpg inflating: IntelImageClassification/train/sea/12656.jpg inflating: IntelImageClassification/train/sea/12665.jpg inflating: IntelImageClassification/train/sea/12671.jpg inflating: IntelImageClassification/train/sea/12674.jpg inflating: IntelImageClassification/train/sea/12689.jpg inflating: IntelImageClassification/train/sea/12706.jpg inflating: IntelImageClassification/train/sea/12714.jpg inflating: IntelImageClassification/train/sea/12759.jpg inflating: IntelImageClassification/train/sea/12775.jpg inflating: IntelImageClassification/train/sea/1282.jpg inflating: IntelImageClassification/train/sea/12843.jpg inflating: IntelImageClassification/train/sea/12852.jpg inflating: IntelImageClassification/train/sea/12871.jpg inflating: IntelImageClassification/train/sea/12882.jpg inflating: IntelImageClassification/train/sea/12940.jpg inflating: IntelImageClassification/train/sea/12995.jpg inflating: IntelImageClassification/train/sea/13044.jpg inflating: IntelImageClassification/train/sea/13077.jpg inflating: IntelImageClassification/train/sea/13099.jpg inflating: IntelImageClassification/train/sea/13113.jpg inflating: IntelImageClassification/train/sea/13115.jpg inflating: IntelImageClassification/train/sea/13118.jpg inflating: IntelImageClassification/train/sea/13144.jpg inflating: IntelImageClassification/train/sea/13152.jpg inflating: IntelImageClassification/train/sea/13175.jpg inflating: IntelImageClassification/train/sea/1321.jpg inflating: IntelImageClassification/train/sea/13212.jpg inflating: IntelImageClassification/train/sea/13235.jpg inflating: IntelImageClassification/train/sea/13272.jpg inflating: IntelImageClassification/train/sea/13294.jpg inflating: IntelImageClassification/train/sea/13298.jpg inflating: IntelImageClassification/train/sea/13307.jpg inflating: IntelImageClassification/train/sea/13311.jpg inflating: IntelImageClassification/train/sea/13314.jpg inflating: IntelImageClassification/train/sea/13320.jpg inflating: IntelImageClassification/train/sea/13359.jpg inflating: IntelImageClassification/train/sea/13360.jpg inflating: IntelImageClassification/train/sea/13375.jpg inflating: IntelImageClassification/train/sea/13412.jpg inflating: IntelImageClassification/train/sea/13435.jpg inflating: IntelImageClassification/train/sea/13439.jpg inflating: IntelImageClassification/train/sea/13451.jpg inflating: IntelImageClassification/train/sea/13455.jpg inflating: IntelImageClassification/train/sea/13484.jpg inflating: IntelImageClassification/train/sea/13502.jpg inflating: IntelImageClassification/train/sea/13523.jpg inflating: IntelImageClassification/train/sea/13528.jpg inflating: IntelImageClassification/train/sea/13556.jpg inflating: IntelImageClassification/train/sea/13600.jpg inflating: IntelImageClassification/train/sea/13615.jpg inflating: IntelImageClassification/train/sea/13642.jpg inflating: IntelImageClassification/train/sea/13645.jpg inflating: IntelImageClassification/train/sea/1367.jpg inflating: IntelImageClassification/train/sea/13680.jpg inflating: IntelImageClassification/train/sea/13710.jpg inflating: IntelImageClassification/train/sea/13715.jpg inflating: IntelImageClassification/train/sea/13721.jpg inflating: IntelImageClassification/train/sea/13728.jpg inflating: IntelImageClassification/train/sea/13757.jpg inflating: IntelImageClassification/train/sea/13760.jpg inflating: IntelImageClassification/train/sea/13762.jpg inflating: IntelImageClassification/train/sea/13797.jpg inflating: IntelImageClassification/train/sea/13804.jpg inflating: IntelImageClassification/train/sea/13828.jpg inflating: IntelImageClassification/train/sea/13841.jpg inflating: IntelImageClassification/train/sea/13856.jpg inflating: IntelImageClassification/train/sea/13858.jpg inflating: IntelImageClassification/train/sea/13866.jpg inflating: IntelImageClassification/train/sea/13879.jpg inflating: IntelImageClassification/train/sea/13887.jpg inflating: IntelImageClassification/train/sea/13893.jpg inflating: IntelImageClassification/train/sea/13907.jpg inflating: IntelImageClassification/train/sea/14031.jpg inflating: IntelImageClassification/train/sea/14054.jpg inflating: IntelImageClassification/train/sea/14078.jpg inflating: IntelImageClassification/train/sea/14100.jpg inflating: IntelImageClassification/train/sea/14107.jpg inflating: IntelImageClassification/train/sea/14109.jpg inflating: IntelImageClassification/train/sea/14141.jpg inflating: IntelImageClassification/train/sea/14156.jpg inflating: IntelImageClassification/train/sea/14178.jpg inflating: IntelImageClassification/train/sea/14224.jpg inflating: IntelImageClassification/train/sea/14226.jpg inflating: IntelImageClassification/train/sea/1423.jpg inflating: IntelImageClassification/train/sea/14237.jpg inflating: IntelImageClassification/train/sea/14258.jpg inflating: IntelImageClassification/train/sea/14264.jpg inflating: IntelImageClassification/train/sea/14281.jpg inflating: IntelImageClassification/train/sea/14354.jpg inflating: IntelImageClassification/train/sea/14366.jpg inflating: IntelImageClassification/train/sea/1437.jpg inflating: IntelImageClassification/train/sea/14411.jpg inflating: IntelImageClassification/train/sea/14422.jpg inflating: IntelImageClassification/train/sea/14429.jpg inflating: IntelImageClassification/train/sea/14430.jpg inflating: IntelImageClassification/train/sea/14458.jpg inflating: IntelImageClassification/train/sea/14460.jpg inflating: IntelImageClassification/train/sea/1447.jpg inflating: IntelImageClassification/train/sea/14471.jpg inflating: IntelImageClassification/train/sea/14480.jpg inflating: IntelImageClassification/train/sea/14527.jpg inflating: IntelImageClassification/train/sea/14541.jpg inflating: IntelImageClassification/train/sea/14629.jpg inflating: IntelImageClassification/train/sea/14630.jpg inflating: IntelImageClassification/train/sea/14635.jpg inflating: IntelImageClassification/train/sea/14654.jpg inflating: IntelImageClassification/train/sea/14660.jpg inflating: IntelImageClassification/train/sea/14663.jpg inflating: IntelImageClassification/train/sea/14717.jpg inflating: IntelImageClassification/train/sea/14728.jpg inflating: IntelImageClassification/train/sea/14748.jpg inflating: IntelImageClassification/train/sea/14791.jpg inflating: IntelImageClassification/train/sea/14792.jpg inflating: IntelImageClassification/train/sea/14803.jpg inflating: IntelImageClassification/train/sea/14831.jpg inflating: IntelImageClassification/train/sea/14867.jpg inflating: IntelImageClassification/train/sea/14955.jpg inflating: IntelImageClassification/train/sea/14978.jpg inflating: IntelImageClassification/train/sea/15000.jpg inflating: IntelImageClassification/train/sea/15009.jpg inflating: IntelImageClassification/train/sea/15011.jpg inflating: IntelImageClassification/train/sea/15020.jpg inflating: IntelImageClassification/train/sea/15025.jpg inflating: IntelImageClassification/train/sea/15055.jpg inflating: IntelImageClassification/train/sea/15086.jpg inflating: IntelImageClassification/train/sea/15093.jpg inflating: IntelImageClassification/train/sea/15096.jpg inflating: IntelImageClassification/train/sea/15100.jpg inflating: IntelImageClassification/train/sea/15122.jpg inflating: IntelImageClassification/train/sea/15181.jpg inflating: IntelImageClassification/train/sea/15202.jpg inflating: IntelImageClassification/train/sea/15211.jpg inflating: IntelImageClassification/train/sea/15249.jpg inflating: IntelImageClassification/train/sea/15250.jpg inflating: IntelImageClassification/train/sea/15259.jpg inflating: IntelImageClassification/train/sea/15407.jpg inflating: IntelImageClassification/train/sea/15412.jpg inflating: IntelImageClassification/train/sea/15413.jpg inflating: IntelImageClassification/train/sea/15426.jpg inflating: IntelImageClassification/train/sea/1543.jpg inflating: IntelImageClassification/train/sea/15447.jpg inflating: IntelImageClassification/train/sea/15463.jpg inflating: IntelImageClassification/train/sea/15464.jpg inflating: IntelImageClassification/train/sea/15476.jpg inflating: IntelImageClassification/train/sea/15486.jpg inflating: IntelImageClassification/train/sea/1553.jpg inflating: IntelImageClassification/train/sea/15549.jpg inflating: IntelImageClassification/train/sea/15585.jpg inflating: IntelImageClassification/train/sea/15588.jpg inflating: IntelImageClassification/train/sea/15622.jpg inflating: IntelImageClassification/train/sea/15656.jpg inflating: IntelImageClassification/train/sea/15661.jpg inflating: IntelImageClassification/train/sea/1570.jpg inflating: IntelImageClassification/train/sea/15736.jpg inflating: IntelImageClassification/train/sea/15753.jpg inflating: IntelImageClassification/train/sea/15774.jpg inflating: IntelImageClassification/train/sea/15785.jpg inflating: IntelImageClassification/train/sea/15790.jpg inflating: IntelImageClassification/train/sea/15808.jpg inflating: IntelImageClassification/train/sea/15818.jpg inflating: IntelImageClassification/train/sea/15851.jpg inflating: IntelImageClassification/train/sea/15854.jpg inflating: IntelImageClassification/train/sea/15855.jpg inflating: IntelImageClassification/train/sea/15860.jpg inflating: IntelImageClassification/train/sea/15874.jpg inflating: IntelImageClassification/train/sea/15897.jpg inflating: IntelImageClassification/train/sea/15903.jpg inflating: IntelImageClassification/train/sea/15913.jpg inflating: IntelImageClassification/train/sea/15919.jpg inflating: IntelImageClassification/train/sea/15940.jpg inflating: IntelImageClassification/train/sea/15952.jpg inflating: IntelImageClassification/train/sea/15960.jpg inflating: IntelImageClassification/train/sea/16013.jpg inflating: IntelImageClassification/train/sea/16025.jpg inflating: IntelImageClassification/train/sea/16030.jpg inflating: IntelImageClassification/train/sea/16031.jpg inflating: IntelImageClassification/train/sea/16053.jpg inflating: IntelImageClassification/train/sea/16062.jpg inflating: IntelImageClassification/train/sea/16085.jpg inflating: IntelImageClassification/train/sea/16142.jpg inflating: IntelImageClassification/train/sea/16165.jpg inflating: IntelImageClassification/train/sea/16211.jpg inflating: IntelImageClassification/train/sea/16215.jpg inflating: IntelImageClassification/train/sea/16219.jpg inflating: IntelImageClassification/train/sea/16276.jpg inflating: IntelImageClassification/train/sea/16284.jpg inflating: IntelImageClassification/train/sea/16293.jpg inflating: IntelImageClassification/train/sea/16306.jpg inflating: IntelImageClassification/train/sea/16316.jpg inflating: IntelImageClassification/train/sea/16342.jpg inflating: IntelImageClassification/train/sea/1635.jpg inflating: IntelImageClassification/train/sea/16364.jpg inflating: IntelImageClassification/train/sea/16398.jpg inflating: IntelImageClassification/train/sea/16407.jpg inflating: IntelImageClassification/train/sea/16418.jpg inflating: IntelImageClassification/train/sea/16422.jpg inflating: IntelImageClassification/train/sea/16441.jpg inflating: IntelImageClassification/train/sea/16450.jpg inflating: IntelImageClassification/train/sea/16474.jpg inflating: IntelImageClassification/train/sea/16491.jpg inflating: IntelImageClassification/train/sea/16495.jpg inflating: IntelImageClassification/train/sea/16502.jpg inflating: IntelImageClassification/train/sea/16511.jpg inflating: IntelImageClassification/train/sea/16512.jpg inflating: IntelImageClassification/train/sea/16540.jpg inflating: IntelImageClassification/train/sea/16612.jpg inflating: IntelImageClassification/train/sea/16647.jpg inflating: IntelImageClassification/train/sea/16697.jpg inflating: IntelImageClassification/train/sea/16700.jpg inflating: IntelImageClassification/train/sea/16719.jpg inflating: IntelImageClassification/train/sea/16723.jpg inflating: IntelImageClassification/train/sea/16728.jpg inflating: IntelImageClassification/train/sea/16731.jpg inflating: IntelImageClassification/train/sea/16744.jpg inflating: IntelImageClassification/train/sea/16746.jpg inflating: IntelImageClassification/train/sea/16785.jpg inflating: IntelImageClassification/train/sea/16788.jpg inflating: IntelImageClassification/train/sea/16802.jpg inflating: IntelImageClassification/train/sea/1682.jpg inflating: IntelImageClassification/train/sea/16823.jpg inflating: IntelImageClassification/train/sea/16828.jpg inflating: IntelImageClassification/train/sea/16829.jpg inflating: IntelImageClassification/train/sea/16834.jpg inflating: IntelImageClassification/train/sea/16871.jpg inflating: IntelImageClassification/train/sea/16872.jpg inflating: IntelImageClassification/train/sea/16882.jpg inflating: IntelImageClassification/train/sea/16885.jpg inflating: IntelImageClassification/train/sea/16916.jpg inflating: IntelImageClassification/train/sea/16932.jpg inflating: IntelImageClassification/train/sea/1695.jpg inflating: IntelImageClassification/train/sea/16981.jpg inflating: IntelImageClassification/train/sea/16994.jpg inflating: IntelImageClassification/train/sea/17008.jpg inflating: IntelImageClassification/train/sea/17013.jpg inflating: IntelImageClassification/train/sea/17020.jpg inflating: IntelImageClassification/train/sea/17040.jpg inflating: IntelImageClassification/train/sea/17077.jpg inflating: IntelImageClassification/train/sea/17081.jpg inflating: IntelImageClassification/train/sea/17087.jpg inflating: IntelImageClassification/train/sea/17099.jpg inflating: IntelImageClassification/train/sea/17101.jpg inflating: IntelImageClassification/train/sea/17190.jpg inflating: IntelImageClassification/train/sea/17216.jpg inflating: IntelImageClassification/train/sea/1723.jpg inflating: IntelImageClassification/train/sea/17230.jpg inflating: IntelImageClassification/train/sea/17246.jpg inflating: IntelImageClassification/train/sea/17291.jpg inflating: IntelImageClassification/train/sea/17297.jpg inflating: IntelImageClassification/train/sea/17298.jpg inflating: IntelImageClassification/train/sea/17318.jpg inflating: IntelImageClassification/train/sea/17328.jpg inflating: IntelImageClassification/train/sea/17331.jpg inflating: IntelImageClassification/train/sea/17352.jpg inflating: IntelImageClassification/train/sea/17360.jpg inflating: IntelImageClassification/train/sea/17410.jpg inflating: IntelImageClassification/train/sea/17411.jpg inflating: IntelImageClassification/train/sea/17475.jpg inflating: IntelImageClassification/train/sea/17476.jpg inflating: IntelImageClassification/train/sea/17488.jpg inflating: IntelImageClassification/train/sea/17514.jpg inflating: IntelImageClassification/train/sea/17571.jpg inflating: IntelImageClassification/train/sea/17583.jpg inflating: IntelImageClassification/train/sea/17657.jpg inflating: IntelImageClassification/train/sea/17660.jpg inflating: IntelImageClassification/train/sea/17680.jpg inflating: IntelImageClassification/train/sea/17689.jpg inflating: IntelImageClassification/train/sea/17695.jpg inflating: IntelImageClassification/train/sea/17698.jpg inflating: IntelImageClassification/train/sea/1775.jpg inflating: IntelImageClassification/train/sea/17757.jpg inflating: IntelImageClassification/train/sea/17760.jpg inflating: IntelImageClassification/train/sea/17785.jpg inflating: IntelImageClassification/train/sea/17803.jpg inflating: IntelImageClassification/train/sea/17808.jpg inflating: IntelImageClassification/train/sea/17814.jpg inflating: IntelImageClassification/train/sea/17822.jpg inflating: IntelImageClassification/train/sea/17886.jpg inflating: IntelImageClassification/train/sea/17893.jpg inflating: IntelImageClassification/train/sea/17918.jpg inflating: IntelImageClassification/train/sea/17924.jpg inflating: IntelImageClassification/train/sea/17971.jpg inflating: IntelImageClassification/train/sea/17997.jpg inflating: IntelImageClassification/train/sea/180.jpg inflating: IntelImageClassification/train/sea/1806.jpg inflating: IntelImageClassification/train/sea/1807.jpg inflating: IntelImageClassification/train/sea/18076.jpg inflating: IntelImageClassification/train/sea/18089.jpg inflating: IntelImageClassification/train/sea/18103.jpg inflating: IntelImageClassification/train/sea/18124.jpg inflating: IntelImageClassification/train/sea/18146.jpg inflating: IntelImageClassification/train/sea/1817.jpg inflating: IntelImageClassification/train/sea/18173.jpg inflating: IntelImageClassification/train/sea/18232.jpg inflating: IntelImageClassification/train/sea/18262.jpg inflating: IntelImageClassification/train/sea/18268.jpg inflating: IntelImageClassification/train/sea/18271.jpg inflating: IntelImageClassification/train/sea/18292.jpg inflating: IntelImageClassification/train/sea/18305.jpg inflating: IntelImageClassification/train/sea/18327.jpg inflating: IntelImageClassification/train/sea/18393.jpg inflating: IntelImageClassification/train/sea/18408.jpg inflating: IntelImageClassification/train/sea/18444.jpg inflating: IntelImageClassification/train/sea/18447.jpg inflating: IntelImageClassification/train/sea/18465.jpg inflating: IntelImageClassification/train/sea/18470.jpg inflating: IntelImageClassification/train/sea/18471.jpg inflating: IntelImageClassification/train/sea/18483.jpg inflating: IntelImageClassification/train/sea/18490.jpg inflating: IntelImageClassification/train/sea/18500.jpg inflating: IntelImageClassification/train/sea/18518.jpg inflating: IntelImageClassification/train/sea/18525.jpg inflating: IntelImageClassification/train/sea/18526.jpg inflating: IntelImageClassification/train/sea/1854.jpg inflating: IntelImageClassification/train/sea/18559.jpg inflating: IntelImageClassification/train/sea/18576.jpg inflating: IntelImageClassification/train/sea/1858.jpg inflating: IntelImageClassification/train/sea/18600.jpg inflating: IntelImageClassification/train/sea/18614.jpg inflating: IntelImageClassification/train/sea/18618.jpg inflating: IntelImageClassification/train/sea/18634.jpg inflating: IntelImageClassification/train/sea/18643.jpg inflating: IntelImageClassification/train/sea/18664.jpg inflating: IntelImageClassification/train/sea/18707.jpg inflating: IntelImageClassification/train/sea/18716.jpg inflating: IntelImageClassification/train/sea/18776.jpg inflating: IntelImageClassification/train/sea/18804.jpg inflating: IntelImageClassification/train/sea/18812.jpg inflating: IntelImageClassification/train/sea/18816.jpg inflating: IntelImageClassification/train/sea/18827.jpg inflating: IntelImageClassification/train/sea/18835.jpg inflating: IntelImageClassification/train/sea/18841.jpg inflating: IntelImageClassification/train/sea/18856.jpg inflating: IntelImageClassification/train/sea/18898.jpg inflating: IntelImageClassification/train/sea/1892.jpg inflating: IntelImageClassification/train/sea/18940.jpg inflating: IntelImageClassification/train/sea/18995.jpg inflating: IntelImageClassification/train/sea/19045.jpg inflating: IntelImageClassification/train/sea/19081.jpg inflating: IntelImageClassification/train/sea/1913.jpg inflating: IntelImageClassification/train/sea/19140.jpg inflating: IntelImageClassification/train/sea/19144.jpg inflating: IntelImageClassification/train/sea/19156.jpg inflating: IntelImageClassification/train/sea/1916.jpg inflating: IntelImageClassification/train/sea/19171.jpg inflating: IntelImageClassification/train/sea/19187.jpg inflating: IntelImageClassification/train/sea/19200.jpg inflating: IntelImageClassification/train/sea/19213.jpg inflating: IntelImageClassification/train/sea/19220.jpg inflating: IntelImageClassification/train/sea/19224.jpg inflating: IntelImageClassification/train/sea/19255.jpg inflating: IntelImageClassification/train/sea/19265.jpg inflating: IntelImageClassification/train/sea/19279.jpg inflating: IntelImageClassification/train/sea/19282.jpg inflating: IntelImageClassification/train/sea/19286.jpg inflating: IntelImageClassification/train/sea/193.jpg inflating: IntelImageClassification/train/sea/19317.jpg inflating: IntelImageClassification/train/sea/19360.jpg inflating: IntelImageClassification/train/sea/19394.jpg inflating: IntelImageClassification/train/sea/19402.jpg inflating: IntelImageClassification/train/sea/19403.jpg inflating: IntelImageClassification/train/sea/1944.jpg inflating: IntelImageClassification/train/sea/19453.jpg inflating: IntelImageClassification/train/sea/19454.jpg inflating: IntelImageClassification/train/sea/19483.jpg inflating: IntelImageClassification/train/sea/19484.jpg inflating: IntelImageClassification/train/sea/19490.jpg inflating: IntelImageClassification/train/sea/19496.jpg inflating: IntelImageClassification/train/sea/19512.jpg inflating: IntelImageClassification/train/sea/19514.jpg inflating: IntelImageClassification/train/sea/19533.jpg inflating: IntelImageClassification/train/sea/19593.jpg inflating: IntelImageClassification/train/sea/19599.jpg inflating: IntelImageClassification/train/sea/19605.jpg inflating: IntelImageClassification/train/sea/19626.jpg inflating: IntelImageClassification/train/sea/19639.jpg inflating: IntelImageClassification/train/sea/19694.jpg inflating: IntelImageClassification/train/sea/19723.jpg inflating: IntelImageClassification/train/sea/19750.jpg inflating: IntelImageClassification/train/sea/19764.jpg inflating: IntelImageClassification/train/sea/19768.jpg inflating: IntelImageClassification/train/sea/1978.jpg inflating: IntelImageClassification/train/sea/19805.jpg inflating: IntelImageClassification/train/sea/19810.jpg inflating: IntelImageClassification/train/sea/19818.jpg inflating: IntelImageClassification/train/sea/1982.jpg inflating: IntelImageClassification/train/sea/19833.jpg inflating: IntelImageClassification/train/sea/19845.jpg inflating: IntelImageClassification/train/sea/19854.jpg inflating: IntelImageClassification/train/sea/19865.jpg inflating: IntelImageClassification/train/sea/19866.jpg inflating: IntelImageClassification/train/sea/19878.jpg inflating: IntelImageClassification/train/sea/19928.jpg inflating: IntelImageClassification/train/sea/19932.jpg inflating: IntelImageClassification/train/sea/1999.jpg inflating: IntelImageClassification/train/sea/20.jpg inflating: IntelImageClassification/train/sea/20000.jpg inflating: IntelImageClassification/train/sea/20001.jpg inflating: IntelImageClassification/train/sea/20033.jpg inflating: IntelImageClassification/train/sea/20053.jpg inflating: IntelImageClassification/train/sea/2006.jpg inflating: IntelImageClassification/train/sea/2012.jpg inflating: IntelImageClassification/train/sea/2042.jpg inflating: IntelImageClassification/train/sea/2052.jpg inflating: IntelImageClassification/train/sea/2058.jpg inflating: IntelImageClassification/train/sea/206.jpg inflating: IntelImageClassification/train/sea/2063.jpg inflating: IntelImageClassification/train/sea/2075.jpg inflating: IntelImageClassification/train/sea/2086.jpg inflating: IntelImageClassification/train/sea/2132.jpg inflating: IntelImageClassification/train/sea/2137.jpg inflating: IntelImageClassification/train/sea/2148.jpg inflating: IntelImageClassification/train/sea/2154.jpg inflating: IntelImageClassification/train/sea/216.jpg inflating: IntelImageClassification/train/sea/2195.jpg inflating: IntelImageClassification/train/sea/2229.jpg inflating: IntelImageClassification/train/sea/2265.jpg inflating: IntelImageClassification/train/sea/2337.jpg inflating: IntelImageClassification/train/sea/2346.jpg inflating: IntelImageClassification/train/sea/2349.jpg inflating: IntelImageClassification/train/sea/2358.jpg inflating: IntelImageClassification/train/sea/239.jpg inflating: IntelImageClassification/train/sea/2394.jpg inflating: IntelImageClassification/train/sea/2451.jpg inflating: IntelImageClassification/train/sea/2456.jpg inflating: IntelImageClassification/train/sea/2461.jpg inflating: IntelImageClassification/train/sea/2475.jpg inflating: IntelImageClassification/train/sea/248.jpg inflating: IntelImageClassification/train/sea/253.jpg inflating: IntelImageClassification/train/sea/2546.jpg inflating: IntelImageClassification/train/sea/2555.jpg inflating: IntelImageClassification/train/sea/2598.jpg inflating: IntelImageClassification/train/sea/261.jpg inflating: IntelImageClassification/train/sea/2617.jpg inflating: IntelImageClassification/train/sea/2623.jpg inflating: IntelImageClassification/train/sea/2644.jpg inflating: IntelImageClassification/train/sea/2649.jpg inflating: IntelImageClassification/train/sea/2656.jpg inflating: IntelImageClassification/train/sea/2665.jpg inflating: IntelImageClassification/train/sea/2669.jpg inflating: IntelImageClassification/train/sea/2671.jpg inflating: IntelImageClassification/train/sea/2693.jpg inflating: IntelImageClassification/train/sea/2715.jpg inflating: IntelImageClassification/train/sea/272.jpg inflating: IntelImageClassification/train/sea/2740.jpg inflating: IntelImageClassification/train/sea/2774.jpg inflating: IntelImageClassification/train/sea/2839.jpg inflating: IntelImageClassification/train/sea/285.jpg inflating: IntelImageClassification/train/sea/2856.jpg inflating: IntelImageClassification/train/sea/2869.jpg inflating: IntelImageClassification/train/sea/290.jpg inflating: IntelImageClassification/train/sea/2907.jpg inflating: IntelImageClassification/train/sea/2937.jpg inflating: IntelImageClassification/train/sea/2959.jpg inflating: IntelImageClassification/train/sea/2967.jpg inflating: IntelImageClassification/train/sea/2971.jpg inflating: IntelImageClassification/train/sea/2973.jpg inflating: IntelImageClassification/train/sea/2975.jpg inflating: IntelImageClassification/train/sea/299.jpg inflating: IntelImageClassification/train/sea/3010.jpg inflating: IntelImageClassification/train/sea/3019.jpg inflating: IntelImageClassification/train/sea/3031.jpg inflating: IntelImageClassification/train/sea/3041.jpg inflating: IntelImageClassification/train/sea/3046.jpg inflating: IntelImageClassification/train/sea/306.jpg inflating: IntelImageClassification/train/sea/3074.jpg inflating: IntelImageClassification/train/sea/3076.jpg inflating: IntelImageClassification/train/sea/3108.jpg inflating: IntelImageClassification/train/sea/3147.jpg inflating: IntelImageClassification/train/sea/3153.jpg inflating: IntelImageClassification/train/sea/3158.jpg inflating: IntelImageClassification/train/sea/3185.jpg inflating: IntelImageClassification/train/sea/3215.jpg inflating: IntelImageClassification/train/sea/3218.jpg inflating: IntelImageClassification/train/sea/3221.jpg inflating: IntelImageClassification/train/sea/3235.jpg inflating: IntelImageClassification/train/sea/326.jpg inflating: IntelImageClassification/train/sea/3266.jpg inflating: IntelImageClassification/train/sea/3327.jpg inflating: IntelImageClassification/train/sea/3333.jpg inflating: IntelImageClassification/train/sea/3353.jpg inflating: IntelImageClassification/train/sea/336.jpg inflating: IntelImageClassification/train/sea/3376.jpg inflating: IntelImageClassification/train/sea/339.jpg inflating: IntelImageClassification/train/sea/3426.jpg inflating: IntelImageClassification/train/sea/345.jpg inflating: IntelImageClassification/train/sea/3497.jpg inflating: IntelImageClassification/train/sea/3504.jpg inflating: IntelImageClassification/train/sea/3511.jpg inflating: IntelImageClassification/train/sea/3514.jpg inflating: IntelImageClassification/train/sea/3562.jpg inflating: IntelImageClassification/train/sea/3615.jpg inflating: IntelImageClassification/train/sea/3628.jpg inflating: IntelImageClassification/train/sea/363.jpg inflating: IntelImageClassification/train/sea/3691.jpg inflating: IntelImageClassification/train/sea/3731.jpg inflating: IntelImageClassification/train/sea/3751.jpg inflating: IntelImageClassification/train/sea/3783.jpg inflating: IntelImageClassification/train/sea/3784.jpg inflating: IntelImageClassification/train/sea/3807.jpg inflating: IntelImageClassification/train/sea/3824.jpg inflating: IntelImageClassification/train/sea/3840.jpg inflating: IntelImageClassification/train/sea/386.jpg inflating: IntelImageClassification/train/sea/3895.jpg inflating: IntelImageClassification/train/sea/3903.jpg inflating: IntelImageClassification/train/sea/391.jpg inflating: IntelImageClassification/train/sea/3922.jpg inflating: IntelImageClassification/train/sea/3933.jpg inflating: IntelImageClassification/train/sea/3950.jpg inflating: IntelImageClassification/train/sea/3954.jpg inflating: IntelImageClassification/train/sea/3972.jpg inflating: IntelImageClassification/train/sea/4025.jpg inflating: IntelImageClassification/train/sea/4068.jpg inflating: IntelImageClassification/train/sea/4081.jpg inflating: IntelImageClassification/train/sea/4088.jpg inflating: IntelImageClassification/train/sea/4093.jpg inflating: IntelImageClassification/train/sea/4095.jpg inflating: IntelImageClassification/train/sea/4097.jpg inflating: IntelImageClassification/train/sea/4110.jpg inflating: IntelImageClassification/train/sea/4112.jpg inflating: IntelImageClassification/train/sea/4131.jpg inflating: IntelImageClassification/train/sea/4137.jpg inflating: IntelImageClassification/train/sea/416.jpg inflating: IntelImageClassification/train/sea/4186.jpg inflating: IntelImageClassification/train/sea/419.jpg inflating: IntelImageClassification/train/sea/4199.jpg inflating: IntelImageClassification/train/sea/4221.jpg inflating: IntelImageClassification/train/sea/4225.jpg inflating: IntelImageClassification/train/sea/4250.jpg inflating: IntelImageClassification/train/sea/4252.jpg inflating: IntelImageClassification/train/sea/4264.jpg inflating: IntelImageClassification/train/sea/4270.jpg inflating: IntelImageClassification/train/sea/4297.jpg inflating: IntelImageClassification/train/sea/432.jpg inflating: IntelImageClassification/train/sea/433.jpg inflating: IntelImageClassification/train/sea/4358.jpg inflating: IntelImageClassification/train/sea/4383.jpg inflating: IntelImageClassification/train/sea/4388.jpg inflating: IntelImageClassification/train/sea/4404.jpg inflating: IntelImageClassification/train/sea/4408.jpg inflating: IntelImageClassification/train/sea/4423.jpg inflating: IntelImageClassification/train/sea/4437.jpg inflating: IntelImageClassification/train/sea/4441.jpg inflating: IntelImageClassification/train/sea/4446.jpg inflating: IntelImageClassification/train/sea/4450.jpg inflating: IntelImageClassification/train/sea/4452.jpg inflating: IntelImageClassification/train/sea/447.jpg inflating: IntelImageClassification/train/sea/4471.jpg inflating: IntelImageClassification/train/sea/4491.jpg inflating: IntelImageClassification/train/sea/4536.jpg inflating: IntelImageClassification/train/sea/4569.jpg inflating: IntelImageClassification/train/sea/4626.jpg inflating: IntelImageClassification/train/sea/4633.jpg inflating: IntelImageClassification/train/sea/4648.jpg inflating: IntelImageClassification/train/sea/4651.jpg inflating: IntelImageClassification/train/sea/4705.jpg inflating: IntelImageClassification/train/sea/4711.jpg inflating: IntelImageClassification/train/sea/4762.jpg inflating: IntelImageClassification/train/sea/4767.jpg inflating: IntelImageClassification/train/sea/4779.jpg inflating: IntelImageClassification/train/sea/4791.jpg inflating: IntelImageClassification/train/sea/4800.jpg inflating: IntelImageClassification/train/sea/4805.jpg inflating: IntelImageClassification/train/sea/481.jpg inflating: IntelImageClassification/train/sea/4810.jpg inflating: IntelImageClassification/train/sea/4824.jpg inflating: IntelImageClassification/train/sea/4840.jpg inflating: IntelImageClassification/train/sea/4844.jpg inflating: IntelImageClassification/train/sea/486.jpg inflating: IntelImageClassification/train/sea/4861.jpg inflating: IntelImageClassification/train/sea/4865.jpg inflating: IntelImageClassification/train/sea/4889.jpg inflating: IntelImageClassification/train/sea/4908.jpg inflating: IntelImageClassification/train/sea/4912.jpg inflating: IntelImageClassification/train/sea/4920.jpg inflating: IntelImageClassification/train/sea/4939.jpg inflating: IntelImageClassification/train/sea/4940.jpg inflating: IntelImageClassification/train/sea/4954.jpg inflating: IntelImageClassification/train/sea/5011.jpg inflating: IntelImageClassification/train/sea/5023.jpg inflating: IntelImageClassification/train/sea/5045.jpg inflating: IntelImageClassification/train/sea/5052.jpg inflating: IntelImageClassification/train/sea/5071.jpg inflating: IntelImageClassification/train/sea/5096.jpg inflating: IntelImageClassification/train/sea/5104.jpg inflating: IntelImageClassification/train/sea/5105.jpg inflating: IntelImageClassification/train/sea/5133.jpg inflating: IntelImageClassification/train/sea/5140.jpg inflating: IntelImageClassification/train/sea/5147.jpg inflating: IntelImageClassification/train/sea/5149.jpg inflating: IntelImageClassification/train/sea/5165.jpg inflating: IntelImageClassification/train/sea/5175.jpg inflating: IntelImageClassification/train/sea/5183.jpg inflating: IntelImageClassification/train/sea/5196.jpg inflating: IntelImageClassification/train/sea/5203.jpg inflating: IntelImageClassification/train/sea/5215.jpg inflating: IntelImageClassification/train/sea/5231.jpg inflating: IntelImageClassification/train/sea/5241.jpg inflating: IntelImageClassification/train/sea/5261.jpg inflating: IntelImageClassification/train/sea/5307.jpg inflating: IntelImageClassification/train/sea/5338.jpg inflating: IntelImageClassification/train/sea/535.jpg inflating: IntelImageClassification/train/sea/5385.jpg inflating: IntelImageClassification/train/sea/5387.jpg inflating: IntelImageClassification/train/sea/5390.jpg inflating: IntelImageClassification/train/sea/5400.jpg inflating: IntelImageClassification/train/sea/5407.jpg inflating: IntelImageClassification/train/sea/5423.jpg inflating: IntelImageClassification/train/sea/5446.jpg inflating: IntelImageClassification/train/sea/5454.jpg inflating: IntelImageClassification/train/sea/5498.jpg inflating: IntelImageClassification/train/sea/5506.jpg inflating: IntelImageClassification/train/sea/552.jpg inflating: IntelImageClassification/train/sea/5523.jpg inflating: IntelImageClassification/train/sea/5551.jpg inflating: IntelImageClassification/train/sea/5570.jpg inflating: IntelImageClassification/train/sea/5584.jpg inflating: IntelImageClassification/train/sea/5603.jpg inflating: IntelImageClassification/train/sea/5663.jpg inflating: IntelImageClassification/train/sea/5703.jpg inflating: IntelImageClassification/train/sea/5709.jpg inflating: IntelImageClassification/train/sea/5716.jpg inflating: IntelImageClassification/train/sea/5750.jpg inflating: IntelImageClassification/train/sea/5777.jpg inflating: IntelImageClassification/train/sea/580.jpg inflating: IntelImageClassification/train/sea/5822.jpg inflating: IntelImageClassification/train/sea/5829.jpg inflating: IntelImageClassification/train/sea/585.jpg inflating: IntelImageClassification/train/sea/5874.jpg inflating: IntelImageClassification/train/sea/5884.jpg inflating: IntelImageClassification/train/sea/59.jpg inflating: IntelImageClassification/train/sea/5916.jpg inflating: IntelImageClassification/train/sea/5938.jpg inflating: IntelImageClassification/train/sea/5990.jpg inflating: IntelImageClassification/train/sea/603.jpg inflating: IntelImageClassification/train/sea/604.jpg inflating: IntelImageClassification/train/sea/6053.jpg inflating: IntelImageClassification/train/sea/606.jpg inflating: IntelImageClassification/train/sea/6125.jpg inflating: IntelImageClassification/train/sea/6139.jpg inflating: IntelImageClassification/train/sea/6142.jpg inflating: IntelImageClassification/train/sea/6166.jpg inflating: IntelImageClassification/train/sea/6208.jpg inflating: IntelImageClassification/train/sea/6221.jpg inflating: IntelImageClassification/train/sea/6224.jpg inflating: IntelImageClassification/train/sea/623.jpg inflating: IntelImageClassification/train/sea/6236.jpg inflating: IntelImageClassification/train/sea/6237.jpg inflating: IntelImageClassification/train/sea/625.jpg inflating: IntelImageClassification/train/sea/6270.jpg inflating: IntelImageClassification/train/sea/6286.jpg inflating: IntelImageClassification/train/sea/6319.jpg inflating: IntelImageClassification/train/sea/6338.jpg inflating: IntelImageClassification/train/sea/6369.jpg inflating: IntelImageClassification/train/sea/6373.jpg inflating: IntelImageClassification/train/sea/6384.jpg inflating: IntelImageClassification/train/sea/6387.jpg inflating: IntelImageClassification/train/sea/6388.jpg inflating: IntelImageClassification/train/sea/641.jpg inflating: IntelImageClassification/train/sea/6477.jpg inflating: IntelImageClassification/train/sea/6519.jpg inflating: IntelImageClassification/train/sea/6538.jpg inflating: IntelImageClassification/train/sea/6550.jpg inflating: IntelImageClassification/train/sea/6563.jpg inflating: IntelImageClassification/train/sea/6565.jpg inflating: IntelImageClassification/train/sea/6576.jpg inflating: IntelImageClassification/train/sea/6597.jpg inflating: IntelImageClassification/train/sea/6599.jpg inflating: IntelImageClassification/train/sea/6610.jpg inflating: IntelImageClassification/train/sea/6620.jpg inflating: IntelImageClassification/train/sea/6623.jpg inflating: IntelImageClassification/train/sea/6642.jpg inflating: IntelImageClassification/train/sea/6708.jpg inflating: IntelImageClassification/train/sea/673.jpg inflating: IntelImageClassification/train/sea/6736.jpg inflating: IntelImageClassification/train/sea/6742.jpg inflating: IntelImageClassification/train/sea/6744.jpg inflating: IntelImageClassification/train/sea/6756.jpg inflating: IntelImageClassification/train/sea/6758.jpg inflating: IntelImageClassification/train/sea/6762.jpg inflating: IntelImageClassification/train/sea/6768.jpg inflating: IntelImageClassification/train/sea/6778.jpg inflating: IntelImageClassification/train/sea/6787.jpg inflating: IntelImageClassification/train/sea/6791.jpg inflating: IntelImageClassification/train/sea/6837.jpg inflating: IntelImageClassification/train/sea/6839.jpg inflating: IntelImageClassification/train/sea/6843.jpg inflating: IntelImageClassification/train/sea/6844.jpg inflating: IntelImageClassification/train/sea/6858.jpg inflating: IntelImageClassification/train/sea/687.jpg inflating: IntelImageClassification/train/sea/6874.jpg inflating: IntelImageClassification/train/sea/6913.jpg inflating: IntelImageClassification/train/sea/6918.jpg inflating: IntelImageClassification/train/sea/6955.jpg inflating: IntelImageClassification/train/sea/6979.jpg inflating: IntelImageClassification/train/sea/7.jpg inflating: IntelImageClassification/train/sea/7000.jpg inflating: IntelImageClassification/train/sea/7004.jpg inflating: IntelImageClassification/train/sea/7019.jpg inflating: IntelImageClassification/train/sea/704.jpg inflating: IntelImageClassification/train/sea/7052.jpg inflating: IntelImageClassification/train/sea/7057.jpg inflating: IntelImageClassification/train/sea/7134.jpg inflating: IntelImageClassification/train/sea/716.jpg inflating: IntelImageClassification/train/sea/7176.jpg inflating: IntelImageClassification/train/sea/719.jpg inflating: IntelImageClassification/train/sea/7225.jpg inflating: IntelImageClassification/train/sea/7240.jpg inflating: IntelImageClassification/train/sea/7318.jpg inflating: IntelImageClassification/train/sea/7365.jpg inflating: IntelImageClassification/train/sea/7424.jpg inflating: IntelImageClassification/train/sea/7437.jpg inflating: IntelImageClassification/train/sea/744.jpg inflating: IntelImageClassification/train/sea/7441.jpg inflating: IntelImageClassification/train/sea/7447.jpg inflating: IntelImageClassification/train/sea/7450.jpg inflating: IntelImageClassification/train/sea/7461.jpg inflating: IntelImageClassification/train/sea/7495.jpg inflating: IntelImageClassification/train/sea/7525.jpg inflating: IntelImageClassification/train/sea/759.jpg inflating: IntelImageClassification/train/sea/7594.jpg inflating: IntelImageClassification/train/sea/7609.jpg inflating: IntelImageClassification/train/sea/7628.jpg inflating: IntelImageClassification/train/sea/763.jpg inflating: IntelImageClassification/train/sea/7639.jpg inflating: IntelImageClassification/train/sea/764.jpg inflating: IntelImageClassification/train/sea/7646.jpg inflating: IntelImageClassification/train/sea/7699.jpg inflating: IntelImageClassification/train/sea/7711.jpg inflating: IntelImageClassification/train/sea/7713.jpg inflating: IntelImageClassification/train/sea/7725.jpg inflating: IntelImageClassification/train/sea/7727.jpg inflating: IntelImageClassification/train/sea/7728.jpg inflating: IntelImageClassification/train/sea/773.jpg inflating: IntelImageClassification/train/sea/7734.jpg inflating: IntelImageClassification/train/sea/7764.jpg inflating: IntelImageClassification/train/sea/7775.jpg inflating: IntelImageClassification/train/sea/7791.jpg inflating: IntelImageClassification/train/sea/7848.jpg inflating: IntelImageClassification/train/sea/786.jpg inflating: IntelImageClassification/train/sea/7868.jpg inflating: IntelImageClassification/train/sea/7900.jpg inflating: IntelImageClassification/train/sea/7901.jpg inflating: IntelImageClassification/train/sea/7948.jpg inflating: IntelImageClassification/train/sea/7950.jpg inflating: IntelImageClassification/train/sea/7952.jpg inflating: IntelImageClassification/train/sea/796.jpg inflating: IntelImageClassification/train/sea/7992.jpg inflating: IntelImageClassification/train/sea/8006.jpg inflating: IntelImageClassification/train/sea/8022.jpg inflating: IntelImageClassification/train/sea/8053.jpg inflating: IntelImageClassification/train/sea/8073.jpg inflating: IntelImageClassification/train/sea/8090.jpg inflating: IntelImageClassification/train/sea/8189.jpg inflating: IntelImageClassification/train/sea/8201.jpg inflating: IntelImageClassification/train/sea/8214.jpg inflating: IntelImageClassification/train/sea/8217.jpg inflating: IntelImageClassification/train/sea/8233.jpg inflating: IntelImageClassification/train/sea/8248.jpg inflating: IntelImageClassification/train/sea/8278.jpg inflating: IntelImageClassification/train/sea/8322.jpg inflating: IntelImageClassification/train/sea/8340.jpg inflating: IntelImageClassification/train/sea/8348.jpg inflating: IntelImageClassification/train/sea/8375.jpg inflating: IntelImageClassification/train/sea/8425.jpg inflating: IntelImageClassification/train/sea/846.jpg inflating: IntelImageClassification/train/sea/8469.jpg inflating: IntelImageClassification/train/sea/8477.jpg inflating: IntelImageClassification/train/sea/8509.jpg inflating: IntelImageClassification/train/sea/8514.jpg inflating: IntelImageClassification/train/sea/8529.jpg inflating: IntelImageClassification/train/sea/8569.jpg inflating: IntelImageClassification/train/sea/8584.jpg inflating: IntelImageClassification/train/sea/8616.jpg inflating: IntelImageClassification/train/sea/8643.jpg inflating: IntelImageClassification/train/sea/8668.jpg inflating: IntelImageClassification/train/sea/867.jpg inflating: IntelImageClassification/train/sea/8673.jpg inflating: IntelImageClassification/train/sea/868.jpg inflating: IntelImageClassification/train/sea/8687.jpg inflating: IntelImageClassification/train/sea/8697.jpg inflating: IntelImageClassification/train/sea/87.jpg inflating: IntelImageClassification/train/sea/8731.jpg inflating: IntelImageClassification/train/sea/8739.jpg inflating: IntelImageClassification/train/sea/8767.jpg inflating: IntelImageClassification/train/sea/879.jpg inflating: IntelImageClassification/train/sea/882.jpg inflating: IntelImageClassification/train/sea/8854.jpg inflating: IntelImageClassification/train/sea/8879.jpg inflating: IntelImageClassification/train/sea/8882.jpg inflating: IntelImageClassification/train/sea/89.jpg inflating: IntelImageClassification/train/sea/8900.jpg inflating: IntelImageClassification/train/sea/8920.jpg inflating: IntelImageClassification/train/sea/8939.jpg inflating: IntelImageClassification/train/sea/894.jpg inflating: IntelImageClassification/train/sea/8952.jpg inflating: IntelImageClassification/train/sea/8955.jpg inflating: IntelImageClassification/train/sea/8965.jpg inflating: IntelImageClassification/train/sea/8975.jpg inflating: IntelImageClassification/train/sea/8996.jpg inflating: IntelImageClassification/train/sea/90.jpg inflating: IntelImageClassification/train/sea/9016.jpg inflating: IntelImageClassification/train/sea/9035.jpg inflating: IntelImageClassification/train/sea/9057.jpg inflating: IntelImageClassification/train/sea/9058.jpg inflating: IntelImageClassification/train/sea/9061.jpg inflating: IntelImageClassification/train/sea/9106.jpg inflating: IntelImageClassification/train/sea/912.jpg inflating: IntelImageClassification/train/sea/916.jpg inflating: IntelImageClassification/train/sea/9182.jpg inflating: IntelImageClassification/train/sea/922.jpg inflating: IntelImageClassification/train/sea/9220.jpg inflating: IntelImageClassification/train/sea/9221.jpg inflating: IntelImageClassification/train/sea/9230.jpg inflating: IntelImageClassification/train/sea/9256.jpg inflating: IntelImageClassification/train/sea/9269.jpg inflating: IntelImageClassification/train/sea/9279.jpg inflating: IntelImageClassification/train/sea/9306.jpg inflating: IntelImageClassification/train/sea/9313.jpg inflating: IntelImageClassification/train/sea/9357.jpg inflating: IntelImageClassification/train/sea/9363.jpg inflating: IntelImageClassification/train/sea/9375.jpg inflating: IntelImageClassification/train/sea/9394.jpg inflating: IntelImageClassification/train/sea/9408.jpg inflating: IntelImageClassification/train/sea/9464.jpg inflating: IntelImageClassification/train/sea/9475.jpg inflating: IntelImageClassification/train/sea/9497.jpg inflating: IntelImageClassification/train/sea/9503.jpg inflating: IntelImageClassification/train/sea/9519.jpg inflating: IntelImageClassification/train/sea/9549.jpg inflating: IntelImageClassification/train/sea/9575.jpg inflating: IntelImageClassification/train/sea/9577.jpg inflating: IntelImageClassification/train/sea/9583.jpg inflating: IntelImageClassification/train/sea/9602.jpg inflating: IntelImageClassification/train/sea/9613.jpg inflating: IntelImageClassification/train/sea/9621.jpg inflating: IntelImageClassification/train/sea/9625.jpg inflating: IntelImageClassification/train/sea/9666.jpg inflating: IntelImageClassification/train/sea/9676.jpg inflating: IntelImageClassification/train/sea/9692.jpg inflating: IntelImageClassification/train/sea/9695.jpg inflating: IntelImageClassification/train/sea/9708.jpg inflating: IntelImageClassification/train/sea/9731.jpg inflating: IntelImageClassification/train/sea/9742.jpg inflating: IntelImageClassification/train/sea/9752.jpg inflating: IntelImageClassification/train/sea/9753.jpg inflating: IntelImageClassification/train/sea/977.jpg inflating: IntelImageClassification/train/sea/9780.jpg inflating: IntelImageClassification/train/sea/9782.jpg inflating: IntelImageClassification/train/sea/9797.jpg inflating: IntelImageClassification/train/sea/9830.jpg inflating: IntelImageClassification/train/sea/9857.jpg inflating: IntelImageClassification/train/sea/986.jpg inflating: IntelImageClassification/train/sea/10299.jpg inflating: IntelImageClassification/train/sea/10382.jpg inflating: IntelImageClassification/train/sea/1047.jpg inflating: IntelImageClassification/train/sea/10473.jpg inflating: IntelImageClassification/train/sea/10686.jpg inflating: IntelImageClassification/train/sea/10739.jpg inflating: IntelImageClassification/train/sea/10822.jpg inflating: IntelImageClassification/train/sea/10889.jpg inflating: IntelImageClassification/train/sea/11030.jpg inflating: IntelImageClassification/train/sea/11142.jpg inflating: IntelImageClassification/train/sea/11253.jpg inflating: IntelImageClassification/train/sea/11321.jpg inflating: IntelImageClassification/train/sea/11414.jpg inflating: IntelImageClassification/train/sea/1152.jpg inflating: IntelImageClassification/train/sea/11684.jpg inflating: IntelImageClassification/train/sea/11888.jpg inflating: IntelImageClassification/train/sea/11963.jpg inflating: IntelImageClassification/train/sea/12147.jpg inflating: IntelImageClassification/train/sea/12174.jpg inflating: IntelImageClassification/train/sea/12306.jpg inflating: IntelImageClassification/train/sea/1256.jpg inflating: IntelImageClassification/train/sea/12596.jpg inflating: IntelImageClassification/train/sea/12619.jpg inflating: IntelImageClassification/train/sea/12738.jpg inflating: IntelImageClassification/train/sea/1301.jpg inflating: IntelImageClassification/train/sea/13038.jpg inflating: IntelImageClassification/train/sea/13080.jpg inflating: IntelImageClassification/train/sea/13149.jpg inflating: IntelImageClassification/train/sea/13153.jpg inflating: IntelImageClassification/train/sea/13293.jpg inflating: IntelImageClassification/train/sea/13304.jpg inflating: IntelImageClassification/train/sea/13382.jpg inflating: IntelImageClassification/train/sea/1368.jpg inflating: IntelImageClassification/train/sea/13685.jpg inflating: IntelImageClassification/train/sea/13692.jpg inflating: IntelImageClassification/train/sea/13736.jpg inflating: IntelImageClassification/train/sea/13886.jpg inflating: IntelImageClassification/train/sea/14070.jpg inflating: IntelImageClassification/train/sea/14173.jpg inflating: IntelImageClassification/train/sea/14187.jpg inflating: IntelImageClassification/train/sea/14228.jpg inflating: IntelImageClassification/train/sea/14291.jpg inflating: IntelImageClassification/train/sea/14317.jpg inflating: IntelImageClassification/train/sea/14330.jpg inflating: IntelImageClassification/train/sea/14469.jpg inflating: IntelImageClassification/train/sea/14563.jpg inflating: IntelImageClassification/train/sea/14573.jpg inflating: IntelImageClassification/train/sea/14713.jpg inflating: IntelImageClassification/train/sea/14778.jpg inflating: IntelImageClassification/train/sea/1490.jpg inflating: IntelImageClassification/train/sea/14935.jpg inflating: IntelImageClassification/train/sea/14990.jpg inflating: IntelImageClassification/train/sea/15043.jpg inflating: IntelImageClassification/train/sea/15184.jpg inflating: IntelImageClassification/train/sea/15221.jpg inflating: IntelImageClassification/train/sea/15243.jpg inflating: IntelImageClassification/train/sea/15433.jpg inflating: IntelImageClassification/train/sea/15546.jpg inflating: IntelImageClassification/train/sea/15581.jpg inflating: IntelImageClassification/train/sea/15703.jpg inflating: IntelImageClassification/train/sea/15715.jpg inflating: IntelImageClassification/train/sea/15814.jpg inflating: IntelImageClassification/train/sea/15853.jpg inflating: IntelImageClassification/train/sea/15875.jpg inflating: IntelImageClassification/train/sea/1595.jpg inflating: IntelImageClassification/train/sea/15968.jpg inflating: IntelImageClassification/train/sea/16018.jpg inflating: IntelImageClassification/train/sea/16116.jpg inflating: IntelImageClassification/train/sea/16292.jpg inflating: IntelImageClassification/train/sea/16368.jpg inflating: IntelImageClassification/train/sea/16394.jpg inflating: IntelImageClassification/train/sea/16528.jpg inflating: IntelImageClassification/train/sea/16661.jpg inflating: IntelImageClassification/train/sea/16703.jpg inflating: IntelImageClassification/train/sea/16748.jpg inflating: IntelImageClassification/train/sea/16752.jpg inflating: IntelImageClassification/train/sea/16768.jpg inflating: IntelImageClassification/train/sea/16853.jpg inflating: IntelImageClassification/train/sea/1709.jpg inflating: IntelImageClassification/train/sea/17112.jpg inflating: IntelImageClassification/train/sea/17309.jpg inflating: IntelImageClassification/train/sea/17417.jpg inflating: IntelImageClassification/train/sea/17498.jpg inflating: IntelImageClassification/train/sea/17532.jpg inflating: IntelImageClassification/train/sea/17564.jpg inflating: IntelImageClassification/train/sea/17570.jpg inflating: IntelImageClassification/train/sea/17651.jpg inflating: IntelImageClassification/train/sea/17668.jpg inflating: IntelImageClassification/train/sea/17683.jpg inflating: IntelImageClassification/train/sea/17722.jpg inflating: IntelImageClassification/train/sea/17741.jpg inflating: IntelImageClassification/train/sea/17794.jpg inflating: IntelImageClassification/train/sea/1798.jpg inflating: IntelImageClassification/train/sea/18043.jpg inflating: IntelImageClassification/train/sea/18070.jpg inflating: IntelImageClassification/train/sea/18111.jpg inflating: IntelImageClassification/train/sea/18136.jpg inflating: IntelImageClassification/train/sea/18143.jpg inflating: IntelImageClassification/train/sea/18145.jpg inflating: IntelImageClassification/train/sea/18244.jpg inflating: IntelImageClassification/train/sea/18323.jpg inflating: IntelImageClassification/train/sea/18334.jpg inflating: IntelImageClassification/train/sea/18347.jpg inflating: IntelImageClassification/train/sea/18360.jpg inflating: IntelImageClassification/train/sea/1841.jpg inflating: IntelImageClassification/train/sea/18440.jpg inflating: IntelImageClassification/train/sea/18455.jpg inflating: IntelImageClassification/train/sea/18553.jpg inflating: IntelImageClassification/train/sea/18590.jpg inflating: IntelImageClassification/train/sea/18745.jpg inflating: IntelImageClassification/train/sea/18787.jpg inflating: IntelImageClassification/train/sea/18891.jpg inflating: IntelImageClassification/train/sea/18920.jpg inflating: IntelImageClassification/train/sea/18932.jpg inflating: IntelImageClassification/train/sea/19052.jpg inflating: IntelImageClassification/train/sea/19119.jpg inflating: IntelImageClassification/train/sea/19167.jpg inflating: IntelImageClassification/train/sea/19175.jpg inflating: IntelImageClassification/train/sea/19185.jpg inflating: IntelImageClassification/train/sea/19189.jpg inflating: IntelImageClassification/train/sea/19267.jpg inflating: IntelImageClassification/train/sea/19531.jpg inflating: IntelImageClassification/train/sea/19541.jpg inflating: IntelImageClassification/train/sea/19555.jpg inflating: IntelImageClassification/train/sea/19660.jpg inflating: IntelImageClassification/train/sea/19721.jpg inflating: IntelImageClassification/train/sea/19765.jpg inflating: IntelImageClassification/train/sea/19777.jpg inflating: IntelImageClassification/train/sea/19784.jpg inflating: IntelImageClassification/train/sea/1980.jpg inflating: IntelImageClassification/train/sea/19947.jpg inflating: IntelImageClassification/train/sea/2015.jpg inflating: IntelImageClassification/train/sea/2036.jpg inflating: IntelImageClassification/train/sea/2073.jpg inflating: IntelImageClassification/train/sea/2242.jpg inflating: IntelImageClassification/train/sea/2338.jpg inflating: IntelImageClassification/train/sea/2377.jpg inflating: IntelImageClassification/train/sea/2415.jpg inflating: IntelImageClassification/train/sea/2439.jpg inflating: IntelImageClassification/train/sea/281.jpg inflating: IntelImageClassification/train/sea/2838.jpg inflating: IntelImageClassification/train/sea/2864.jpg inflating: IntelImageClassification/train/sea/2886.jpg inflating: IntelImageClassification/train/sea/2934.jpg inflating: IntelImageClassification/train/sea/3018.jpg inflating: IntelImageClassification/train/sea/3053.jpg inflating: IntelImageClassification/train/sea/3061.jpg inflating: IntelImageClassification/train/sea/3099.jpg inflating: IntelImageClassification/train/sea/3192.jpg inflating: IntelImageClassification/train/sea/3311.jpg inflating: IntelImageClassification/train/sea/3470.jpg inflating: IntelImageClassification/train/sea/3482.jpg inflating: IntelImageClassification/train/sea/3549.jpg inflating: IntelImageClassification/train/sea/3561.jpg inflating: IntelImageClassification/train/sea/3717.jpg inflating: IntelImageClassification/train/sea/3749.jpg inflating: IntelImageClassification/train/sea/3804.jpg inflating: IntelImageClassification/train/sea/3881.jpg inflating: IntelImageClassification/train/sea/3944.jpg inflating: IntelImageClassification/train/sea/4008.jpg inflating: IntelImageClassification/train/sea/4038.jpg inflating: IntelImageClassification/train/sea/4041.jpg inflating: IntelImageClassification/train/sea/4099.jpg inflating: IntelImageClassification/train/sea/4144.jpg inflating: IntelImageClassification/train/sea/4184.jpg inflating: IntelImageClassification/train/sea/4232.jpg inflating: IntelImageClassification/train/sea/4251.jpg inflating: IntelImageClassification/train/sea/4257.jpg inflating: IntelImageClassification/train/sea/4266.jpg inflating: IntelImageClassification/train/sea/427.jpg inflating: IntelImageClassification/train/sea/4322.jpg inflating: IntelImageClassification/train/sea/4335.jpg inflating: IntelImageClassification/train/sea/4403.jpg inflating: IntelImageClassification/train/sea/441.jpg inflating: IntelImageClassification/train/sea/4431.jpg inflating: IntelImageClassification/train/sea/4493.jpg inflating: IntelImageClassification/train/sea/4504.jpg inflating: IntelImageClassification/train/sea/4527.jpg inflating: IntelImageClassification/train/sea/4555.jpg inflating: IntelImageClassification/train/sea/4645.jpg inflating: IntelImageClassification/train/sea/4654.jpg inflating: IntelImageClassification/train/sea/469.jpg inflating: IntelImageClassification/train/sea/4700.jpg inflating: IntelImageClassification/train/sea/4745.jpg inflating: IntelImageClassification/train/sea/476.jpg inflating: IntelImageClassification/train/sea/4831.jpg inflating: IntelImageClassification/train/sea/4838.jpg inflating: IntelImageClassification/train/sea/4945.jpg inflating: IntelImageClassification/train/sea/4974.jpg inflating: IntelImageClassification/train/sea/5009.jpg inflating: IntelImageClassification/train/sea/512.jpg inflating: IntelImageClassification/train/sea/5166.jpg inflating: IntelImageClassification/train/sea/5177.jpg inflating: IntelImageClassification/train/sea/5214.jpg inflating: IntelImageClassification/train/sea/5243.jpg inflating: IntelImageClassification/train/sea/5271.jpg inflating: IntelImageClassification/train/sea/5318.jpg inflating: IntelImageClassification/train/sea/5362.jpg inflating: IntelImageClassification/train/sea/540.jpg inflating: IntelImageClassification/train/sea/5600.jpg inflating: IntelImageClassification/train/sea/5679.jpg inflating: IntelImageClassification/train/sea/5691.jpg inflating: IntelImageClassification/train/sea/5747.jpg inflating: IntelImageClassification/train/sea/5810.jpg inflating: IntelImageClassification/train/sea/582.jpg inflating: IntelImageClassification/train/sea/5902.jpg inflating: IntelImageClassification/train/sea/5997.jpg inflating: IntelImageClassification/train/sea/6050.jpg inflating: IntelImageClassification/train/sea/6052.jpg inflating: IntelImageClassification/train/sea/6111.jpg inflating: IntelImageClassification/train/sea/6197.jpg inflating: IntelImageClassification/train/sea/6269.jpg inflating: IntelImageClassification/train/sea/6274.jpg inflating: IntelImageClassification/train/sea/6337.jpg inflating: IntelImageClassification/train/sea/6359.jpg inflating: IntelImageClassification/train/sea/6368.jpg inflating: IntelImageClassification/train/sea/640.jpg inflating: IntelImageClassification/train/sea/65.jpg inflating: IntelImageClassification/train/sea/6502.jpg inflating: IntelImageClassification/train/sea/6541.jpg inflating: IntelImageClassification/train/sea/6624.jpg inflating: IntelImageClassification/train/sea/6634.jpg inflating: IntelImageClassification/train/sea/666.jpg inflating: IntelImageClassification/train/sea/6722.jpg inflating: IntelImageClassification/train/sea/6761.jpg inflating: IntelImageClassification/train/sea/6776.jpg inflating: IntelImageClassification/train/sea/6793.jpg inflating: IntelImageClassification/train/sea/6830.jpg inflating: IntelImageClassification/train/sea/6859.jpg inflating: IntelImageClassification/train/sea/7033.jpg inflating: IntelImageClassification/train/sea/7040.jpg inflating: IntelImageClassification/train/sea/7058.jpg inflating: IntelImageClassification/train/sea/7095.jpg inflating: IntelImageClassification/train/sea/7111.jpg inflating: IntelImageClassification/train/sea/7136.jpg inflating: IntelImageClassification/train/sea/7146.jpg inflating: IntelImageClassification/train/sea/7246.jpg inflating: IntelImageClassification/train/sea/7286.jpg inflating: IntelImageClassification/train/sea/7297.jpg inflating: IntelImageClassification/train/sea/7307.jpg inflating: IntelImageClassification/train/sea/7313.jpg inflating: IntelImageClassification/train/sea/7659.jpg inflating: IntelImageClassification/train/sea/7669.jpg inflating: IntelImageClassification/train/sea/7785.jpg inflating: IntelImageClassification/train/sea/7931.jpg inflating: IntelImageClassification/train/sea/8156.jpg inflating: IntelImageClassification/train/sea/8230.jpg inflating: IntelImageClassification/train/sea/8232.jpg inflating: IntelImageClassification/train/sea/8306.jpg inflating: IntelImageClassification/train/sea/834.jpg inflating: IntelImageClassification/train/sea/8541.jpg inflating: IntelImageClassification/train/sea/8613.jpg inflating: IntelImageClassification/train/sea/8699.jpg inflating: IntelImageClassification/train/sea/8825.jpg inflating: IntelImageClassification/train/sea/8904.jpg inflating: IntelImageClassification/train/sea/8922.jpg inflating: IntelImageClassification/train/sea/8930.jpg inflating: IntelImageClassification/train/sea/9008.jpg inflating: IntelImageClassification/train/sea/9017.jpg inflating: IntelImageClassification/train/sea/9051.jpg inflating: IntelImageClassification/train/sea/9093.jpg inflating: IntelImageClassification/train/sea/9097.jpg inflating: IntelImageClassification/train/sea/9102.jpg inflating: IntelImageClassification/train/sea/934.jpg inflating: IntelImageClassification/train/sea/942.jpg inflating: IntelImageClassification/train/sea/9454.jpg inflating: IntelImageClassification/train/sea/9494.jpg inflating: IntelImageClassification/train/sea/962.jpg inflating: IntelImageClassification/train/sea/9620.jpg inflating: IntelImageClassification/train/sea/9628.jpg inflating: IntelImageClassification/train/sea/9698.jpg inflating: IntelImageClassification/train/sea/9759.jpg inflating: IntelImageClassification/train/sea/9774.jpg inflating: IntelImageClassification/train/sea/9999.jpg creating: IntelImageClassification/train/street/ inflating: IntelImageClassification/train/street/1000.jpg inflating: IntelImageClassification/train/street/10015.jpg inflating: IntelImageClassification/train/street/10019.jpg inflating: IntelImageClassification/train/street/10039.jpg inflating: IntelImageClassification/train/street/10062.jpg inflating: IntelImageClassification/train/street/10063.jpg inflating: IntelImageClassification/train/street/10076.jpg inflating: IntelImageClassification/train/street/10097.jpg inflating: IntelImageClassification/train/street/10099.jpg inflating: IntelImageClassification/train/street/1011.jpg inflating: IntelImageClassification/train/street/10131.jpg inflating: IntelImageClassification/train/street/10215.jpg inflating: IntelImageClassification/train/street/10216.jpg inflating: IntelImageClassification/train/street/1023.jpg inflating: IntelImageClassification/train/street/10230.jpg inflating: IntelImageClassification/train/street/10236.jpg inflating: IntelImageClassification/train/street/10238.jpg inflating: IntelImageClassification/train/street/10255.jpg inflating: IntelImageClassification/train/street/10296.jpg inflating: IntelImageClassification/train/street/10297.jpg inflating: IntelImageClassification/train/street/10313.jpg inflating: IntelImageClassification/train/street/10317.jpg inflating: IntelImageClassification/train/street/1033.jpg inflating: IntelImageClassification/train/street/10364.jpg inflating: IntelImageClassification/train/street/104.jpg inflating: IntelImageClassification/train/street/10430.jpg inflating: IntelImageClassification/train/street/10431.jpg inflating: IntelImageClassification/train/street/10448.jpg inflating: IntelImageClassification/train/street/10463.jpg inflating: IntelImageClassification/train/street/10490.jpg inflating: IntelImageClassification/train/street/10503.jpg inflating: IntelImageClassification/train/street/10504.jpg inflating: IntelImageClassification/train/street/10547.jpg inflating: IntelImageClassification/train/street/10580.jpg inflating: IntelImageClassification/train/street/10588.jpg inflating: IntelImageClassification/train/street/10613.jpg inflating: IntelImageClassification/train/street/10632.jpg inflating: IntelImageClassification/train/street/10643.jpg inflating: IntelImageClassification/train/street/10648.jpg inflating: IntelImageClassification/train/street/10661.jpg inflating: IntelImageClassification/train/street/1068.jpg inflating: IntelImageClassification/train/street/10697.jpg inflating: IntelImageClassification/train/street/10735.jpg inflating: IntelImageClassification/train/street/10763.jpg inflating: IntelImageClassification/train/street/10784.jpg inflating: IntelImageClassification/train/street/108.jpg inflating: IntelImageClassification/train/street/10834.jpg inflating: IntelImageClassification/train/street/10835.jpg inflating: IntelImageClassification/train/street/10841.jpg inflating: IntelImageClassification/train/street/10845.jpg inflating: IntelImageClassification/train/street/10851.jpg inflating: IntelImageClassification/train/street/10852.jpg inflating: IntelImageClassification/train/street/10900.jpg inflating: IntelImageClassification/train/street/10925.jpg inflating: IntelImageClassification/train/street/10927.jpg inflating: IntelImageClassification/train/street/10938.jpg inflating: IntelImageClassification/train/street/1094.jpg inflating: IntelImageClassification/train/street/10958.jpg inflating: IntelImageClassification/train/street/10972.jpg inflating: IntelImageClassification/train/street/10980.jpg inflating: IntelImageClassification/train/street/10985.jpg inflating: IntelImageClassification/train/street/11064.jpg inflating: IntelImageClassification/train/street/1108.jpg inflating: IntelImageClassification/train/street/11086.jpg inflating: IntelImageClassification/train/street/11088.jpg inflating: IntelImageClassification/train/street/11092.jpg inflating: IntelImageClassification/train/street/11122.jpg inflating: IntelImageClassification/train/street/11141.jpg inflating: IntelImageClassification/train/street/11154.jpg inflating: IntelImageClassification/train/street/11168.jpg inflating: IntelImageClassification/train/street/11198.jpg inflating: IntelImageClassification/train/street/1120.jpg inflating: IntelImageClassification/train/street/11207.jpg inflating: IntelImageClassification/train/street/1122.jpg inflating: IntelImageClassification/train/street/11236.jpg inflating: IntelImageClassification/train/street/11246.jpg inflating: IntelImageClassification/train/street/11255.jpg inflating: IntelImageClassification/train/street/11257.jpg inflating: IntelImageClassification/train/street/11268.jpg inflating: IntelImageClassification/train/street/1134.jpg inflating: IntelImageClassification/train/street/11381.jpg inflating: IntelImageClassification/train/street/1139.jpg inflating: IntelImageClassification/train/street/11404.jpg inflating: IntelImageClassification/train/street/11407.jpg inflating: IntelImageClassification/train/street/11416.jpg inflating: IntelImageClassification/train/street/11417.jpg inflating: IntelImageClassification/train/street/1142.jpg inflating: IntelImageClassification/train/street/11421.jpg inflating: IntelImageClassification/train/street/11424.jpg inflating: IntelImageClassification/train/street/11440.jpg inflating: IntelImageClassification/train/street/11459.jpg inflating: IntelImageClassification/train/street/1146.jpg inflating: IntelImageClassification/train/street/11470.jpg inflating: IntelImageClassification/train/street/11506.jpg inflating: IntelImageClassification/train/street/11518.jpg inflating: IntelImageClassification/train/street/11522.jpg inflating: IntelImageClassification/train/street/11542.jpg inflating: IntelImageClassification/train/street/11545.jpg inflating: IntelImageClassification/train/street/11552.jpg inflating: IntelImageClassification/train/street/11563.jpg inflating: IntelImageClassification/train/street/11567.jpg inflating: IntelImageClassification/train/street/11608.jpg inflating: IntelImageClassification/train/street/11625.jpg inflating: IntelImageClassification/train/street/11644.jpg inflating: IntelImageClassification/train/street/11649.jpg inflating: IntelImageClassification/train/street/1167.jpg inflating: IntelImageClassification/train/street/11692.jpg inflating: IntelImageClassification/train/street/11710.jpg inflating: IntelImageClassification/train/street/11717.jpg inflating: IntelImageClassification/train/street/11721.jpg inflating: IntelImageClassification/train/street/11722.jpg inflating: IntelImageClassification/train/street/11723.jpg inflating: IntelImageClassification/train/street/11737.jpg inflating: IntelImageClassification/train/street/11755.jpg inflating: IntelImageClassification/train/street/11782.jpg inflating: IntelImageClassification/train/street/11799.jpg inflating: IntelImageClassification/train/street/11800.jpg inflating: IntelImageClassification/train/street/11814.jpg inflating: IntelImageClassification/train/street/1182.jpg inflating: IntelImageClassification/train/street/11826.jpg inflating: IntelImageClassification/train/street/1186.jpg inflating: IntelImageClassification/train/street/11867.jpg inflating: IntelImageClassification/train/street/11889.jpg inflating: IntelImageClassification/train/street/11906.jpg inflating: IntelImageClassification/train/street/1191.jpg inflating: IntelImageClassification/train/street/11913.jpg inflating: IntelImageClassification/train/street/11917.jpg inflating: IntelImageClassification/train/street/1192.jpg inflating: IntelImageClassification/train/street/1194.jpg inflating: IntelImageClassification/train/street/11960.jpg inflating: IntelImageClassification/train/street/11973.jpg inflating: IntelImageClassification/train/street/12003.jpg inflating: IntelImageClassification/train/street/12005.jpg inflating: IntelImageClassification/train/street/12021.jpg inflating: IntelImageClassification/train/street/12046.jpg inflating: IntelImageClassification/train/street/12089.jpg inflating: IntelImageClassification/train/street/1213.jpg inflating: IntelImageClassification/train/street/12196.jpg inflating: IntelImageClassification/train/street/12206.jpg inflating: IntelImageClassification/train/street/12210.jpg inflating: IntelImageClassification/train/street/12217.jpg inflating: IntelImageClassification/train/street/12240.jpg inflating: IntelImageClassification/train/street/12277.jpg inflating: IntelImageClassification/train/street/1230.jpg inflating: IntelImageClassification/train/street/12319.jpg inflating: IntelImageClassification/train/street/12327.jpg inflating: IntelImageClassification/train/street/12379.jpg inflating: IntelImageClassification/train/street/12398.jpg inflating: IntelImageClassification/train/street/12415.jpg inflating: IntelImageClassification/train/street/12448.jpg inflating: IntelImageClassification/train/street/12449.jpg inflating: IntelImageClassification/train/street/12523.jpg inflating: IntelImageClassification/train/street/12597.jpg inflating: IntelImageClassification/train/street/12603.jpg inflating: IntelImageClassification/train/street/12604.jpg inflating: IntelImageClassification/train/street/12622.jpg inflating: IntelImageClassification/train/street/12623.jpg inflating: IntelImageClassification/train/street/1266.jpg inflating: IntelImageClassification/train/street/1267.jpg inflating: IntelImageClassification/train/street/12682.jpg inflating: IntelImageClassification/train/street/1269.jpg inflating: IntelImageClassification/train/street/1270.jpg inflating: IntelImageClassification/train/street/12740.jpg inflating: IntelImageClassification/train/street/12745.jpg inflating: IntelImageClassification/train/street/12771.jpg inflating: IntelImageClassification/train/street/12777.jpg inflating: IntelImageClassification/train/street/12779.jpg inflating: IntelImageClassification/train/street/12780.jpg inflating: IntelImageClassification/train/street/1280.jpg inflating: IntelImageClassification/train/street/12820.jpg inflating: IntelImageClassification/train/street/12861.jpg inflating: IntelImageClassification/train/street/12875.jpg inflating: IntelImageClassification/train/street/12880.jpg inflating: IntelImageClassification/train/street/12884.jpg inflating: IntelImageClassification/train/street/12958.jpg inflating: IntelImageClassification/train/street/12987.jpg inflating: IntelImageClassification/train/street/12988.jpg inflating: IntelImageClassification/train/street/1299.jpg inflating: IntelImageClassification/train/street/13011.jpg inflating: IntelImageClassification/train/street/13020.jpg inflating: IntelImageClassification/train/street/1304.jpg inflating: IntelImageClassification/train/street/13046.jpg inflating: IntelImageClassification/train/street/1306.jpg inflating: IntelImageClassification/train/street/1308.jpg inflating: IntelImageClassification/train/street/13107.jpg inflating: IntelImageClassification/train/street/13185.jpg inflating: IntelImageClassification/train/street/13187.jpg inflating: IntelImageClassification/train/street/13195.jpg inflating: IntelImageClassification/train/street/13206.jpg inflating: IntelImageClassification/train/street/13215.jpg inflating: IntelImageClassification/train/street/13221.jpg inflating: IntelImageClassification/train/street/13226.jpg inflating: IntelImageClassification/train/street/1323.jpg inflating: IntelImageClassification/train/street/1329.jpg inflating: IntelImageClassification/train/street/13323.jpg inflating: IntelImageClassification/train/street/1339.jpg inflating: IntelImageClassification/train/street/13391.jpg inflating: IntelImageClassification/train/street/13396.jpg inflating: IntelImageClassification/train/street/13418.jpg inflating: IntelImageClassification/train/street/13430.jpg inflating: IntelImageClassification/train/street/13437.jpg inflating: IntelImageClassification/train/street/13442.jpg inflating: IntelImageClassification/train/street/13456.jpg inflating: IntelImageClassification/train/street/13492.jpg inflating: IntelImageClassification/train/street/13507.jpg inflating: IntelImageClassification/train/street/13514.jpg inflating: IntelImageClassification/train/street/13524.jpg inflating: IntelImageClassification/train/street/13531.jpg inflating: IntelImageClassification/train/street/13539.jpg inflating: IntelImageClassification/train/street/1354.jpg inflating: IntelImageClassification/train/street/13544.jpg inflating: IntelImageClassification/train/street/13557.jpg inflating: IntelImageClassification/train/street/13573.jpg inflating: IntelImageClassification/train/street/13574.jpg inflating: IntelImageClassification/train/street/13586.jpg inflating: IntelImageClassification/train/street/13594.jpg inflating: IntelImageClassification/train/street/13643.jpg inflating: IntelImageClassification/train/street/1365.jpg inflating: IntelImageClassification/train/street/13650.jpg inflating: IntelImageClassification/train/street/13669.jpg inflating: IntelImageClassification/train/street/13675.jpg inflating: IntelImageClassification/train/street/13699.jpg inflating: IntelImageClassification/train/street/13719.jpg inflating: IntelImageClassification/train/street/13740.jpg inflating: IntelImageClassification/train/street/1379.jpg inflating: IntelImageClassification/train/street/138.jpg inflating: IntelImageClassification/train/street/13816.jpg inflating: IntelImageClassification/train/street/13832.jpg inflating: IntelImageClassification/train/street/13834.jpg inflating: IntelImageClassification/train/street/13851.jpg inflating: IntelImageClassification/train/street/13871.jpg inflating: IntelImageClassification/train/street/13874.jpg inflating: IntelImageClassification/train/street/13897.jpg inflating: IntelImageClassification/train/street/13910.jpg inflating: IntelImageClassification/train/street/13954.jpg inflating: IntelImageClassification/train/street/13976.jpg inflating: IntelImageClassification/train/street/1398.jpg inflating: IntelImageClassification/train/street/13985.jpg inflating: IntelImageClassification/train/street/13992.jpg inflating: IntelImageClassification/train/street/13995.jpg inflating: IntelImageClassification/train/street/14002.jpg inflating: IntelImageClassification/train/street/14003.jpg inflating: IntelImageClassification/train/street/14005.jpg inflating: IntelImageClassification/train/street/14015.jpg inflating: IntelImageClassification/train/street/14023.jpg inflating: IntelImageClassification/train/street/14037.jpg inflating: IntelImageClassification/train/street/14052.jpg inflating: IntelImageClassification/train/street/14071.jpg inflating: IntelImageClassification/train/street/14077.jpg inflating: IntelImageClassification/train/street/14097.jpg inflating: IntelImageClassification/train/street/14103.jpg inflating: IntelImageClassification/train/street/14106.jpg inflating: IntelImageClassification/train/street/1411.jpg inflating: IntelImageClassification/train/street/14125.jpg inflating: IntelImageClassification/train/street/14129.jpg inflating: IntelImageClassification/train/street/14134.jpg inflating: IntelImageClassification/train/street/14160.jpg inflating: IntelImageClassification/train/street/14168.jpg inflating: IntelImageClassification/train/street/1417.jpg inflating: IntelImageClassification/train/street/14209.jpg inflating: IntelImageClassification/train/street/14238.jpg inflating: IntelImageClassification/train/street/14266.jpg inflating: IntelImageClassification/train/street/14268.jpg inflating: IntelImageClassification/train/street/14274.jpg inflating: IntelImageClassification/train/street/14287.jpg inflating: IntelImageClassification/train/street/14304.jpg inflating: IntelImageClassification/train/street/14305.jpg inflating: IntelImageClassification/train/street/14375.jpg inflating: IntelImageClassification/train/street/14377.jpg inflating: IntelImageClassification/train/street/14408.jpg inflating: IntelImageClassification/train/street/14420.jpg inflating: IntelImageClassification/train/street/14486.jpg inflating: IntelImageClassification/train/street/14512.jpg inflating: IntelImageClassification/train/street/14533.jpg inflating: IntelImageClassification/train/street/14546.jpg inflating: IntelImageClassification/train/street/14559.jpg inflating: IntelImageClassification/train/street/14567.jpg inflating: IntelImageClassification/train/street/14572.jpg inflating: IntelImageClassification/train/street/14590.jpg inflating: IntelImageClassification/train/street/14607.jpg inflating: IntelImageClassification/train/street/14612.jpg inflating: IntelImageClassification/train/street/14628.jpg inflating: IntelImageClassification/train/street/14638.jpg inflating: IntelImageClassification/train/street/14659.jpg inflating: IntelImageClassification/train/street/14668.jpg inflating: IntelImageClassification/train/street/14676.jpg inflating: IntelImageClassification/train/street/14683.jpg inflating: IntelImageClassification/train/street/14687.jpg inflating: IntelImageClassification/train/street/14692.jpg inflating: IntelImageClassification/train/street/14693.jpg inflating: IntelImageClassification/train/street/147.jpg inflating: IntelImageClassification/train/street/14745.jpg inflating: IntelImageClassification/train/street/14751.jpg inflating: IntelImageClassification/train/street/14752.jpg inflating: IntelImageClassification/train/street/1477.jpg inflating: IntelImageClassification/train/street/14810.jpg inflating: IntelImageClassification/train/street/14818.jpg inflating: IntelImageClassification/train/street/14839.jpg inflating: IntelImageClassification/train/street/14864.jpg inflating: IntelImageClassification/train/street/14874.jpg inflating: IntelImageClassification/train/street/14880.jpg inflating: IntelImageClassification/train/street/1489.jpg inflating: IntelImageClassification/train/street/14910.jpg inflating: IntelImageClassification/train/street/14911.jpg inflating: IntelImageClassification/train/street/14915.jpg inflating: IntelImageClassification/train/street/14932.jpg inflating: IntelImageClassification/train/street/1495.jpg inflating: IntelImageClassification/train/street/14962.jpg inflating: IntelImageClassification/train/street/14994.jpg inflating: IntelImageClassification/train/street/15019.jpg inflating: IntelImageClassification/train/street/15072.jpg inflating: IntelImageClassification/train/street/15092.jpg inflating: IntelImageClassification/train/street/151.jpg inflating: IntelImageClassification/train/street/15115.jpg inflating: IntelImageClassification/train/street/15132.jpg inflating: IntelImageClassification/train/street/15150.jpg inflating: IntelImageClassification/train/street/1523.jpg inflating: IntelImageClassification/train/street/15251.jpg inflating: IntelImageClassification/train/street/15265.jpg inflating: IntelImageClassification/train/street/15279.jpg inflating: IntelImageClassification/train/street/15295.jpg inflating: IntelImageClassification/train/street/15308.jpg inflating: IntelImageClassification/train/street/15332.jpg inflating: IntelImageClassification/train/street/15362.jpg inflating: IntelImageClassification/train/street/15373.jpg inflating: IntelImageClassification/train/street/15385.jpg inflating: IntelImageClassification/train/street/15478.jpg inflating: IntelImageClassification/train/street/15484.jpg inflating: IntelImageClassification/train/street/15512.jpg inflating: IntelImageClassification/train/street/15530.jpg inflating: IntelImageClassification/train/street/15535.jpg inflating: IntelImageClassification/train/street/1556.jpg inflating: IntelImageClassification/train/street/15561.jpg inflating: IntelImageClassification/train/street/15607.jpg inflating: IntelImageClassification/train/street/15640.jpg inflating: IntelImageClassification/train/street/15644.jpg inflating: IntelImageClassification/train/street/15677.jpg inflating: IntelImageClassification/train/street/15680.jpg inflating: IntelImageClassification/train/street/15739.jpg inflating: IntelImageClassification/train/street/1574.jpg inflating: IntelImageClassification/train/street/15752.jpg inflating: IntelImageClassification/train/street/15767.jpg inflating: IntelImageClassification/train/street/15773.jpg inflating: IntelImageClassification/train/street/15793.jpg inflating: IntelImageClassification/train/street/15797.jpg inflating: IntelImageClassification/train/street/15799.jpg inflating: IntelImageClassification/train/street/15802.jpg inflating: IntelImageClassification/train/street/15856.jpg inflating: IntelImageClassification/train/street/1586.jpg inflating: IntelImageClassification/train/street/15862.jpg inflating: IntelImageClassification/train/street/15869.jpg inflating: IntelImageClassification/train/street/15883.jpg inflating: IntelImageClassification/train/street/15926.jpg inflating: IntelImageClassification/train/street/15995.jpg inflating: IntelImageClassification/train/street/1605.jpg inflating: IntelImageClassification/train/street/16054.jpg inflating: IntelImageClassification/train/street/16076.jpg inflating: IntelImageClassification/train/street/16077.jpg inflating: IntelImageClassification/train/street/16143.jpg inflating: IntelImageClassification/train/street/1615.jpg inflating: IntelImageClassification/train/street/16175.jpg inflating: IntelImageClassification/train/street/1618.jpg inflating: IntelImageClassification/train/street/16195.jpg inflating: IntelImageClassification/train/street/16198.jpg inflating: IntelImageClassification/train/street/16200.jpg inflating: IntelImageClassification/train/street/16201.jpg inflating: IntelImageClassification/train/street/16209.jpg inflating: IntelImageClassification/train/street/16240.jpg inflating: IntelImageClassification/train/street/16258.jpg inflating: IntelImageClassification/train/street/16261.jpg inflating: IntelImageClassification/train/street/16287.jpg inflating: IntelImageClassification/train/street/16352.jpg inflating: IntelImageClassification/train/street/16369.jpg inflating: IntelImageClassification/train/street/16370.jpg inflating: IntelImageClassification/train/street/16437.jpg inflating: IntelImageClassification/train/street/1648.jpg inflating: IntelImageClassification/train/street/16481.jpg inflating: IntelImageClassification/train/street/16482.jpg inflating: IntelImageClassification/train/street/16489.jpg inflating: IntelImageClassification/train/street/16496.jpg inflating: IntelImageClassification/train/street/16516.jpg inflating: IntelImageClassification/train/street/16521.jpg inflating: IntelImageClassification/train/street/16525.jpg inflating: IntelImageClassification/train/street/16556.jpg inflating: IntelImageClassification/train/street/16561.jpg inflating: IntelImageClassification/train/street/16571.jpg inflating: IntelImageClassification/train/street/1660.jpg inflating: IntelImageClassification/train/street/16633.jpg inflating: IntelImageClassification/train/street/16652.jpg inflating: IntelImageClassification/train/street/16691.jpg inflating: IntelImageClassification/train/street/16727.jpg inflating: IntelImageClassification/train/street/16740.jpg inflating: IntelImageClassification/train/street/16776.jpg inflating: IntelImageClassification/train/street/16783.jpg inflating: IntelImageClassification/train/street/16806.jpg inflating: IntelImageClassification/train/street/16821.jpg inflating: IntelImageClassification/train/street/16832.jpg inflating: IntelImageClassification/train/street/16855.jpg inflating: IntelImageClassification/train/street/1686.jpg inflating: IntelImageClassification/train/street/16862.jpg inflating: IntelImageClassification/train/street/16903.jpg inflating: IntelImageClassification/train/street/16906.jpg inflating: IntelImageClassification/train/street/16914.jpg inflating: IntelImageClassification/train/street/16935.jpg inflating: IntelImageClassification/train/street/16936.jpg inflating: IntelImageClassification/train/street/1697.jpg inflating: IntelImageClassification/train/street/17036.jpg inflating: IntelImageClassification/train/street/17047.jpg inflating: IntelImageClassification/train/street/17089.jpg inflating: IntelImageClassification/train/street/17095.jpg inflating: IntelImageClassification/train/street/1711.jpg inflating: IntelImageClassification/train/street/17117.jpg inflating: IntelImageClassification/train/street/17119.jpg inflating: IntelImageClassification/train/street/17123.jpg inflating: IntelImageClassification/train/street/17138.jpg inflating: IntelImageClassification/train/street/17142.jpg inflating: IntelImageClassification/train/street/17169.jpg inflating: IntelImageClassification/train/street/1725.jpg inflating: IntelImageClassification/train/street/17268.jpg inflating: IntelImageClassification/train/street/17274.jpg inflating: IntelImageClassification/train/street/17278.jpg inflating: IntelImageClassification/train/street/17285.jpg inflating: IntelImageClassification/train/street/1730.jpg inflating: IntelImageClassification/train/street/17319.jpg inflating: IntelImageClassification/train/street/17347.jpg inflating: IntelImageClassification/train/street/17355.jpg inflating: IntelImageClassification/train/street/17359.jpg inflating: IntelImageClassification/train/street/17374.jpg inflating: IntelImageClassification/train/street/17394.jpg inflating: IntelImageClassification/train/street/17404.jpg inflating: IntelImageClassification/train/street/17413.jpg inflating: IntelImageClassification/train/street/17433.jpg inflating: IntelImageClassification/train/street/17446.jpg inflating: IntelImageClassification/train/street/17463.jpg inflating: IntelImageClassification/train/street/17469.jpg inflating: IntelImageClassification/train/street/17484.jpg inflating: IntelImageClassification/train/street/17490.jpg inflating: IntelImageClassification/train/street/17497.jpg inflating: IntelImageClassification/train/street/17521.jpg inflating: IntelImageClassification/train/street/1754.jpg inflating: IntelImageClassification/train/street/17547.jpg inflating: IntelImageClassification/train/street/17557.jpg inflating: IntelImageClassification/train/street/17569.jpg inflating: IntelImageClassification/train/street/17576.jpg inflating: IntelImageClassification/train/street/17591.jpg inflating: IntelImageClassification/train/street/17613.jpg inflating: IntelImageClassification/train/street/17633.jpg inflating: IntelImageClassification/train/street/17671.jpg inflating: IntelImageClassification/train/street/17679.jpg inflating: IntelImageClassification/train/street/17702.jpg inflating: IntelImageClassification/train/street/1772.jpg inflating: IntelImageClassification/train/street/17761.jpg inflating: IntelImageClassification/train/street/17781.jpg inflating: IntelImageClassification/train/street/17801.jpg inflating: IntelImageClassification/train/street/17865.jpg inflating: IntelImageClassification/train/street/17881.jpg inflating: IntelImageClassification/train/street/17894.jpg inflating: IntelImageClassification/train/street/17913.jpg inflating: IntelImageClassification/train/street/17927.jpg inflating: IntelImageClassification/train/street/18005.jpg inflating: IntelImageClassification/train/street/1804.jpg inflating: IntelImageClassification/train/street/18059.jpg inflating: IntelImageClassification/train/street/18086.jpg inflating: IntelImageClassification/train/street/18114.jpg inflating: IntelImageClassification/train/street/18120.jpg inflating: IntelImageClassification/train/street/18165.jpg inflating: IntelImageClassification/train/street/18175.jpg inflating: IntelImageClassification/train/street/18176.jpg inflating: IntelImageClassification/train/street/18185.jpg inflating: IntelImageClassification/train/street/18211.jpg inflating: IntelImageClassification/train/street/18214.jpg inflating: IntelImageClassification/train/street/18216.jpg inflating: IntelImageClassification/train/street/18249.jpg inflating: IntelImageClassification/train/street/1827.jpg inflating: IntelImageClassification/train/street/18294.jpg inflating: IntelImageClassification/train/street/18300.jpg inflating: IntelImageClassification/train/street/18353.jpg inflating: IntelImageClassification/train/street/18356.jpg inflating: IntelImageClassification/train/street/1836.jpg inflating: IntelImageClassification/train/street/18367.jpg inflating: IntelImageClassification/train/street/18372.jpg inflating: IntelImageClassification/train/street/18384.jpg inflating: IntelImageClassification/train/street/18386.jpg inflating: IntelImageClassification/train/street/18401.jpg inflating: IntelImageClassification/train/street/18428.jpg inflating: IntelImageClassification/train/street/18437.jpg inflating: IntelImageClassification/train/street/1848.jpg inflating: IntelImageClassification/train/street/18503.jpg inflating: IntelImageClassification/train/street/18511.jpg inflating: IntelImageClassification/train/street/18534.jpg inflating: IntelImageClassification/train/street/18577.jpg inflating: IntelImageClassification/train/street/186.jpg inflating: IntelImageClassification/train/street/18621.jpg inflating: IntelImageClassification/train/street/18682.jpg inflating: IntelImageClassification/train/street/18687.jpg inflating: IntelImageClassification/train/street/18731.jpg inflating: IntelImageClassification/train/street/18751.jpg inflating: IntelImageClassification/train/street/18754.jpg inflating: IntelImageClassification/train/street/18799.jpg inflating: IntelImageClassification/train/street/18803.jpg inflating: IntelImageClassification/train/street/18811.jpg inflating: IntelImageClassification/train/street/18838.jpg inflating: IntelImageClassification/train/street/18855.jpg inflating: IntelImageClassification/train/street/18865.jpg inflating: IntelImageClassification/train/street/18874.jpg inflating: IntelImageClassification/train/street/18905.jpg inflating: IntelImageClassification/train/street/18952.jpg inflating: IntelImageClassification/train/street/18965.jpg inflating: IntelImageClassification/train/street/18988.jpg inflating: IntelImageClassification/train/street/18990.jpg inflating: IntelImageClassification/train/street/19017.jpg inflating: IntelImageClassification/train/street/19027.jpg inflating: IntelImageClassification/train/street/19039.jpg inflating: IntelImageClassification/train/street/19085.jpg inflating: IntelImageClassification/train/street/19090.jpg inflating: IntelImageClassification/train/street/19113.jpg inflating: IntelImageClassification/train/street/19130.jpg inflating: IntelImageClassification/train/street/19147.jpg inflating: IntelImageClassification/train/street/19179.jpg inflating: IntelImageClassification/train/street/19182.jpg inflating: IntelImageClassification/train/street/19184.jpg inflating: IntelImageClassification/train/street/19198.jpg inflating: IntelImageClassification/train/street/192.jpg inflating: IntelImageClassification/train/street/19209.jpg inflating: IntelImageClassification/train/street/19211.jpg inflating: IntelImageClassification/train/street/19242.jpg inflating: IntelImageClassification/train/street/1928.jpg inflating: IntelImageClassification/train/street/19331.jpg inflating: IntelImageClassification/train/street/19339.jpg inflating: IntelImageClassification/train/street/19345.jpg inflating: IntelImageClassification/train/street/19349.jpg inflating: IntelImageClassification/train/street/19401.jpg inflating: IntelImageClassification/train/street/1942.jpg inflating: IntelImageClassification/train/street/19420.jpg inflating: IntelImageClassification/train/street/19438.jpg inflating: IntelImageClassification/train/street/19444.jpg inflating: IntelImageClassification/train/street/19492.jpg inflating: IntelImageClassification/train/street/19494.jpg inflating: IntelImageClassification/train/street/19516.jpg inflating: IntelImageClassification/train/street/1952.jpg inflating: IntelImageClassification/train/street/19553.jpg inflating: IntelImageClassification/train/street/19582.jpg inflating: IntelImageClassification/train/street/19613.jpg inflating: IntelImageClassification/train/street/1963.jpg inflating: IntelImageClassification/train/street/19659.jpg inflating: IntelImageClassification/train/street/19664.jpg inflating: IntelImageClassification/train/street/19669.jpg inflating: IntelImageClassification/train/street/197.jpg inflating: IntelImageClassification/train/street/19704.jpg inflating: IntelImageClassification/train/street/19724.jpg inflating: IntelImageClassification/train/street/19755.jpg inflating: IntelImageClassification/train/street/19761.jpg inflating: IntelImageClassification/train/street/19766.jpg inflating: IntelImageClassification/train/street/19795.jpg inflating: IntelImageClassification/train/street/19809.jpg inflating: IntelImageClassification/train/street/1981.jpg inflating: IntelImageClassification/train/street/19862.jpg inflating: IntelImageClassification/train/street/19867.jpg inflating: IntelImageClassification/train/street/19882.jpg inflating: IntelImageClassification/train/street/19885.jpg inflating: IntelImageClassification/train/street/19886.jpg inflating: IntelImageClassification/train/street/19940.jpg inflating: IntelImageClassification/train/street/19950.jpg inflating: IntelImageClassification/train/street/19961.jpg inflating: IntelImageClassification/train/street/19965.jpg inflating: IntelImageClassification/train/street/19970.jpg inflating: IntelImageClassification/train/street/19974.jpg inflating: IntelImageClassification/train/street/20013.jpg inflating: IntelImageClassification/train/street/20044.jpg inflating: IntelImageClassification/train/street/2008.jpg inflating: IntelImageClassification/train/street/201.jpg inflating: IntelImageClassification/train/street/2021.jpg inflating: IntelImageClassification/train/street/2045.jpg inflating: IntelImageClassification/train/street/2082.jpg inflating: IntelImageClassification/train/street/2089.jpg inflating: IntelImageClassification/train/street/2100.jpg inflating: IntelImageClassification/train/street/2111.jpg inflating: IntelImageClassification/train/street/2121.jpg inflating: IntelImageClassification/train/street/2157.jpg inflating: IntelImageClassification/train/street/2162.jpg inflating: IntelImageClassification/train/street/2164.jpg inflating: IntelImageClassification/train/street/2186.jpg inflating: IntelImageClassification/train/street/2188.jpg inflating: IntelImageClassification/train/street/2212.jpg inflating: IntelImageClassification/train/street/2234.jpg inflating: IntelImageClassification/train/street/2250.jpg inflating: IntelImageClassification/train/street/2287.jpg inflating: IntelImageClassification/train/street/2301.jpg inflating: IntelImageClassification/train/street/2321.jpg inflating: IntelImageClassification/train/street/2325.jpg inflating: IntelImageClassification/train/street/2327.jpg inflating: IntelImageClassification/train/street/2336.jpg inflating: IntelImageClassification/train/street/2350.jpg inflating: IntelImageClassification/train/street/2353.jpg inflating: IntelImageClassification/train/street/2374.jpg inflating: IntelImageClassification/train/street/2375.jpg inflating: IntelImageClassification/train/street/2393.jpg inflating: IntelImageClassification/train/street/2397.jpg inflating: IntelImageClassification/train/street/241.jpg inflating: IntelImageClassification/train/street/2421.jpg inflating: IntelImageClassification/train/street/243.jpg inflating: IntelImageClassification/train/street/2431.jpg inflating: IntelImageClassification/train/street/2437.jpg inflating: IntelImageClassification/train/street/2453.jpg inflating: IntelImageClassification/train/street/2470.jpg inflating: IntelImageClassification/train/street/2472.jpg inflating: IntelImageClassification/train/street/2480.jpg inflating: IntelImageClassification/train/street/2519.jpg inflating: IntelImageClassification/train/street/2523.jpg inflating: IntelImageClassification/train/street/2527.jpg inflating: IntelImageClassification/train/street/2540.jpg inflating: IntelImageClassification/train/street/2541.jpg inflating: IntelImageClassification/train/street/2562.jpg inflating: IntelImageClassification/train/street/2603.jpg inflating: IntelImageClassification/train/street/262.jpg inflating: IntelImageClassification/train/street/2627.jpg inflating: IntelImageClassification/train/street/2657.jpg inflating: IntelImageClassification/train/street/2666.jpg inflating: IntelImageClassification/train/street/2675.jpg inflating: IntelImageClassification/train/street/2692.jpg inflating: IntelImageClassification/train/street/2695.jpg inflating: IntelImageClassification/train/street/2709.jpg inflating: IntelImageClassification/train/street/2714.jpg inflating: IntelImageClassification/train/street/2729.jpg inflating: IntelImageClassification/train/street/2736.jpg inflating: IntelImageClassification/train/street/2742.jpg inflating: IntelImageClassification/train/street/2751.jpg inflating: IntelImageClassification/train/street/2788.jpg inflating: IntelImageClassification/train/street/2804.jpg inflating: IntelImageClassification/train/street/2848.jpg inflating: IntelImageClassification/train/street/2855.jpg inflating: IntelImageClassification/train/street/2858.jpg inflating: IntelImageClassification/train/street/2876.jpg inflating: IntelImageClassification/train/street/29.jpg inflating: IntelImageClassification/train/street/2926.jpg inflating: IntelImageClassification/train/street/2962.jpg inflating: IntelImageClassification/train/street/2964.jpg inflating: IntelImageClassification/train/street/2965.jpg inflating: IntelImageClassification/train/street/2987.jpg inflating: IntelImageClassification/train/street/2994.jpg inflating: IntelImageClassification/train/street/3014.jpg inflating: IntelImageClassification/train/street/3016.jpg inflating: IntelImageClassification/train/street/3021.jpg inflating: IntelImageClassification/train/street/3023.jpg inflating: IntelImageClassification/train/street/3069.jpg inflating: IntelImageClassification/train/street/3073.jpg inflating: IntelImageClassification/train/street/3079.jpg inflating: IntelImageClassification/train/street/3098.jpg inflating: IntelImageClassification/train/street/3109.jpg inflating: IntelImageClassification/train/street/3116.jpg inflating: IntelImageClassification/train/street/312.jpg inflating: IntelImageClassification/train/street/3137.jpg inflating: IntelImageClassification/train/street/3181.jpg inflating: IntelImageClassification/train/street/3182.jpg inflating: IntelImageClassification/train/street/3184.jpg inflating: IntelImageClassification/train/street/3217.jpg inflating: IntelImageClassification/train/street/3244.jpg inflating: IntelImageClassification/train/street/3261.jpg inflating: IntelImageClassification/train/street/3273.jpg inflating: IntelImageClassification/train/street/3274.jpg inflating: IntelImageClassification/train/street/3281.jpg inflating: IntelImageClassification/train/street/3282.jpg inflating: IntelImageClassification/train/street/3298.jpg inflating: IntelImageClassification/train/street/330.jpg inflating: IntelImageClassification/train/street/3303.jpg inflating: IntelImageClassification/train/street/3320.jpg inflating: IntelImageClassification/train/street/3332.jpg inflating: IntelImageClassification/train/street/3347.jpg inflating: IntelImageClassification/train/street/338.jpg inflating: IntelImageClassification/train/street/3383.jpg inflating: IntelImageClassification/train/street/3410.jpg inflating: IntelImageClassification/train/street/342.jpg inflating: IntelImageClassification/train/street/3475.jpg inflating: IntelImageClassification/train/street/3489.jpg inflating: IntelImageClassification/train/street/3500.jpg inflating: IntelImageClassification/train/street/3501.jpg inflating: IntelImageClassification/train/street/3516.jpg inflating: IntelImageClassification/train/street/3539.jpg inflating: IntelImageClassification/train/street/356.jpg inflating: IntelImageClassification/train/street/3588.jpg inflating: IntelImageClassification/train/street/36.jpg inflating: IntelImageClassification/train/street/3616.jpg inflating: IntelImageClassification/train/street/3626.jpg inflating: IntelImageClassification/train/street/3634.jpg inflating: IntelImageClassification/train/street/3679.jpg inflating: IntelImageClassification/train/street/3697.jpg inflating: IntelImageClassification/train/street/37.jpg inflating: IntelImageClassification/train/street/3723.jpg inflating: IntelImageClassification/train/street/3724.jpg inflating: IntelImageClassification/train/street/3740.jpg inflating: IntelImageClassification/train/street/3763.jpg inflating: IntelImageClassification/train/street/3800.jpg inflating: IntelImageClassification/train/street/3802.jpg inflating: IntelImageClassification/train/street/3816.jpg inflating: IntelImageClassification/train/street/3845.jpg inflating: IntelImageClassification/train/street/3861.jpg inflating: IntelImageClassification/train/street/3879.jpg inflating: IntelImageClassification/train/street/3894.jpg inflating: IntelImageClassification/train/street/39.jpg inflating: IntelImageClassification/train/street/3911.jpg inflating: IntelImageClassification/train/street/3937.jpg inflating: IntelImageClassification/train/street/3939.jpg inflating: IntelImageClassification/train/street/394.jpg inflating: IntelImageClassification/train/street/3961.jpg inflating: IntelImageClassification/train/street/3965.jpg inflating: IntelImageClassification/train/street/4034.jpg inflating: IntelImageClassification/train/street/4048.jpg inflating: IntelImageClassification/train/street/406.jpg inflating: IntelImageClassification/train/street/4086.jpg inflating: IntelImageClassification/train/street/4172.jpg inflating: IntelImageClassification/train/street/418.jpg inflating: IntelImageClassification/train/street/4279.jpg inflating: IntelImageClassification/train/street/4556.jpg inflating: IntelImageClassification/train/street/461.jpg inflating: IntelImageClassification/train/street/4629.jpg inflating: IntelImageClassification/train/street/4815.jpg inflating: IntelImageClassification/train/street/484.jpg inflating: IntelImageClassification/train/street/4868.jpg inflating: IntelImageClassification/train/street/4871.jpg inflating: IntelImageClassification/train/street/4890.jpg inflating: IntelImageClassification/train/street/4891.jpg inflating: IntelImageClassification/train/street/4897.jpg inflating: IntelImageClassification/train/street/4938.jpg inflating: IntelImageClassification/train/street/4948.jpg inflating: IntelImageClassification/train/street/4950.jpg inflating: IntelImageClassification/train/street/4952.jpg inflating: IntelImageClassification/train/street/4965.jpg inflating: IntelImageClassification/train/street/50.jpg inflating: IntelImageClassification/train/street/5008.jpg inflating: IntelImageClassification/train/street/5039.jpg inflating: IntelImageClassification/train/street/5041.jpg inflating: IntelImageClassification/train/street/5081.jpg inflating: IntelImageClassification/train/street/5085.jpg inflating: IntelImageClassification/train/street/5090.jpg inflating: IntelImageClassification/train/street/5097.jpg inflating: IntelImageClassification/train/street/510.jpg inflating: IntelImageClassification/train/street/5118.jpg inflating: IntelImageClassification/train/street/5131.jpg inflating: IntelImageClassification/train/street/5182.jpg inflating: IntelImageClassification/train/street/5191.jpg inflating: IntelImageClassification/train/street/5225.jpg inflating: IntelImageClassification/train/street/5239.jpg inflating: IntelImageClassification/train/street/5260.jpg inflating: IntelImageClassification/train/street/5305.jpg inflating: IntelImageClassification/train/street/5316.jpg inflating: IntelImageClassification/train/street/5333.jpg inflating: IntelImageClassification/train/street/5369.jpg inflating: IntelImageClassification/train/street/5405.jpg inflating: IntelImageClassification/train/street/5426.jpg inflating: IntelImageClassification/train/street/5434.jpg inflating: IntelImageClassification/train/street/5448.jpg inflating: IntelImageClassification/train/street/5461.jpg inflating: IntelImageClassification/train/street/5470.jpg inflating: IntelImageClassification/train/street/5500.jpg inflating: IntelImageClassification/train/street/5508.jpg inflating: IntelImageClassification/train/street/5519.jpg inflating: IntelImageClassification/train/street/556.jpg inflating: IntelImageClassification/train/street/5572.jpg inflating: IntelImageClassification/train/street/56.jpg inflating: IntelImageClassification/train/street/5613.jpg inflating: IntelImageClassification/train/street/5631.jpg inflating: IntelImageClassification/train/street/5635.jpg inflating: IntelImageClassification/train/street/5637.jpg inflating: IntelImageClassification/train/street/5642.jpg inflating: IntelImageClassification/train/street/5660.jpg inflating: IntelImageClassification/train/street/5664.jpg inflating: IntelImageClassification/train/street/5684.jpg inflating: IntelImageClassification/train/street/5705.jpg inflating: IntelImageClassification/train/street/5713.jpg inflating: IntelImageClassification/train/street/5721.jpg inflating: IntelImageClassification/train/street/5757.jpg inflating: IntelImageClassification/train/street/5758.jpg inflating: IntelImageClassification/train/street/576.jpg inflating: IntelImageClassification/train/street/5778.jpg inflating: IntelImageClassification/train/street/5789.jpg inflating: IntelImageClassification/train/street/5794.jpg inflating: IntelImageClassification/train/street/5815.jpg inflating: IntelImageClassification/train/street/5837.jpg inflating: IntelImageClassification/train/street/5842.jpg inflating: IntelImageClassification/train/street/5846.jpg inflating: IntelImageClassification/train/street/5853.jpg inflating: IntelImageClassification/train/street/5892.jpg inflating: IntelImageClassification/train/street/5893.jpg inflating: IntelImageClassification/train/street/5908.jpg inflating: IntelImageClassification/train/street/5910.jpg inflating: IntelImageClassification/train/street/5930.jpg inflating: IntelImageClassification/train/street/596.jpg inflating: IntelImageClassification/train/street/5968.jpg inflating: IntelImageClassification/train/street/5970.jpg inflating: IntelImageClassification/train/street/6084.jpg inflating: IntelImageClassification/train/street/6144.jpg inflating: IntelImageClassification/train/street/6152.jpg inflating: IntelImageClassification/train/street/6158.jpg inflating: IntelImageClassification/train/street/6160.jpg inflating: IntelImageClassification/train/street/6174.jpg inflating: IntelImageClassification/train/street/620.jpg inflating: IntelImageClassification/train/street/6203.jpg inflating: IntelImageClassification/train/street/6240.jpg inflating: IntelImageClassification/train/street/6241.jpg inflating: IntelImageClassification/train/street/6289.jpg inflating: IntelImageClassification/train/street/6299.jpg inflating: IntelImageClassification/train/street/6352.jpg inflating: IntelImageClassification/train/street/6356.jpg inflating: IntelImageClassification/train/street/6396.jpg inflating: IntelImageClassification/train/street/6404.jpg inflating: IntelImageClassification/train/street/6405.jpg inflating: IntelImageClassification/train/street/642.jpg inflating: IntelImageClassification/train/street/6426.jpg inflating: IntelImageClassification/train/street/6434.jpg inflating: IntelImageClassification/train/street/6454.jpg inflating: IntelImageClassification/train/street/6469.jpg inflating: IntelImageClassification/train/street/6474.jpg inflating: IntelImageClassification/train/street/648.jpg inflating: IntelImageClassification/train/street/6486.jpg inflating: IntelImageClassification/train/street/6501.jpg inflating: IntelImageClassification/train/street/6564.jpg inflating: IntelImageClassification/train/street/6569.jpg inflating: IntelImageClassification/train/street/657.jpg inflating: IntelImageClassification/train/street/658.jpg inflating: IntelImageClassification/train/street/662.jpg inflating: IntelImageClassification/train/street/6631.jpg inflating: IntelImageClassification/train/street/6679.jpg inflating: IntelImageClassification/train/street/6686.jpg inflating: IntelImageClassification/train/street/6714.jpg inflating: IntelImageClassification/train/street/6786.jpg inflating: IntelImageClassification/train/street/6798.jpg inflating: IntelImageClassification/train/street/6833.jpg inflating: IntelImageClassification/train/street/6838.jpg inflating: IntelImageClassification/train/street/6878.jpg inflating: IntelImageClassification/train/street/6881.jpg inflating: IntelImageClassification/train/street/6886.jpg inflating: IntelImageClassification/train/street/6977.jpg inflating: IntelImageClassification/train/street/6991.jpg inflating: IntelImageClassification/train/street/6996.jpg inflating: IntelImageClassification/train/street/7008.jpg inflating: IntelImageClassification/train/street/7041.jpg inflating: IntelImageClassification/train/street/7046.jpg inflating: IntelImageClassification/train/street/7079.jpg inflating: IntelImageClassification/train/street/7120.jpg inflating: IntelImageClassification/train/street/715.jpg inflating: IntelImageClassification/train/street/7181.jpg inflating: IntelImageClassification/train/street/7192.jpg inflating: IntelImageClassification/train/street/7200.jpg inflating: IntelImageClassification/train/street/7203.jpg inflating: IntelImageClassification/train/street/7207.jpg inflating: IntelImageClassification/train/street/7216.jpg inflating: IntelImageClassification/train/street/7220.jpg inflating: IntelImageClassification/train/street/723.jpg inflating: IntelImageClassification/train/street/7265.jpg inflating: IntelImageClassification/train/street/7293.jpg inflating: IntelImageClassification/train/street/7303.jpg inflating: IntelImageClassification/train/street/7327.jpg inflating: IntelImageClassification/train/street/7340.jpg inflating: IntelImageClassification/train/street/7341.jpg inflating: IntelImageClassification/train/street/7373.jpg inflating: IntelImageClassification/train/street/7404.jpg inflating: IntelImageClassification/train/street/7427.jpg inflating: IntelImageClassification/train/street/7436.jpg inflating: IntelImageClassification/train/street/7449.jpg inflating: IntelImageClassification/train/street/7503.jpg inflating: IntelImageClassification/train/street/7523.jpg inflating: IntelImageClassification/train/street/7543.jpg inflating: IntelImageClassification/train/street/7559.jpg inflating: IntelImageClassification/train/street/756.jpg inflating: IntelImageClassification/train/street/7573.jpg inflating: IntelImageClassification/train/street/7591.jpg inflating: IntelImageClassification/train/street/7596.jpg inflating: IntelImageClassification/train/street/7599.jpg inflating: IntelImageClassification/train/street/7604.jpg inflating: IntelImageClassification/train/street/7656.jpg inflating: IntelImageClassification/train/street/7668.jpg inflating: IntelImageClassification/train/street/7671.jpg inflating: IntelImageClassification/train/street/7689.jpg inflating: IntelImageClassification/train/street/7718.jpg inflating: IntelImageClassification/train/street/7726.jpg inflating: IntelImageClassification/train/street/7741.jpg inflating: IntelImageClassification/train/street/7818.jpg inflating: IntelImageClassification/train/street/7829.jpg inflating: IntelImageClassification/train/street/7834.jpg inflating: IntelImageClassification/train/street/7863.jpg inflating: IntelImageClassification/train/street/7888.jpg inflating: IntelImageClassification/train/street/7910.jpg inflating: IntelImageClassification/train/street/793.jpg inflating: IntelImageClassification/train/street/7951.jpg inflating: IntelImageClassification/train/street/7980.jpg inflating: IntelImageClassification/train/street/80.jpg inflating: IntelImageClassification/train/street/8003.jpg inflating: IntelImageClassification/train/street/8021.jpg inflating: IntelImageClassification/train/street/8031.jpg inflating: IntelImageClassification/train/street/8032.jpg inflating: IntelImageClassification/train/street/8051.jpg inflating: IntelImageClassification/train/street/8055.jpg inflating: IntelImageClassification/train/street/8089.jpg inflating: IntelImageClassification/train/street/8095.jpg inflating: IntelImageClassification/train/street/8103.jpg inflating: IntelImageClassification/train/street/8122.jpg inflating: IntelImageClassification/train/street/8130.jpg inflating: IntelImageClassification/train/street/8143.jpg inflating: IntelImageClassification/train/street/8152.jpg inflating: IntelImageClassification/train/street/8165.jpg inflating: IntelImageClassification/train/street/8207.jpg inflating: IntelImageClassification/train/street/8229.jpg inflating: IntelImageClassification/train/street/824.jpg inflating: IntelImageClassification/train/street/8254.jpg inflating: IntelImageClassification/train/street/8256.jpg inflating: IntelImageClassification/train/street/8300.jpg inflating: IntelImageClassification/train/street/8307.jpg inflating: IntelImageClassification/train/street/8334.jpg inflating: IntelImageClassification/train/street/8345.jpg inflating: IntelImageClassification/train/street/8351.jpg inflating: IntelImageClassification/train/street/8362.jpg inflating: IntelImageClassification/train/street/8371.jpg inflating: IntelImageClassification/train/street/8381.jpg inflating: IntelImageClassification/train/street/8387.jpg inflating: IntelImageClassification/train/street/8396.jpg inflating: IntelImageClassification/train/street/8410.jpg inflating: IntelImageClassification/train/street/8415.jpg inflating: IntelImageClassification/train/street/8446.jpg inflating: IntelImageClassification/train/street/8501.jpg inflating: IntelImageClassification/train/street/8526.jpg inflating: IntelImageClassification/train/street/8528.jpg inflating: IntelImageClassification/train/street/8530.jpg inflating: IntelImageClassification/train/street/8543.jpg inflating: IntelImageClassification/train/street/8547.jpg inflating: IntelImageClassification/train/street/8557.jpg inflating: IntelImageClassification/train/street/8589.jpg inflating: IntelImageClassification/train/street/8591.jpg inflating: IntelImageClassification/train/street/8598.jpg inflating: IntelImageClassification/train/street/8611.jpg inflating: IntelImageClassification/train/street/8618.jpg inflating: IntelImageClassification/train/street/8621.jpg inflating: IntelImageClassification/train/street/8624.jpg inflating: IntelImageClassification/train/street/8661.jpg inflating: IntelImageClassification/train/street/871.jpg inflating: IntelImageClassification/train/street/8747.jpg inflating: IntelImageClassification/train/street/8751.jpg inflating: IntelImageClassification/train/street/8754.jpg inflating: IntelImageClassification/train/street/8760.jpg inflating: IntelImageClassification/train/street/8794.jpg inflating: IntelImageClassification/train/street/8842.jpg inflating: IntelImageClassification/train/street/8844.jpg inflating: IntelImageClassification/train/street/8848.jpg inflating: IntelImageClassification/train/street/886.jpg inflating: IntelImageClassification/train/street/8876.jpg inflating: IntelImageClassification/train/street/8885.jpg inflating: IntelImageClassification/train/street/8949.jpg inflating: IntelImageClassification/train/street/8958.jpg inflating: IntelImageClassification/train/street/8970.jpg inflating: IntelImageClassification/train/street/898.jpg inflating: IntelImageClassification/train/street/8995.jpg inflating: IntelImageClassification/train/street/9000.jpg inflating: IntelImageClassification/train/street/9076.jpg inflating: IntelImageClassification/train/street/9087.jpg inflating: IntelImageClassification/train/street/9099.jpg inflating: IntelImageClassification/train/street/9103.jpg inflating: IntelImageClassification/train/street/9108.jpg inflating: IntelImageClassification/train/street/9124.jpg inflating: IntelImageClassification/train/street/9167.jpg inflating: IntelImageClassification/train/street/9169.jpg inflating: IntelImageClassification/train/street/9234.jpg inflating: IntelImageClassification/train/street/9274.jpg inflating: IntelImageClassification/train/street/9278.jpg inflating: IntelImageClassification/train/street/9287.jpg inflating: IntelImageClassification/train/street/9299.jpg inflating: IntelImageClassification/train/street/931.jpg inflating: IntelImageClassification/train/street/9346.jpg inflating: IntelImageClassification/train/street/9351.jpg inflating: IntelImageClassification/train/street/937.jpg inflating: IntelImageClassification/train/street/9378.jpg inflating: IntelImageClassification/train/street/9412.jpg inflating: IntelImageClassification/train/street/9417.jpg inflating: IntelImageClassification/train/street/9448.jpg inflating: IntelImageClassification/train/street/945.jpg inflating: IntelImageClassification/train/street/946.jpg inflating: IntelImageClassification/train/street/9516.jpg inflating: IntelImageClassification/train/street/9521.jpg inflating: IntelImageClassification/train/street/9581.jpg inflating: IntelImageClassification/train/street/9649.jpg inflating: IntelImageClassification/train/street/9655.jpg inflating: IntelImageClassification/train/street/9690.jpg inflating: IntelImageClassification/train/street/9693.jpg inflating: IntelImageClassification/train/street/970.jpg inflating: IntelImageClassification/train/street/971.jpg inflating: IntelImageClassification/train/street/9717.jpg inflating: IntelImageClassification/train/street/9734.jpg inflating: IntelImageClassification/train/street/974.jpg inflating: IntelImageClassification/train/street/9744.jpg inflating: IntelImageClassification/train/street/9749.jpg inflating: IntelImageClassification/train/street/9760.jpg inflating: IntelImageClassification/train/street/9847.jpg inflating: IntelImageClassification/train/street/9863.jpg inflating: IntelImageClassification/train/street/9867.jpg inflating: IntelImageClassification/train/street/9872.jpg inflating: IntelImageClassification/train/street/9878.jpg inflating: IntelImageClassification/train/street/9885.jpg inflating: IntelImageClassification/train/street/9911.jpg inflating: IntelImageClassification/train/street/9931.jpg inflating: IntelImageClassification/train/street/9934.jpg inflating: IntelImageClassification/train/street/9959.jpg inflating: IntelImageClassification/train/street/9978.jpg inflating: IntelImageClassification/train/street/10022.jpg inflating: IntelImageClassification/train/street/10036.jpg inflating: IntelImageClassification/train/street/10042.jpg inflating: IntelImageClassification/train/street/1007.jpg inflating: IntelImageClassification/train/street/10070.jpg inflating: IntelImageClassification/train/street/10072.jpg inflating: IntelImageClassification/train/street/10085.jpg inflating: IntelImageClassification/train/street/10091.jpg inflating: IntelImageClassification/train/street/10111.jpg inflating: IntelImageClassification/train/street/10112.jpg inflating: IntelImageClassification/train/street/10118.jpg inflating: IntelImageClassification/train/street/10188.jpg inflating: IntelImageClassification/train/street/10195.jpg inflating: IntelImageClassification/train/street/10202.jpg inflating: IntelImageClassification/train/street/10222.jpg inflating: IntelImageClassification/train/street/10224.jpg inflating: IntelImageClassification/train/street/10254.jpg inflating: IntelImageClassification/train/street/1031.jpg inflating: IntelImageClassification/train/street/10315.jpg inflating: IntelImageClassification/train/street/10322.jpg inflating: IntelImageClassification/train/street/10331.jpg inflating: IntelImageClassification/train/street/10338.jpg inflating: IntelImageClassification/train/street/10348.jpg inflating: IntelImageClassification/train/street/10408.jpg inflating: IntelImageClassification/train/street/1042.jpg inflating: IntelImageClassification/train/street/10459.jpg inflating: IntelImageClassification/train/street/10472.jpg inflating: IntelImageClassification/train/street/10514.jpg inflating: IntelImageClassification/train/street/10516.jpg inflating: IntelImageClassification/train/street/10526.jpg inflating: IntelImageClassification/train/street/10540.jpg inflating: IntelImageClassification/train/street/10548.jpg inflating: IntelImageClassification/train/street/10573.jpg inflating: IntelImageClassification/train/street/10610.jpg inflating: IntelImageClassification/train/street/10618.jpg inflating: IntelImageClassification/train/street/10627.jpg inflating: IntelImageClassification/train/street/10633.jpg inflating: IntelImageClassification/train/street/10662.jpg inflating: IntelImageClassification/train/street/10665.jpg inflating: IntelImageClassification/train/street/10681.jpg inflating: IntelImageClassification/train/street/10687.jpg inflating: IntelImageClassification/train/street/10691.jpg inflating: IntelImageClassification/train/street/10724.jpg inflating: IntelImageClassification/train/street/10728.jpg inflating: IntelImageClassification/train/street/10729.jpg inflating: IntelImageClassification/train/street/10732.jpg inflating: IntelImageClassification/train/street/10767.jpg inflating: IntelImageClassification/train/street/10777.jpg inflating: IntelImageClassification/train/street/10778.jpg inflating: IntelImageClassification/train/street/1078.jpg inflating: IntelImageClassification/train/street/10780.jpg inflating: IntelImageClassification/train/street/10804.jpg inflating: IntelImageClassification/train/street/10867.jpg inflating: IntelImageClassification/train/street/1088.jpg inflating: IntelImageClassification/train/street/1091.jpg inflating: IntelImageClassification/train/street/10915.jpg inflating: IntelImageClassification/train/street/10916.jpg inflating: IntelImageClassification/train/street/10943.jpg inflating: IntelImageClassification/train/street/10951.jpg inflating: IntelImageClassification/train/street/10961.jpg inflating: IntelImageClassification/train/street/10984.jpg inflating: IntelImageClassification/train/street/1099.jpg inflating: IntelImageClassification/train/street/1100.jpg inflating: IntelImageClassification/train/street/11019.jpg inflating: IntelImageClassification/train/street/11027.jpg inflating: IntelImageClassification/train/street/11040.jpg inflating: IntelImageClassification/train/street/11048.jpg inflating: IntelImageClassification/train/street/11052.jpg inflating: IntelImageClassification/train/street/11060.jpg inflating: IntelImageClassification/train/street/11096.jpg inflating: IntelImageClassification/train/street/11116.jpg inflating: IntelImageClassification/train/street/11128.jpg inflating: IntelImageClassification/train/street/11178.jpg inflating: IntelImageClassification/train/street/11199.jpg inflating: IntelImageClassification/train/street/1121.jpg inflating: IntelImageClassification/train/street/11267.jpg inflating: IntelImageClassification/train/street/11279.jpg inflating: IntelImageClassification/train/street/11288.jpg inflating: IntelImageClassification/train/street/11289.jpg inflating: IntelImageClassification/train/street/113.jpg inflating: IntelImageClassification/train/street/11325.jpg inflating: IntelImageClassification/train/street/11339.jpg inflating: IntelImageClassification/train/street/11398.jpg inflating: IntelImageClassification/train/street/11406.jpg inflating: IntelImageClassification/train/street/11413.jpg inflating: IntelImageClassification/train/street/11429.jpg inflating: IntelImageClassification/train/street/11453.jpg inflating: IntelImageClassification/train/street/11558.jpg inflating: IntelImageClassification/train/street/11583.jpg inflating: IntelImageClassification/train/street/11602.jpg inflating: IntelImageClassification/train/street/11604.jpg inflating: IntelImageClassification/train/street/11606.jpg inflating: IntelImageClassification/train/street/11618.jpg inflating: IntelImageClassification/train/street/11650.jpg inflating: IntelImageClassification/train/street/11707.jpg inflating: IntelImageClassification/train/street/11713.jpg inflating: IntelImageClassification/train/street/11714.jpg inflating: IntelImageClassification/train/street/11744.jpg inflating: IntelImageClassification/train/street/11777.jpg inflating: IntelImageClassification/train/street/1179.jpg inflating: IntelImageClassification/train/street/11801.jpg inflating: IntelImageClassification/train/street/11812.jpg inflating: IntelImageClassification/train/street/11823.jpg inflating: IntelImageClassification/train/street/11840.jpg inflating: IntelImageClassification/train/street/11847.jpg inflating: IntelImageClassification/train/street/11851.jpg inflating: IntelImageClassification/train/street/11852.jpg inflating: IntelImageClassification/train/street/11860.jpg inflating: IntelImageClassification/train/street/11872.jpg inflating: IntelImageClassification/train/street/11893.jpg inflating: IntelImageClassification/train/street/11934.jpg inflating: IntelImageClassification/train/street/11951.jpg inflating: IntelImageClassification/train/street/12.jpg inflating: IntelImageClassification/train/street/12106.jpg inflating: IntelImageClassification/train/street/12107.jpg inflating: IntelImageClassification/train/street/12119.jpg inflating: IntelImageClassification/train/street/1212.jpg inflating: IntelImageClassification/train/street/12123.jpg inflating: IntelImageClassification/train/street/12130.jpg inflating: IntelImageClassification/train/street/12131.jpg inflating: IntelImageClassification/train/street/1215.jpg inflating: IntelImageClassification/train/street/12162.jpg inflating: IntelImageClassification/train/street/12203.jpg inflating: IntelImageClassification/train/street/12238.jpg inflating: IntelImageClassification/train/street/12281.jpg inflating: IntelImageClassification/train/street/12323.jpg inflating: IntelImageClassification/train/street/12349.jpg inflating: IntelImageClassification/train/street/12375.jpg inflating: IntelImageClassification/train/street/12392.jpg inflating: IntelImageClassification/train/street/1240.jpg inflating: IntelImageClassification/train/street/12430.jpg inflating: IntelImageClassification/train/street/12434.jpg inflating: IntelImageClassification/train/street/12438.jpg inflating: IntelImageClassification/train/street/12441.jpg inflating: IntelImageClassification/train/street/12455.jpg inflating: IntelImageClassification/train/street/12458.jpg inflating: IntelImageClassification/train/street/1246.jpg inflating: IntelImageClassification/train/street/12481.jpg inflating: IntelImageClassification/train/street/12493.jpg inflating: IntelImageClassification/train/street/12530.jpg inflating: IntelImageClassification/train/street/12556.jpg inflating: IntelImageClassification/train/street/12585.jpg inflating: IntelImageClassification/train/street/1259.jpg inflating: IntelImageClassification/train/street/1260.jpg inflating: IntelImageClassification/train/street/12601.jpg inflating: IntelImageClassification/train/street/12653.jpg inflating: IntelImageClassification/train/street/12713.jpg inflating: IntelImageClassification/train/street/1272.jpg inflating: IntelImageClassification/train/street/12762.jpg inflating: IntelImageClassification/train/street/12806.jpg inflating: IntelImageClassification/train/street/12822.jpg inflating: IntelImageClassification/train/street/12857.jpg inflating: IntelImageClassification/train/street/12870.jpg inflating: IntelImageClassification/train/street/12876.jpg inflating: IntelImageClassification/train/street/12878.jpg inflating: IntelImageClassification/train/street/12883.jpg inflating: IntelImageClassification/train/street/12898.jpg inflating: IntelImageClassification/train/street/12917.jpg inflating: IntelImageClassification/train/street/12926.jpg inflating: IntelImageClassification/train/street/12931.jpg inflating: IntelImageClassification/train/street/12946.jpg inflating: IntelImageClassification/train/street/12947.jpg inflating: IntelImageClassification/train/street/1297.jpg inflating: IntelImageClassification/train/street/12991.jpg inflating: IntelImageClassification/train/street/13005.jpg inflating: IntelImageClassification/train/street/13025.jpg inflating: IntelImageClassification/train/street/13035.jpg inflating: IntelImageClassification/train/street/1305.jpg inflating: IntelImageClassification/train/street/13068.jpg inflating: IntelImageClassification/train/street/13106.jpg inflating: IntelImageClassification/train/street/13112.jpg inflating: IntelImageClassification/train/street/13132.jpg inflating: IntelImageClassification/train/street/13151.jpg inflating: IntelImageClassification/train/street/13154.jpg inflating: IntelImageClassification/train/street/13156.jpg inflating: IntelImageClassification/train/street/13165.jpg inflating: IntelImageClassification/train/street/13196.jpg inflating: IntelImageClassification/train/street/13210.jpg inflating: IntelImageClassification/train/street/13211.jpg inflating: IntelImageClassification/train/street/13233.jpg inflating: IntelImageClassification/train/street/13259.jpg inflating: IntelImageClassification/train/street/13289.jpg inflating: IntelImageClassification/train/street/13336.jpg inflating: IntelImageClassification/train/street/13368.jpg inflating: IntelImageClassification/train/street/13401.jpg inflating: IntelImageClassification/train/street/13406.jpg inflating: IntelImageClassification/train/street/13425.jpg inflating: IntelImageClassification/train/street/13426.jpg inflating: IntelImageClassification/train/street/13446.jpg inflating: IntelImageClassification/train/street/13496.jpg inflating: IntelImageClassification/train/street/13548.jpg inflating: IntelImageClassification/train/street/13567.jpg inflating: IntelImageClassification/train/street/13587.jpg inflating: IntelImageClassification/train/street/1361.jpg inflating: IntelImageClassification/train/street/13632.jpg inflating: IntelImageClassification/train/street/13633.jpg inflating: IntelImageClassification/train/street/13634.jpg inflating: IntelImageClassification/train/street/13671.jpg inflating: IntelImageClassification/train/street/13682.jpg inflating: IntelImageClassification/train/street/13688.jpg inflating: IntelImageClassification/train/street/13698.jpg inflating: IntelImageClassification/train/street/13739.jpg inflating: IntelImageClassification/train/street/13750.jpg inflating: IntelImageClassification/train/street/13763.jpg inflating: IntelImageClassification/train/street/13791.jpg inflating: IntelImageClassification/train/street/1384.jpg inflating: IntelImageClassification/train/street/1385.jpg inflating: IntelImageClassification/train/street/13862.jpg inflating: IntelImageClassification/train/street/13881.jpg inflating: IntelImageClassification/train/street/13892.jpg inflating: IntelImageClassification/train/street/13903.jpg inflating: IntelImageClassification/train/street/13906.jpg inflating: IntelImageClassification/train/street/13925.jpg inflating: IntelImageClassification/train/street/13960.jpg inflating: IntelImageClassification/train/street/14008.jpg inflating: IntelImageClassification/train/street/14049.jpg inflating: IntelImageClassification/train/street/14058.jpg inflating: IntelImageClassification/train/street/1407.jpg inflating: IntelImageClassification/train/street/14136.jpg inflating: IntelImageClassification/train/street/14164.jpg inflating: IntelImageClassification/train/street/14171.jpg inflating: IntelImageClassification/train/street/14227.jpg inflating: IntelImageClassification/train/street/1424.jpg inflating: IntelImageClassification/train/street/14250.jpg inflating: IntelImageClassification/train/street/14252.jpg inflating: IntelImageClassification/train/street/14260.jpg inflating: IntelImageClassification/train/street/14275.jpg inflating: IntelImageClassification/train/street/14278.jpg inflating: IntelImageClassification/train/street/14280.jpg inflating: IntelImageClassification/train/street/14296.jpg inflating: IntelImageClassification/train/street/14312.jpg inflating: IntelImageClassification/train/street/14322.jpg inflating: IntelImageClassification/train/street/14332.jpg inflating: IntelImageClassification/train/street/14355.jpg inflating: IntelImageClassification/train/street/14388.jpg inflating: IntelImageClassification/train/street/14392.jpg inflating: IntelImageClassification/train/street/14399.jpg inflating: IntelImageClassification/train/street/14442.jpg inflating: IntelImageClassification/train/street/14479.jpg inflating: IntelImageClassification/train/street/14482.jpg inflating: IntelImageClassification/train/street/14537.jpg inflating: IntelImageClassification/train/street/14550.jpg inflating: IntelImageClassification/train/street/14551.jpg inflating: IntelImageClassification/train/street/14555.jpg inflating: IntelImageClassification/train/street/14586.jpg inflating: IntelImageClassification/train/street/14598.jpg inflating: IntelImageClassification/train/street/14608.jpg inflating: IntelImageClassification/train/street/14627.jpg inflating: IntelImageClassification/train/street/14633.jpg inflating: IntelImageClassification/train/street/14640.jpg inflating: IntelImageClassification/train/street/14643.jpg inflating: IntelImageClassification/train/street/14658.jpg inflating: IntelImageClassification/train/street/14667.jpg inflating: IntelImageClassification/train/street/14671.jpg inflating: IntelImageClassification/train/street/14720.jpg inflating: IntelImageClassification/train/street/14761.jpg inflating: IntelImageClassification/train/street/14812.jpg inflating: IntelImageClassification/train/street/14846.jpg inflating: IntelImageClassification/train/street/14848.jpg inflating: IntelImageClassification/train/street/1485.jpg inflating: IntelImageClassification/train/street/14869.jpg inflating: IntelImageClassification/train/street/1487.jpg inflating: IntelImageClassification/train/street/14909.jpg inflating: IntelImageClassification/train/street/1493.jpg inflating: IntelImageClassification/train/street/14961.jpg inflating: IntelImageClassification/train/street/14967.jpg inflating: IntelImageClassification/train/street/14974.jpg inflating: IntelImageClassification/train/street/1499.jpg inflating: IntelImageClassification/train/street/15015.jpg inflating: IntelImageClassification/train/street/15047.jpg inflating: IntelImageClassification/train/street/15050.jpg inflating: IntelImageClassification/train/street/15062.jpg inflating: IntelImageClassification/train/street/15090.jpg inflating: IntelImageClassification/train/street/15138.jpg inflating: IntelImageClassification/train/street/15154.jpg inflating: IntelImageClassification/train/street/15169.jpg inflating: IntelImageClassification/train/street/1517.jpg inflating: IntelImageClassification/train/street/15174.jpg inflating: IntelImageClassification/train/street/15182.jpg inflating: IntelImageClassification/train/street/15194.jpg inflating: IntelImageClassification/train/street/15198.jpg inflating: IntelImageClassification/train/street/15203.jpg inflating: IntelImageClassification/train/street/1529.jpg inflating: IntelImageClassification/train/street/15298.jpg inflating: IntelImageClassification/train/street/15300.jpg inflating: IntelImageClassification/train/street/15311.jpg inflating: IntelImageClassification/train/street/15327.jpg inflating: IntelImageClassification/train/street/15369.jpg inflating: IntelImageClassification/train/street/1537.jpg inflating: IntelImageClassification/train/street/15379.jpg inflating: IntelImageClassification/train/street/15419.jpg inflating: IntelImageClassification/train/street/15465.jpg inflating: IntelImageClassification/train/street/15469.jpg inflating: IntelImageClassification/train/street/15494.jpg inflating: IntelImageClassification/train/street/15496.jpg inflating: IntelImageClassification/train/street/15499.jpg inflating: IntelImageClassification/train/street/15509.jpg inflating: IntelImageClassification/train/street/15526.jpg inflating: IntelImageClassification/train/street/15533.jpg inflating: IntelImageClassification/train/street/15534.jpg inflating: IntelImageClassification/train/street/15540.jpg inflating: IntelImageClassification/train/street/15553.jpg inflating: IntelImageClassification/train/street/15567.jpg inflating: IntelImageClassification/train/street/15574.jpg inflating: IntelImageClassification/train/street/15592.jpg inflating: IntelImageClassification/train/street/15599.jpg inflating: IntelImageClassification/train/street/15611.jpg inflating: IntelImageClassification/train/street/15614.jpg inflating: IntelImageClassification/train/street/15616.jpg inflating: IntelImageClassification/train/street/15633.jpg inflating: IntelImageClassification/train/street/1564.jpg inflating: IntelImageClassification/train/street/15650.jpg inflating: IntelImageClassification/train/street/1572.jpg inflating: IntelImageClassification/train/street/15725.jpg inflating: IntelImageClassification/train/street/15732.jpg inflating: IntelImageClassification/train/street/15754.jpg inflating: IntelImageClassification/train/street/15756.jpg inflating: IntelImageClassification/train/street/15800.jpg inflating: IntelImageClassification/train/street/15803.jpg inflating: IntelImageClassification/train/street/15807.jpg inflating: IntelImageClassification/train/street/15811.jpg inflating: IntelImageClassification/train/street/15837.jpg inflating: IntelImageClassification/train/street/15842.jpg inflating: IntelImageClassification/train/street/15852.jpg inflating: IntelImageClassification/train/street/15857.jpg inflating: IntelImageClassification/train/street/15873.jpg inflating: IntelImageClassification/train/street/1589.jpg inflating: IntelImageClassification/train/street/15898.jpg inflating: IntelImageClassification/train/street/159.jpg inflating: IntelImageClassification/train/street/1591.jpg inflating: IntelImageClassification/train/street/15911.jpg inflating: IntelImageClassification/train/street/15939.jpg inflating: IntelImageClassification/train/street/1594.jpg inflating: IntelImageClassification/train/street/15953.jpg inflating: IntelImageClassification/train/street/15961.jpg inflating: IntelImageClassification/train/street/1599.jpg inflating: IntelImageClassification/train/street/160.jpg inflating: IntelImageClassification/train/street/16004.jpg inflating: IntelImageClassification/train/street/16019.jpg inflating: IntelImageClassification/train/street/16022.jpg inflating: IntelImageClassification/train/street/1604.jpg inflating: IntelImageClassification/train/street/16055.jpg inflating: IntelImageClassification/train/street/1606.jpg inflating: IntelImageClassification/train/street/16072.jpg inflating: IntelImageClassification/train/street/16073.jpg inflating: IntelImageClassification/train/street/16118.jpg inflating: IntelImageClassification/train/street/16134.jpg inflating: IntelImageClassification/train/street/16139.jpg inflating: IntelImageClassification/train/street/16156.jpg inflating: IntelImageClassification/train/street/16157.jpg inflating: IntelImageClassification/train/street/16189.jpg inflating: IntelImageClassification/train/street/16191.jpg inflating: IntelImageClassification/train/street/16192.jpg inflating: IntelImageClassification/train/street/162.jpg inflating: IntelImageClassification/train/street/16253.jpg inflating: IntelImageClassification/train/street/16282.jpg inflating: IntelImageClassification/train/street/1632.jpg inflating: IntelImageClassification/train/street/16333.jpg inflating: IntelImageClassification/train/street/16340.jpg inflating: IntelImageClassification/train/street/16367.jpg inflating: IntelImageClassification/train/street/16391.jpg inflating: IntelImageClassification/train/street/16392.jpg inflating: IntelImageClassification/train/street/16399.jpg inflating: IntelImageClassification/train/street/164.jpg inflating: IntelImageClassification/train/street/16404.jpg inflating: IntelImageClassification/train/street/16419.jpg inflating: IntelImageClassification/train/street/16433.jpg inflating: IntelImageClassification/train/street/16440.jpg inflating: IntelImageClassification/train/street/16494.jpg inflating: IntelImageClassification/train/street/16504.jpg inflating: IntelImageClassification/train/street/16523.jpg inflating: IntelImageClassification/train/street/16557.jpg inflating: IntelImageClassification/train/street/16580.jpg inflating: IntelImageClassification/train/street/16596.jpg inflating: IntelImageClassification/train/street/1662.jpg inflating: IntelImageClassification/train/street/16631.jpg inflating: IntelImageClassification/train/street/1665.jpg inflating: IntelImageClassification/train/street/16657.jpg inflating: IntelImageClassification/train/street/16665.jpg inflating: IntelImageClassification/train/street/16682.jpg inflating: IntelImageClassification/train/street/16708.jpg inflating: IntelImageClassification/train/street/16720.jpg inflating: IntelImageClassification/train/street/16726.jpg inflating: IntelImageClassification/train/street/16762.jpg inflating: IntelImageClassification/train/street/16769.jpg inflating: IntelImageClassification/train/street/16799.jpg inflating: IntelImageClassification/train/street/16811.jpg inflating: IntelImageClassification/train/street/16848.jpg inflating: IntelImageClassification/train/street/16870.jpg inflating: IntelImageClassification/train/street/16874.jpg inflating: IntelImageClassification/train/street/16875.jpg inflating: IntelImageClassification/train/street/16880.jpg inflating: IntelImageClassification/train/street/16897.jpg inflating: IntelImageClassification/train/street/16905.jpg inflating: IntelImageClassification/train/street/16910.jpg inflating: IntelImageClassification/train/street/16930.jpg inflating: IntelImageClassification/train/street/16954.jpg inflating: IntelImageClassification/train/street/16959.jpg inflating: IntelImageClassification/train/street/16973.jpg inflating: IntelImageClassification/train/street/1701.jpg inflating: IntelImageClassification/train/street/17025.jpg inflating: IntelImageClassification/train/street/1703.jpg inflating: IntelImageClassification/train/street/17030.jpg inflating: IntelImageClassification/train/street/17070.jpg inflating: IntelImageClassification/train/street/17078.jpg inflating: IntelImageClassification/train/street/17093.jpg inflating: IntelImageClassification/train/street/17137.jpg inflating: IntelImageClassification/train/street/17139.jpg inflating: IntelImageClassification/train/street/1715.jpg inflating: IntelImageClassification/train/street/17189.jpg inflating: IntelImageClassification/train/street/17229.jpg inflating: IntelImageClassification/train/street/17237.jpg inflating: IntelImageClassification/train/street/17249.jpg inflating: IntelImageClassification/train/street/17258.jpg inflating: IntelImageClassification/train/street/17299.jpg inflating: IntelImageClassification/train/street/1731.jpg inflating: IntelImageClassification/train/street/17313.jpg inflating: IntelImageClassification/train/street/17315.jpg inflating: IntelImageClassification/train/street/17324.jpg inflating: IntelImageClassification/train/street/17341.jpg inflating: IntelImageClassification/train/street/17346.jpg inflating: IntelImageClassification/train/street/1735.jpg inflating: IntelImageClassification/train/street/17368.jpg inflating: IntelImageClassification/train/street/17373.jpg inflating: IntelImageClassification/train/street/17381.jpg inflating: IntelImageClassification/train/street/17412.jpg inflating: IntelImageClassification/train/street/17439.jpg inflating: IntelImageClassification/train/street/17443.jpg inflating: IntelImageClassification/train/street/17473.jpg inflating: IntelImageClassification/train/street/17492.jpg inflating: IntelImageClassification/train/street/17540.jpg inflating: IntelImageClassification/train/street/17555.jpg inflating: IntelImageClassification/train/street/17568.jpg inflating: IntelImageClassification/train/street/17587.jpg inflating: IntelImageClassification/train/street/1762.jpg inflating: IntelImageClassification/train/street/17655.jpg inflating: IntelImageClassification/train/street/17675.jpg inflating: IntelImageClassification/train/street/17693.jpg inflating: IntelImageClassification/train/street/17707.jpg inflating: IntelImageClassification/train/street/17725.jpg inflating: IntelImageClassification/train/street/17732.jpg inflating: IntelImageClassification/train/street/17740.jpg inflating: IntelImageClassification/train/street/17745.jpg inflating: IntelImageClassification/train/street/17765.jpg inflating: IntelImageClassification/train/street/17769.jpg inflating: IntelImageClassification/train/street/17796.jpg inflating: IntelImageClassification/train/street/17812.jpg inflating: IntelImageClassification/train/street/1782.jpg inflating: IntelImageClassification/train/street/17834.jpg inflating: IntelImageClassification/train/street/17848.jpg inflating: IntelImageClassification/train/street/17849.jpg inflating: IntelImageClassification/train/street/17852.jpg inflating: IntelImageClassification/train/street/17854.jpg inflating: IntelImageClassification/train/street/17864.jpg inflating: IntelImageClassification/train/street/17887.jpg inflating: IntelImageClassification/train/street/17904.jpg inflating: IntelImageClassification/train/street/17905.jpg inflating: IntelImageClassification/train/street/17914.jpg inflating: IntelImageClassification/train/street/17947.jpg inflating: IntelImageClassification/train/street/18001.jpg inflating: IntelImageClassification/train/street/18002.jpg inflating: IntelImageClassification/train/street/18003.jpg inflating: IntelImageClassification/train/street/18012.jpg inflating: IntelImageClassification/train/street/18016.jpg inflating: IntelImageClassification/train/street/18018.jpg inflating: IntelImageClassification/train/street/18095.jpg inflating: IntelImageClassification/train/street/181.jpg inflating: IntelImageClassification/train/street/18108.jpg inflating: IntelImageClassification/train/street/18147.jpg inflating: IntelImageClassification/train/street/18153.jpg inflating: IntelImageClassification/train/street/18187.jpg inflating: IntelImageClassification/train/street/18190.jpg inflating: IntelImageClassification/train/street/18191.jpg inflating: IntelImageClassification/train/street/18217.jpg inflating: IntelImageClassification/train/street/18261.jpg inflating: IntelImageClassification/train/street/18284.jpg inflating: IntelImageClassification/train/street/18313.jpg inflating: IntelImageClassification/train/street/18317.jpg inflating: IntelImageClassification/train/street/18359.jpg inflating: IntelImageClassification/train/street/18369.jpg inflating: IntelImageClassification/train/street/1838.jpg inflating: IntelImageClassification/train/street/18383.jpg inflating: IntelImageClassification/train/street/18390.jpg inflating: IntelImageClassification/train/street/18392.jpg inflating: IntelImageClassification/train/street/18394.jpg inflating: IntelImageClassification/train/street/184.jpg inflating: IntelImageClassification/train/street/18423.jpg inflating: IntelImageClassification/train/street/18429.jpg inflating: IntelImageClassification/train/street/18452.jpg inflating: IntelImageClassification/train/street/18457.jpg inflating: IntelImageClassification/train/street/18466.jpg inflating: IntelImageClassification/train/street/18481.jpg inflating: IntelImageClassification/train/street/18484.jpg inflating: IntelImageClassification/train/street/18487.jpg inflating: IntelImageClassification/train/street/18517.jpg inflating: IntelImageClassification/train/street/18520.jpg inflating: IntelImageClassification/train/street/18521.jpg inflating: IntelImageClassification/train/street/18523.jpg inflating: IntelImageClassification/train/street/1856.jpg inflating: IntelImageClassification/train/street/18595.jpg inflating: IntelImageClassification/train/street/18606.jpg inflating: IntelImageClassification/train/street/18644.jpg inflating: IntelImageClassification/train/street/18675.jpg inflating: IntelImageClassification/train/street/18678.jpg inflating: IntelImageClassification/train/street/18683.jpg inflating: IntelImageClassification/train/street/18692.jpg inflating: IntelImageClassification/train/street/18711.jpg inflating: IntelImageClassification/train/street/18712.jpg inflating: IntelImageClassification/train/street/18718.jpg inflating: IntelImageClassification/train/street/18721.jpg inflating: IntelImageClassification/train/street/18763.jpg inflating: IntelImageClassification/train/street/18770.jpg inflating: IntelImageClassification/train/street/18779.jpg inflating: IntelImageClassification/train/street/18866.jpg inflating: IntelImageClassification/train/street/18880.jpg inflating: IntelImageClassification/train/street/18888.jpg inflating: IntelImageClassification/train/street/18897.jpg inflating: IntelImageClassification/train/street/18908.jpg inflating: IntelImageClassification/train/street/18914.jpg inflating: IntelImageClassification/train/street/18937.jpg inflating: IntelImageClassification/train/street/18980.jpg inflating: IntelImageClassification/train/street/18984.jpg inflating: IntelImageClassification/train/street/18997.jpg inflating: IntelImageClassification/train/street/19.jpg inflating: IntelImageClassification/train/street/19010.jpg inflating: IntelImageClassification/train/street/19031.jpg inflating: IntelImageClassification/train/street/1905.jpg inflating: IntelImageClassification/train/street/19055.jpg inflating: IntelImageClassification/train/street/19061.jpg inflating: IntelImageClassification/train/street/1908.jpg inflating: IntelImageClassification/train/street/19141.jpg inflating: IntelImageClassification/train/street/19145.jpg inflating: IntelImageClassification/train/street/19152.jpg inflating: IntelImageClassification/train/street/19158.jpg inflating: IntelImageClassification/train/street/19163.jpg inflating: IntelImageClassification/train/street/19212.jpg inflating: IntelImageClassification/train/street/19218.jpg inflating: IntelImageClassification/train/street/19236.jpg inflating: IntelImageClassification/train/street/19308.jpg inflating: IntelImageClassification/train/street/19314.jpg inflating: IntelImageClassification/train/street/19334.jpg inflating: IntelImageClassification/train/street/19338.jpg inflating: IntelImageClassification/train/street/19352.jpg inflating: IntelImageClassification/train/street/1939.jpg inflating: IntelImageClassification/train/street/19413.jpg inflating: IntelImageClassification/train/street/19422.jpg inflating: IntelImageClassification/train/street/19431.jpg inflating: IntelImageClassification/train/street/19462.jpg inflating: IntelImageClassification/train/street/19488.jpg inflating: IntelImageClassification/train/street/19489.jpg inflating: IntelImageClassification/train/street/1950.jpg inflating: IntelImageClassification/train/street/19511.jpg inflating: IntelImageClassification/train/street/19515.jpg inflating: IntelImageClassification/train/street/19550.jpg inflating: IntelImageClassification/train/street/19559.jpg inflating: IntelImageClassification/train/street/19588.jpg inflating: IntelImageClassification/train/street/19643.jpg inflating: IntelImageClassification/train/street/19650.jpg inflating: IntelImageClassification/train/street/19662.jpg inflating: IntelImageClassification/train/street/19698.jpg inflating: IntelImageClassification/train/street/19700.jpg inflating: IntelImageClassification/train/street/19720.jpg inflating: IntelImageClassification/train/street/19736.jpg inflating: IntelImageClassification/train/street/19739.jpg inflating: IntelImageClassification/train/street/19770.jpg inflating: IntelImageClassification/train/street/19772.jpg inflating: IntelImageClassification/train/street/19807.jpg inflating: IntelImageClassification/train/street/19817.jpg inflating: IntelImageClassification/train/street/1984.jpg inflating: IntelImageClassification/train/street/19891.jpg inflating: IntelImageClassification/train/street/19892.jpg inflating: IntelImageClassification/train/street/19905.jpg inflating: IntelImageClassification/train/street/19909.jpg inflating: IntelImageClassification/train/street/19917.jpg inflating: IntelImageClassification/train/street/19999.jpg inflating: IntelImageClassification/train/street/2.jpg inflating: IntelImageClassification/train/street/20036.jpg inflating: IntelImageClassification/train/street/2095.jpg inflating: IntelImageClassification/train/street/210.jpg inflating: IntelImageClassification/train/street/2103.jpg inflating: IntelImageClassification/train/street/2116.jpg inflating: IntelImageClassification/train/street/2143.jpg inflating: IntelImageClassification/train/street/2169.jpg inflating: IntelImageClassification/train/street/2177.jpg inflating: IntelImageClassification/train/street/2178.jpg inflating: IntelImageClassification/train/street/2210.jpg inflating: IntelImageClassification/train/street/2226.jpg inflating: IntelImageClassification/train/street/2256.jpg inflating: IntelImageClassification/train/street/228.jpg inflating: IntelImageClassification/train/street/2288.jpg inflating: IntelImageClassification/train/street/2308.jpg inflating: IntelImageClassification/train/street/2322.jpg inflating: IntelImageClassification/train/street/2341.jpg inflating: IntelImageClassification/train/street/2343.jpg inflating: IntelImageClassification/train/street/2344.jpg inflating: IntelImageClassification/train/street/2348.jpg inflating: IntelImageClassification/train/street/2389.jpg inflating: IntelImageClassification/train/street/2405.jpg inflating: IntelImageClassification/train/street/2417.jpg inflating: IntelImageClassification/train/street/2443.jpg inflating: IntelImageClassification/train/street/2446.jpg inflating: IntelImageClassification/train/street/2450.jpg inflating: IntelImageClassification/train/street/2454.jpg inflating: IntelImageClassification/train/street/249.jpg inflating: IntelImageClassification/train/street/250.jpg inflating: IntelImageClassification/train/street/2503.jpg inflating: IntelImageClassification/train/street/2560.jpg inflating: IntelImageClassification/train/street/259.jpg inflating: IntelImageClassification/train/street/26.jpg inflating: IntelImageClassification/train/street/2652.jpg inflating: IntelImageClassification/train/street/2667.jpg inflating: IntelImageClassification/train/street/2673.jpg inflating: IntelImageClassification/train/street/2683.jpg inflating: IntelImageClassification/train/street/2725.jpg inflating: IntelImageClassification/train/street/2727.jpg inflating: IntelImageClassification/train/street/2754.jpg inflating: IntelImageClassification/train/street/2757.jpg inflating: IntelImageClassification/train/street/2764.jpg inflating: IntelImageClassification/train/street/2776.jpg inflating: IntelImageClassification/train/street/2782.jpg inflating: IntelImageClassification/train/street/2785.jpg inflating: IntelImageClassification/train/street/2786.jpg inflating: IntelImageClassification/train/street/2818.jpg inflating: IntelImageClassification/train/street/2836.jpg inflating: IntelImageClassification/train/street/2842.jpg inflating: IntelImageClassification/train/street/2868.jpg inflating: IntelImageClassification/train/street/2877.jpg inflating: IntelImageClassification/train/street/2881.jpg inflating: IntelImageClassification/train/street/2884.jpg inflating: IntelImageClassification/train/street/2890.jpg inflating: IntelImageClassification/train/street/2916.jpg inflating: IntelImageClassification/train/street/2925.jpg inflating: IntelImageClassification/train/street/2935.jpg inflating: IntelImageClassification/train/street/2939.jpg inflating: IntelImageClassification/train/street/2946.jpg inflating: IntelImageClassification/train/street/2957.jpg inflating: IntelImageClassification/train/street/2981.jpg inflating: IntelImageClassification/train/street/2988.jpg inflating: IntelImageClassification/train/street/2990.jpg inflating: IntelImageClassification/train/street/3007.jpg inflating: IntelImageClassification/train/street/3033.jpg inflating: IntelImageClassification/train/street/3038.jpg inflating: IntelImageClassification/train/street/3075.jpg inflating: IntelImageClassification/train/street/3117.jpg inflating: IntelImageClassification/train/street/3123.jpg inflating: IntelImageClassification/train/street/3132.jpg inflating: IntelImageClassification/train/street/3202.jpg inflating: IntelImageClassification/train/street/3204.jpg inflating: IntelImageClassification/train/street/3205.jpg inflating: IntelImageClassification/train/street/3222.jpg inflating: IntelImageClassification/train/street/3226.jpg inflating: IntelImageClassification/train/street/3229.jpg inflating: IntelImageClassification/train/street/3230.jpg inflating: IntelImageClassification/train/street/3247.jpg inflating: IntelImageClassification/train/street/3278.jpg inflating: IntelImageClassification/train/street/3290.jpg inflating: IntelImageClassification/train/street/3319.jpg inflating: IntelImageClassification/train/street/3343.jpg inflating: IntelImageClassification/train/street/3357.jpg inflating: IntelImageClassification/train/street/3378.jpg inflating: IntelImageClassification/train/street/3400.jpg inflating: IntelImageClassification/train/street/3412.jpg inflating: IntelImageClassification/train/street/3434.jpg inflating: IntelImageClassification/train/street/3447.jpg inflating: IntelImageClassification/train/street/3453.jpg inflating: IntelImageClassification/train/street/3454.jpg inflating: IntelImageClassification/train/street/3461.jpg inflating: IntelImageClassification/train/street/3462.jpg inflating: IntelImageClassification/train/street/3473.jpg inflating: IntelImageClassification/train/street/349.jpg inflating: IntelImageClassification/train/street/3492.jpg inflating: IntelImageClassification/train/street/3493.jpg inflating: IntelImageClassification/train/street/35.jpg inflating: IntelImageClassification/train/street/3503.jpg inflating: IntelImageClassification/train/street/3505.jpg inflating: IntelImageClassification/train/street/3529.jpg inflating: IntelImageClassification/train/street/3534.jpg inflating: IntelImageClassification/train/street/3543.jpg inflating: IntelImageClassification/train/street/3545.jpg inflating: IntelImageClassification/train/street/3546.jpg inflating: IntelImageClassification/train/street/3547.jpg inflating: IntelImageClassification/train/street/3556.jpg inflating: IntelImageClassification/train/street/3566.jpg inflating: IntelImageClassification/train/street/3571.jpg inflating: IntelImageClassification/train/street/3614.jpg inflating: IntelImageClassification/train/street/3619.jpg inflating: IntelImageClassification/train/street/3636.jpg inflating: IntelImageClassification/train/street/3653.jpg inflating: IntelImageClassification/train/street/3660.jpg inflating: IntelImageClassification/train/street/3661.jpg inflating: IntelImageClassification/train/street/3665.jpg inflating: IntelImageClassification/train/street/370.jpg inflating: IntelImageClassification/train/street/371.jpg inflating: IntelImageClassification/train/street/3734.jpg inflating: IntelImageClassification/train/street/3760.jpg inflating: IntelImageClassification/train/street/3762.jpg inflating: IntelImageClassification/train/street/3767.jpg inflating: IntelImageClassification/train/street/3793.jpg inflating: IntelImageClassification/train/street/3797.jpg inflating: IntelImageClassification/train/street/3815.jpg inflating: IntelImageClassification/train/street/3834.jpg inflating: IntelImageClassification/train/street/3836.jpg inflating: IntelImageClassification/train/street/3837.jpg inflating: IntelImageClassification/train/street/384.jpg inflating: IntelImageClassification/train/street/3870.jpg inflating: IntelImageClassification/train/street/3889.jpg inflating: IntelImageClassification/train/street/3901.jpg inflating: IntelImageClassification/train/street/3908.jpg inflating: IntelImageClassification/train/street/3927.jpg inflating: IntelImageClassification/train/street/3938.jpg inflating: IntelImageClassification/train/street/3948.jpg inflating: IntelImageClassification/train/street/396.jpg inflating: IntelImageClassification/train/street/4090.jpg inflating: IntelImageClassification/train/street/4292.jpg inflating: IntelImageClassification/train/street/437.jpg inflating: IntelImageClassification/train/street/4382.jpg inflating: IntelImageClassification/train/street/4427.jpg inflating: IntelImageClassification/train/street/4531.jpg inflating: IntelImageClassification/train/street/4606.jpg inflating: IntelImageClassification/train/street/477.jpg inflating: IntelImageClassification/train/street/4828.jpg inflating: IntelImageClassification/train/street/4847.jpg inflating: IntelImageClassification/train/street/4872.jpg inflating: IntelImageClassification/train/street/4918.jpg inflating: IntelImageClassification/train/street/4922.jpg inflating: IntelImageClassification/train/street/4978.jpg inflating: IntelImageClassification/train/street/4989.jpg inflating: IntelImageClassification/train/street/4994.jpg inflating: IntelImageClassification/train/street/4998.jpg inflating: IntelImageClassification/train/street/4999.jpg inflating: IntelImageClassification/train/street/5026.jpg inflating: IntelImageClassification/train/street/5028.jpg inflating: IntelImageClassification/train/street/5055.jpg inflating: IntelImageClassification/train/street/5060.jpg inflating: IntelImageClassification/train/street/5063.jpg inflating: IntelImageClassification/train/street/5080.jpg inflating: IntelImageClassification/train/street/5089.jpg inflating: IntelImageClassification/train/street/5095.jpg inflating: IntelImageClassification/train/street/511.jpg inflating: IntelImageClassification/train/street/5161.jpg inflating: IntelImageClassification/train/street/5167.jpg inflating: IntelImageClassification/train/street/5208.jpg inflating: IntelImageClassification/train/street/5253.jpg inflating: IntelImageClassification/train/street/5258.jpg inflating: IntelImageClassification/train/street/5267.jpg inflating: IntelImageClassification/train/street/5299.jpg inflating: IntelImageClassification/train/street/5304.jpg inflating: IntelImageClassification/train/street/5321.jpg inflating: IntelImageClassification/train/street/5329.jpg inflating: IntelImageClassification/train/street/5332.jpg inflating: IntelImageClassification/train/street/5354.jpg inflating: IntelImageClassification/train/street/5359.jpg inflating: IntelImageClassification/train/street/5363.jpg inflating: IntelImageClassification/train/street/538.jpg inflating: IntelImageClassification/train/street/5428.jpg inflating: IntelImageClassification/train/street/5447.jpg inflating: IntelImageClassification/train/street/5453.jpg inflating: IntelImageClassification/train/street/5496.jpg inflating: IntelImageClassification/train/street/5512.jpg inflating: IntelImageClassification/train/street/5522.jpg inflating: IntelImageClassification/train/street/5559.jpg inflating: IntelImageClassification/train/street/5565.jpg inflating: IntelImageClassification/train/street/5593.jpg inflating: IntelImageClassification/train/street/5618.jpg inflating: IntelImageClassification/train/street/562.jpg inflating: IntelImageClassification/train/street/5622.jpg inflating: IntelImageClassification/train/street/5624.jpg inflating: IntelImageClassification/train/street/5629.jpg inflating: IntelImageClassification/train/street/5670.jpg inflating: IntelImageClassification/train/street/5672.jpg inflating: IntelImageClassification/train/street/5677.jpg inflating: IntelImageClassification/train/street/5694.jpg inflating: IntelImageClassification/train/street/5717.jpg inflating: IntelImageClassification/train/street/5724.jpg inflating: IntelImageClassification/train/street/5728.jpg inflating: IntelImageClassification/train/street/5760.jpg inflating: IntelImageClassification/train/street/5768.jpg inflating: IntelImageClassification/train/street/5780.jpg inflating: IntelImageClassification/train/street/5797.jpg inflating: IntelImageClassification/train/street/5809.jpg inflating: IntelImageClassification/train/street/5833.jpg inflating: IntelImageClassification/train/street/589.jpg inflating: IntelImageClassification/train/street/5897.jpg inflating: IntelImageClassification/train/street/5911.jpg inflating: IntelImageClassification/train/street/5949.jpg inflating: IntelImageClassification/train/street/5974.jpg inflating: IntelImageClassification/train/street/5989.jpg inflating: IntelImageClassification/train/street/6009.jpg inflating: IntelImageClassification/train/street/6011.jpg inflating: IntelImageClassification/train/street/6019.jpg inflating: IntelImageClassification/train/street/6020.jpg inflating: IntelImageClassification/train/street/6038.jpg inflating: IntelImageClassification/train/street/6072.jpg inflating: IntelImageClassification/train/street/6078.jpg inflating: IntelImageClassification/train/street/6095.jpg inflating: IntelImageClassification/train/street/6097.jpg inflating: IntelImageClassification/train/street/6102.jpg inflating: IntelImageClassification/train/street/6103.jpg inflating: IntelImageClassification/train/street/6130.jpg inflating: IntelImageClassification/train/street/6136.jpg inflating: IntelImageClassification/train/street/6155.jpg inflating: IntelImageClassification/train/street/6199.jpg inflating: IntelImageClassification/train/street/6204.jpg inflating: IntelImageClassification/train/street/6264.jpg inflating: IntelImageClassification/train/street/6277.jpg inflating: IntelImageClassification/train/street/6309.jpg inflating: IntelImageClassification/train/street/634.jpg inflating: IntelImageClassification/train/street/6342.jpg inflating: IntelImageClassification/train/street/6344.jpg inflating: IntelImageClassification/train/street/6364.jpg inflating: IntelImageClassification/train/street/637.jpg inflating: IntelImageClassification/train/street/6372.jpg inflating: IntelImageClassification/train/street/6392.jpg inflating: IntelImageClassification/train/street/6393.jpg inflating: IntelImageClassification/train/street/6408.jpg inflating: IntelImageClassification/train/street/6425.jpg inflating: IntelImageClassification/train/street/643.jpg inflating: IntelImageClassification/train/street/6508.jpg inflating: IntelImageClassification/train/street/6515.jpg inflating: IntelImageClassification/train/street/6558.jpg inflating: IntelImageClassification/train/street/6573.jpg inflating: IntelImageClassification/train/street/6583.jpg inflating: IntelImageClassification/train/street/6594.jpg inflating: IntelImageClassification/train/street/6613.jpg inflating: IntelImageClassification/train/street/6626.jpg inflating: IntelImageClassification/train/street/6659.jpg inflating: IntelImageClassification/train/street/6737.jpg inflating: IntelImageClassification/train/street/6740.jpg inflating: IntelImageClassification/train/street/6792.jpg inflating: IntelImageClassification/train/street/6825.jpg inflating: IntelImageClassification/train/street/6848.jpg inflating: IntelImageClassification/train/street/6849.jpg inflating: IntelImageClassification/train/street/6865.jpg inflating: IntelImageClassification/train/street/688.jpg inflating: IntelImageClassification/train/street/6905.jpg inflating: IntelImageClassification/train/street/6946.jpg inflating: IntelImageClassification/train/street/6971.jpg inflating: IntelImageClassification/train/street/7006.jpg inflating: IntelImageClassification/train/street/7023.jpg inflating: IntelImageClassification/train/street/7039.jpg inflating: IntelImageClassification/train/street/7064.jpg inflating: IntelImageClassification/train/street/7074.jpg inflating: IntelImageClassification/train/street/7085.jpg inflating: IntelImageClassification/train/street/7098.jpg inflating: IntelImageClassification/train/street/7132.jpg inflating: IntelImageClassification/train/street/7166.jpg inflating: IntelImageClassification/train/street/7170.jpg inflating: IntelImageClassification/train/street/7223.jpg inflating: IntelImageClassification/train/street/7236.jpg inflating: IntelImageClassification/train/street/7254.jpg inflating: IntelImageClassification/train/street/7275.jpg inflating: IntelImageClassification/train/street/7300.jpg inflating: IntelImageClassification/train/street/7309.jpg inflating: IntelImageClassification/train/street/731.jpg inflating: IntelImageClassification/train/street/7336.jpg inflating: IntelImageClassification/train/street/7338.jpg inflating: IntelImageClassification/train/street/735.jpg inflating: IntelImageClassification/train/street/7366.jpg inflating: IntelImageClassification/train/street/7367.jpg inflating: IntelImageClassification/train/street/7392.jpg inflating: IntelImageClassification/train/street/7397.jpg inflating: IntelImageClassification/train/street/74.jpg inflating: IntelImageClassification/train/street/7428.jpg inflating: IntelImageClassification/train/street/7431.jpg inflating: IntelImageClassification/train/street/7445.jpg inflating: IntelImageClassification/train/street/7454.jpg inflating: IntelImageClassification/train/street/7457.jpg inflating: IntelImageClassification/train/street/7458.jpg inflating: IntelImageClassification/train/street/7475.jpg inflating: IntelImageClassification/train/street/7499.jpg inflating: IntelImageClassification/train/street/750.jpg inflating: IntelImageClassification/train/street/7527.jpg inflating: IntelImageClassification/train/street/7549.jpg inflating: IntelImageClassification/train/street/755.jpg inflating: IntelImageClassification/train/street/7585.jpg inflating: IntelImageClassification/train/street/7588.jpg inflating: IntelImageClassification/train/street/7601.jpg inflating: IntelImageClassification/train/street/7603.jpg inflating: IntelImageClassification/train/street/7618.jpg inflating: IntelImageClassification/train/street/7626.jpg inflating: IntelImageClassification/train/street/7632.jpg inflating: IntelImageClassification/train/street/7692.jpg inflating: IntelImageClassification/train/street/770.jpg inflating: IntelImageClassification/train/street/7702.jpg inflating: IntelImageClassification/train/street/776.jpg inflating: IntelImageClassification/train/street/7786.jpg inflating: IntelImageClassification/train/street/7837.jpg inflating: IntelImageClassification/train/street/7839.jpg inflating: IntelImageClassification/train/street/7850.jpg inflating: IntelImageClassification/train/street/7853.jpg inflating: IntelImageClassification/train/street/7876.jpg inflating: IntelImageClassification/train/street/7889.jpg inflating: IntelImageClassification/train/street/7897.jpg inflating: IntelImageClassification/train/street/8026.jpg inflating: IntelImageClassification/train/street/8063.jpg inflating: IntelImageClassification/train/street/8086.jpg inflating: IntelImageClassification/train/street/8102.jpg inflating: IntelImageClassification/train/street/8104.jpg inflating: IntelImageClassification/train/street/815.jpg inflating: IntelImageClassification/train/street/8170.jpg inflating: IntelImageClassification/train/street/8204.jpg inflating: IntelImageClassification/train/street/8227.jpg inflating: IntelImageClassification/train/street/8253.jpg inflating: IntelImageClassification/train/street/8274.jpg inflating: IntelImageClassification/train/street/8280.jpg inflating: IntelImageClassification/train/street/8293.jpg inflating: IntelImageClassification/train/street/8311.jpg inflating: IntelImageClassification/train/street/8314.jpg inflating: IntelImageClassification/train/street/8323.jpg inflating: IntelImageClassification/train/street/8336.jpg inflating: IntelImageClassification/train/street/8350.jpg inflating: IntelImageClassification/train/street/8353.jpg inflating: IntelImageClassification/train/street/8354.jpg inflating: IntelImageClassification/train/street/840.jpg inflating: IntelImageClassification/train/street/8413.jpg inflating: IntelImageClassification/train/street/8428.jpg inflating: IntelImageClassification/train/street/8434.jpg inflating: IntelImageClassification/train/street/844.jpg inflating: IntelImageClassification/train/street/8487.jpg inflating: IntelImageClassification/train/street/8503.jpg inflating: IntelImageClassification/train/street/8533.jpg inflating: IntelImageClassification/train/street/8548.jpg inflating: IntelImageClassification/train/street/8581.jpg inflating: IntelImageClassification/train/street/86.jpg inflating: IntelImageClassification/train/street/8690.jpg inflating: IntelImageClassification/train/street/8706.jpg inflating: IntelImageClassification/train/street/8708.jpg inflating: IntelImageClassification/train/street/8717.jpg inflating: IntelImageClassification/train/street/872.jpg inflating: IntelImageClassification/train/street/8720.jpg inflating: IntelImageClassification/train/street/874.jpg inflating: IntelImageClassification/train/street/8755.jpg inflating: IntelImageClassification/train/street/8761.jpg inflating: IntelImageClassification/train/street/8818.jpg inflating: IntelImageClassification/train/street/8864.jpg inflating: IntelImageClassification/train/street/8866.jpg inflating: IntelImageClassification/train/street/8871.jpg inflating: IntelImageClassification/train/street/889.jpg inflating: IntelImageClassification/train/street/8907.jpg inflating: IntelImageClassification/train/street/8919.jpg inflating: IntelImageClassification/train/street/8928.jpg inflating: IntelImageClassification/train/street/8931.jpg inflating: IntelImageClassification/train/street/8974.jpg inflating: IntelImageClassification/train/street/8981.jpg inflating: IntelImageClassification/train/street/8999.jpg inflating: IntelImageClassification/train/street/9.jpg inflating: IntelImageClassification/train/street/9009.jpg inflating: IntelImageClassification/train/street/9043.jpg inflating: IntelImageClassification/train/street/9049.jpg inflating: IntelImageClassification/train/street/908.jpg inflating: IntelImageClassification/train/street/9089.jpg inflating: IntelImageClassification/train/street/91.jpg inflating: IntelImageClassification/train/street/9118.jpg inflating: IntelImageClassification/train/street/9126.jpg inflating: IntelImageClassification/train/street/9148.jpg inflating: IntelImageClassification/train/street/9160.jpg inflating: IntelImageClassification/train/street/9164.jpg inflating: IntelImageClassification/train/street/9192.jpg inflating: IntelImageClassification/train/street/9193.jpg inflating: IntelImageClassification/train/street/9224.jpg inflating: IntelImageClassification/train/street/9275.jpg inflating: IntelImageClassification/train/street/9327.jpg inflating: IntelImageClassification/train/street/9342.jpg inflating: IntelImageClassification/train/street/9349.jpg inflating: IntelImageClassification/train/street/9352.jpg inflating: IntelImageClassification/train/street/9356.jpg inflating: IntelImageClassification/train/street/9362.jpg inflating: IntelImageClassification/train/street/9370.jpg inflating: IntelImageClassification/train/street/9376.jpg inflating: IntelImageClassification/train/street/94.jpg inflating: IntelImageClassification/train/street/9407.jpg inflating: IntelImageClassification/train/street/9413.jpg inflating: IntelImageClassification/train/street/9442.jpg inflating: IntelImageClassification/train/street/9447.jpg inflating: IntelImageClassification/train/street/9482.jpg inflating: IntelImageClassification/train/street/9484.jpg inflating: IntelImageClassification/train/street/9489.jpg inflating: IntelImageClassification/train/street/9535.jpg inflating: IntelImageClassification/train/street/9595.jpg inflating: IntelImageClassification/train/street/9600.jpg inflating: IntelImageClassification/train/street/9609.jpg inflating: IntelImageClassification/train/street/9652.jpg inflating: IntelImageClassification/train/street/9662.jpg inflating: IntelImageClassification/train/street/9685.jpg inflating: IntelImageClassification/train/street/9687.jpg inflating: IntelImageClassification/train/street/9707.jpg inflating: IntelImageClassification/train/street/9720.jpg inflating: IntelImageClassification/train/street/9733.jpg inflating: IntelImageClassification/train/street/9798.jpg inflating: IntelImageClassification/train/street/9843.jpg inflating: IntelImageClassification/train/street/9846.jpg inflating: IntelImageClassification/train/street/9875.jpg inflating: IntelImageClassification/train/street/9891.jpg inflating: IntelImageClassification/train/street/9903.jpg inflating: IntelImageClassification/train/street/992.jpg inflating: IntelImageClassification/train/street/994.jpg inflating: IntelImageClassification/train/street/9953.jpg inflating: IntelImageClassification/train/street/9961.jpg inflating: IntelImageClassification/train/street/9967.jpg inflating: IntelImageClassification/train/street/9989.jpg inflating: IntelImageClassification/train/street/1005.jpg inflating: IntelImageClassification/train/street/10065.jpg inflating: IntelImageClassification/train/street/10084.jpg inflating: IntelImageClassification/train/street/10125.jpg inflating: IntelImageClassification/train/street/1015.jpg inflating: IntelImageClassification/train/street/10189.jpg inflating: IntelImageClassification/train/street/10213.jpg inflating: IntelImageClassification/train/street/10227.jpg inflating: IntelImageClassification/train/street/10260.jpg inflating: IntelImageClassification/train/street/10279.jpg inflating: IntelImageClassification/train/street/1030.jpg inflating: IntelImageClassification/train/street/10335.jpg inflating: IntelImageClassification/train/street/10349.jpg inflating: IntelImageClassification/train/street/10354.jpg inflating: IntelImageClassification/train/street/10358.jpg inflating: IntelImageClassification/train/street/10369.jpg inflating: IntelImageClassification/train/street/10392.jpg inflating: IntelImageClassification/train/street/10470.jpg inflating: IntelImageClassification/train/street/10524.jpg inflating: IntelImageClassification/train/street/1056.jpg inflating: IntelImageClassification/train/street/10569.jpg inflating: IntelImageClassification/train/street/1059.jpg inflating: IntelImageClassification/train/street/106.jpg inflating: IntelImageClassification/train/street/10600.jpg inflating: IntelImageClassification/train/street/10617.jpg inflating: IntelImageClassification/train/street/1073.jpg inflating: IntelImageClassification/train/street/1077.jpg inflating: IntelImageClassification/train/street/11002.jpg inflating: IntelImageClassification/train/street/11029.jpg inflating: IntelImageClassification/train/street/11093.jpg inflating: IntelImageClassification/train/street/11113.jpg inflating: IntelImageClassification/train/street/11143.jpg inflating: IntelImageClassification/train/street/11146.jpg inflating: IntelImageClassification/train/street/11169.jpg inflating: IntelImageClassification/train/street/11202.jpg inflating: IntelImageClassification/train/street/11272.jpg inflating: IntelImageClassification/train/street/11379.jpg inflating: IntelImageClassification/train/street/11466.jpg inflating: IntelImageClassification/train/street/11474.jpg inflating: IntelImageClassification/train/street/11611.jpg inflating: IntelImageClassification/train/street/11631.jpg inflating: IntelImageClassification/train/street/11725.jpg inflating: IntelImageClassification/train/street/11803.jpg inflating: IntelImageClassification/train/street/11836.jpg inflating: IntelImageClassification/train/street/11841.jpg inflating: IntelImageClassification/train/street/11850.jpg inflating: IntelImageClassification/train/street/11857.jpg inflating: IntelImageClassification/train/street/11882.jpg inflating: IntelImageClassification/train/street/11926.jpg inflating: IntelImageClassification/train/street/11939.jpg inflating: IntelImageClassification/train/street/11944.jpg inflating: IntelImageClassification/train/street/11954.jpg inflating: IntelImageClassification/train/street/11976.jpg inflating: IntelImageClassification/train/street/12074.jpg inflating: IntelImageClassification/train/street/1208.jpg inflating: IntelImageClassification/train/street/12161.jpg inflating: IntelImageClassification/train/street/1218.jpg inflating: IntelImageClassification/train/street/12228.jpg inflating: IntelImageClassification/train/street/12310.jpg inflating: IntelImageClassification/train/street/12360.jpg inflating: IntelImageClassification/train/street/12380.jpg inflating: IntelImageClassification/train/street/12450.jpg inflating: IntelImageClassification/train/street/12465.jpg inflating: IntelImageClassification/train/street/12538.jpg inflating: IntelImageClassification/train/street/12633.jpg inflating: IntelImageClassification/train/street/12688.jpg inflating: IntelImageClassification/train/street/12773.jpg inflating: IntelImageClassification/train/street/12811.jpg inflating: IntelImageClassification/train/street/12935.jpg inflating: IntelImageClassification/train/street/13026.jpg inflating: IntelImageClassification/train/street/13043.jpg inflating: IntelImageClassification/train/street/13190.jpg inflating: IntelImageClassification/train/street/13209.jpg inflating: IntelImageClassification/train/street/13218.jpg inflating: IntelImageClassification/train/street/13317.jpg inflating: IntelImageClassification/train/street/13473.jpg inflating: IntelImageClassification/train/street/13564.jpg inflating: IntelImageClassification/train/street/13569.jpg inflating: IntelImageClassification/train/street/13588.jpg inflating: IntelImageClassification/train/street/13605.jpg inflating: IntelImageClassification/train/street/13639.jpg inflating: IntelImageClassification/train/street/13655.jpg inflating: IntelImageClassification/train/street/13659.jpg inflating: IntelImageClassification/train/street/13664.jpg inflating: IntelImageClassification/train/street/13717.jpg inflating: IntelImageClassification/train/street/13747.jpg inflating: IntelImageClassification/train/street/13793.jpg inflating: IntelImageClassification/train/street/13794.jpg inflating: IntelImageClassification/train/street/13920.jpg inflating: IntelImageClassification/train/street/13935.jpg inflating: IntelImageClassification/train/street/1401.jpg inflating: IntelImageClassification/train/street/14034.jpg inflating: IntelImageClassification/train/street/14123.jpg inflating: IntelImageClassification/train/street/14143.jpg inflating: IntelImageClassification/train/street/14180.jpg inflating: IntelImageClassification/train/street/14219.jpg inflating: IntelImageClassification/train/street/1425.jpg inflating: IntelImageClassification/train/street/14342.jpg inflating: IntelImageClassification/train/street/1435.jpg inflating: IntelImageClassification/train/street/14368.jpg inflating: IntelImageClassification/train/street/1439.jpg inflating: IntelImageClassification/train/street/14418.jpg inflating: IntelImageClassification/train/street/14440.jpg inflating: IntelImageClassification/train/street/14465.jpg inflating: IntelImageClassification/train/street/14491.jpg inflating: IntelImageClassification/train/street/14585.jpg inflating: IntelImageClassification/train/street/14591.jpg inflating: IntelImageClassification/train/street/14619.jpg inflating: IntelImageClassification/train/street/14652.jpg inflating: IntelImageClassification/train/street/1472.jpg inflating: IntelImageClassification/train/street/14746.jpg inflating: IntelImageClassification/train/street/14789.jpg inflating: IntelImageClassification/train/street/14798.jpg inflating: IntelImageClassification/train/street/14805.jpg inflating: IntelImageClassification/train/street/14871.jpg inflating: IntelImageClassification/train/street/14875.jpg inflating: IntelImageClassification/train/street/14905.jpg inflating: IntelImageClassification/train/street/150.jpg inflating: IntelImageClassification/train/street/15088.jpg inflating: IntelImageClassification/train/street/15142.jpg inflating: IntelImageClassification/train/street/15183.jpg inflating: IntelImageClassification/train/street/15339.jpg inflating: IntelImageClassification/train/street/15347.jpg inflating: IntelImageClassification/train/street/15359.jpg inflating: IntelImageClassification/train/street/15363.jpg inflating: IntelImageClassification/train/street/15432.jpg inflating: IntelImageClassification/train/street/1548.jpg inflating: IntelImageClassification/train/street/15547.jpg inflating: IntelImageClassification/train/street/15584.jpg inflating: IntelImageClassification/train/street/15625.jpg inflating: IntelImageClassification/train/street/15664.jpg inflating: IntelImageClassification/train/street/1576.jpg inflating: IntelImageClassification/train/street/15833.jpg inflating: IntelImageClassification/train/street/15930.jpg inflating: IntelImageClassification/train/street/15942.jpg inflating: IntelImageClassification/train/street/15943.jpg inflating: IntelImageClassification/train/street/1601.jpg inflating: IntelImageClassification/train/street/16017.jpg inflating: IntelImageClassification/train/street/16036.jpg inflating: IntelImageClassification/train/street/16218.jpg inflating: IntelImageClassification/train/street/16250.jpg inflating: IntelImageClassification/train/street/16320.jpg inflating: IntelImageClassification/train/street/1633.jpg inflating: IntelImageClassification/train/street/16336.jpg inflating: IntelImageClassification/train/street/16387.jpg inflating: IntelImageClassification/train/street/16520.jpg inflating: IntelImageClassification/train/street/16572.jpg inflating: IntelImageClassification/train/street/16589.jpg inflating: IntelImageClassification/train/street/166.jpg inflating: IntelImageClassification/train/street/16693.jpg inflating: IntelImageClassification/train/street/16695.jpg inflating: IntelImageClassification/train/street/168.jpg inflating: IntelImageClassification/train/street/16804.jpg inflating: IntelImageClassification/train/street/16843.jpg inflating: IntelImageClassification/train/street/1689.jpg inflating: IntelImageClassification/train/street/16919.jpg inflating: IntelImageClassification/train/street/16923.jpg inflating: IntelImageClassification/train/street/16963.jpg inflating: IntelImageClassification/train/street/17009.jpg inflating: IntelImageClassification/train/street/17014.jpg inflating: IntelImageClassification/train/street/17076.jpg inflating: IntelImageClassification/train/street/17106.jpg inflating: IntelImageClassification/train/street/17135.jpg inflating: IntelImageClassification/train/street/17164.jpg inflating: IntelImageClassification/train/street/17166.jpg inflating: IntelImageClassification/train/street/1719.jpg inflating: IntelImageClassification/train/street/17259.jpg inflating: IntelImageClassification/train/street/17305.jpg inflating: IntelImageClassification/train/street/17320.jpg inflating: IntelImageClassification/train/street/17615.jpg inflating: IntelImageClassification/train/street/17632.jpg inflating: IntelImageClassification/train/street/17652.jpg inflating: IntelImageClassification/train/street/17688.jpg inflating: IntelImageClassification/train/street/17713.jpg inflating: IntelImageClassification/train/street/17724.jpg inflating: IntelImageClassification/train/street/1774.jpg inflating: IntelImageClassification/train/street/17773.jpg inflating: IntelImageClassification/train/street/17877.jpg inflating: IntelImageClassification/train/street/17889.jpg inflating: IntelImageClassification/train/street/17897.jpg inflating: IntelImageClassification/train/street/1790.jpg inflating: IntelImageClassification/train/street/17965.jpg inflating: IntelImageClassification/train/street/17970.jpg inflating: IntelImageClassification/train/street/18006.jpg inflating: IntelImageClassification/train/street/1803.jpg inflating: IntelImageClassification/train/street/18060.jpg inflating: IntelImageClassification/train/street/18242.jpg inflating: IntelImageClassification/train/street/18368.jpg inflating: IntelImageClassification/train/street/18416.jpg inflating: IntelImageClassification/train/street/18439.jpg inflating: IntelImageClassification/train/street/1849.jpg inflating: IntelImageClassification/train/street/18514.jpg inflating: IntelImageClassification/train/street/18516.jpg inflating: IntelImageClassification/train/street/1852.jpg inflating: IntelImageClassification/train/street/18532.jpg inflating: IntelImageClassification/train/street/18571.jpg inflating: IntelImageClassification/train/street/18605.jpg inflating: IntelImageClassification/train/street/1866.jpg inflating: IntelImageClassification/train/street/18705.jpg inflating: IntelImageClassification/train/street/18749.jpg inflating: IntelImageClassification/train/street/1878.jpg inflating: IntelImageClassification/train/street/18822.jpg inflating: IntelImageClassification/train/street/18877.jpg inflating: IntelImageClassification/train/street/1888.jpg inflating: IntelImageClassification/train/street/19014.jpg inflating: IntelImageClassification/train/street/19195.jpg inflating: IntelImageClassification/train/street/19215.jpg inflating: IntelImageClassification/train/street/19277.jpg inflating: IntelImageClassification/train/street/19300.jpg inflating: IntelImageClassification/train/street/19335.jpg inflating: IntelImageClassification/train/street/19357.jpg inflating: IntelImageClassification/train/street/19450.jpg inflating: IntelImageClassification/train/street/19463.jpg inflating: IntelImageClassification/train/street/19464.jpg inflating: IntelImageClassification/train/street/19477.jpg inflating: IntelImageClassification/train/street/19524.jpg inflating: IntelImageClassification/train/street/19679.jpg inflating: IntelImageClassification/train/street/19743.jpg inflating: IntelImageClassification/train/street/19783.jpg inflating: IntelImageClassification/train/street/19799.jpg inflating: IntelImageClassification/train/street/19808.jpg inflating: IntelImageClassification/train/street/19823.jpg inflating: IntelImageClassification/train/street/19829.jpg inflating: IntelImageClassification/train/street/19884.jpg inflating: IntelImageClassification/train/street/204.jpg inflating: IntelImageClassification/train/street/2068.jpg inflating: IntelImageClassification/train/street/213.jpg inflating: IntelImageClassification/train/street/223.jpg inflating: IntelImageClassification/train/street/2267.jpg inflating: IntelImageClassification/train/street/2361.jpg inflating: IntelImageClassification/train/street/2366.jpg inflating: IntelImageClassification/train/street/2434.jpg inflating: IntelImageClassification/train/street/260.jpg inflating: IntelImageClassification/train/street/2654.jpg inflating: IntelImageClassification/train/street/2703.jpg inflating: IntelImageClassification/train/street/2810.jpg inflating: IntelImageClassification/train/street/2913.jpg inflating: IntelImageClassification/train/street/3015.jpg inflating: IntelImageClassification/train/street/3054.jpg inflating: IntelImageClassification/train/street/3060.jpg inflating: IntelImageClassification/train/street/31.jpg inflating: IntelImageClassification/train/street/3115.jpg inflating: IntelImageClassification/train/street/3249.jpg inflating: IntelImageClassification/train/street/33.jpg inflating: IntelImageClassification/train/street/3314.jpg inflating: IntelImageClassification/train/street/3340.jpg inflating: IntelImageClassification/train/street/3352.jpg inflating: IntelImageClassification/train/street/3360.jpg inflating: IntelImageClassification/train/street/3392.jpg inflating: IntelImageClassification/train/street/340.jpg inflating: IntelImageClassification/train/street/3438.jpg inflating: IntelImageClassification/train/street/3440.jpg inflating: IntelImageClassification/train/street/3563.jpg inflating: IntelImageClassification/train/street/358.jpg inflating: IntelImageClassification/train/street/3621.jpg inflating: IntelImageClassification/train/street/3643.jpg inflating: IntelImageClassification/train/street/3682.jpg inflating: IntelImageClassification/train/street/3684.jpg inflating: IntelImageClassification/train/street/3704.jpg inflating: IntelImageClassification/train/street/373.jpg inflating: IntelImageClassification/train/street/3764.jpg inflating: IntelImageClassification/train/street/3773.jpg inflating: IntelImageClassification/train/street/3839.jpg inflating: IntelImageClassification/train/street/3842.jpg inflating: IntelImageClassification/train/street/3876.jpg inflating: IntelImageClassification/train/street/3899.jpg inflating: IntelImageClassification/train/street/3960.jpg inflating: IntelImageClassification/train/street/4142.jpg inflating: IntelImageClassification/train/street/4230.jpg inflating: IntelImageClassification/train/street/45.jpg inflating: IntelImageClassification/train/street/4511.jpg inflating: IntelImageClassification/train/street/454.jpg inflating: IntelImageClassification/train/street/4822.jpg inflating: IntelImageClassification/train/street/4830.jpg inflating: IntelImageClassification/train/street/4833.jpg inflating: IntelImageClassification/train/street/4963.jpg inflating: IntelImageClassification/train/street/4987.jpg inflating: IntelImageClassification/train/street/4996.jpg inflating: IntelImageClassification/train/street/5073.jpg inflating: IntelImageClassification/train/street/509.jpg inflating: IntelImageClassification/train/street/5141.jpg inflating: IntelImageClassification/train/street/5222.jpg inflating: IntelImageClassification/train/street/5228.jpg inflating: IntelImageClassification/train/street/5279.jpg inflating: IntelImageClassification/train/street/5297.jpg inflating: IntelImageClassification/train/street/532.jpg inflating: IntelImageClassification/train/street/5339.jpg inflating: IntelImageClassification/train/street/5356.jpg inflating: IntelImageClassification/train/street/5382.jpg inflating: IntelImageClassification/train/street/539.jpg inflating: IntelImageClassification/train/street/5437.jpg inflating: IntelImageClassification/train/street/5479.jpg inflating: IntelImageClassification/train/street/5588.jpg inflating: IntelImageClassification/train/street/5891.jpg inflating: IntelImageClassification/train/street/5948.jpg inflating: IntelImageClassification/train/street/5983.jpg inflating: IntelImageClassification/train/street/6064.jpg inflating: IntelImageClassification/train/street/6091.jpg inflating: IntelImageClassification/train/street/6132.jpg inflating: IntelImageClassification/train/street/6149.jpg inflating: IntelImageClassification/train/street/6180.jpg inflating: IntelImageClassification/train/street/6182.jpg inflating: IntelImageClassification/train/street/6216.jpg inflating: IntelImageClassification/train/street/624.jpg inflating: IntelImageClassification/train/street/6284.jpg inflating: IntelImageClassification/train/street/6347.jpg inflating: IntelImageClassification/train/street/6370.jpg inflating: IntelImageClassification/train/street/6412.jpg inflating: IntelImageClassification/train/street/6562.jpg inflating: IntelImageClassification/train/street/6570.jpg inflating: IntelImageClassification/train/street/6635.jpg inflating: IntelImageClassification/train/street/6636.jpg inflating: IntelImageClassification/train/street/6652.jpg inflating: IntelImageClassification/train/street/6706.jpg inflating: IntelImageClassification/train/street/6731.jpg inflating: IntelImageClassification/train/street/6754.jpg inflating: IntelImageClassification/train/street/6815.jpg inflating: IntelImageClassification/train/street/6820.jpg inflating: IntelImageClassification/train/street/6847.jpg inflating: IntelImageClassification/train/street/6973.jpg inflating: IntelImageClassification/train/street/698.jpg inflating: IntelImageClassification/train/street/7016.jpg inflating: IntelImageClassification/train/street/7031.jpg inflating: IntelImageClassification/train/street/7116.jpg inflating: IntelImageClassification/train/street/7141.jpg inflating: IntelImageClassification/train/street/7154.jpg inflating: IntelImageClassification/train/street/7155.jpg inflating: IntelImageClassification/train/street/7178.jpg inflating: IntelImageClassification/train/street/7343.jpg inflating: IntelImageClassification/train/street/7456.jpg inflating: IntelImageClassification/train/street/7470.jpg inflating: IntelImageClassification/train/street/7487.jpg inflating: IntelImageClassification/train/street/7529.jpg inflating: IntelImageClassification/train/street/7546.jpg inflating: IntelImageClassification/train/street/7653.jpg inflating: IntelImageClassification/train/street/7717.jpg inflating: IntelImageClassification/train/street/7784.jpg inflating: IntelImageClassification/train/street/782.jpg inflating: IntelImageClassification/train/street/7828.jpg inflating: IntelImageClassification/train/street/7902.jpg inflating: IntelImageClassification/train/street/8029.jpg inflating: IntelImageClassification/train/street/8058.jpg inflating: IntelImageClassification/train/street/8061.jpg inflating: IntelImageClassification/train/street/807.jpg inflating: IntelImageClassification/train/street/8111.jpg inflating: IntelImageClassification/train/street/8206.jpg inflating: IntelImageClassification/train/street/8262.jpg inflating: IntelImageClassification/train/street/8294.jpg inflating: IntelImageClassification/train/street/83.jpg inflating: IntelImageClassification/train/street/8313.jpg inflating: IntelImageClassification/train/street/843.jpg inflating: IntelImageClassification/train/street/8527.jpg inflating: IntelImageClassification/train/street/856.jpg inflating: IntelImageClassification/train/street/8631.jpg inflating: IntelImageClassification/train/street/8657.jpg inflating: IntelImageClassification/train/street/8671.jpg inflating: IntelImageClassification/train/street/8727.jpg inflating: IntelImageClassification/train/street/8774.jpg inflating: IntelImageClassification/train/street/8880.jpg inflating: IntelImageClassification/train/street/8925.jpg inflating: IntelImageClassification/train/street/8947.jpg inflating: IntelImageClassification/train/street/9004.jpg inflating: IntelImageClassification/train/street/9014.jpg inflating: IntelImageClassification/train/street/9036.jpg inflating: IntelImageClassification/train/street/9080.jpg inflating: IntelImageClassification/train/street/9114.jpg inflating: IntelImageClassification/train/street/9158.jpg inflating: IntelImageClassification/train/street/9184.jpg inflating: IntelImageClassification/train/street/9188.jpg inflating: IntelImageClassification/train/street/9236.jpg inflating: IntelImageClassification/train/street/9271.jpg inflating: IntelImageClassification/train/street/9350.jpg inflating: IntelImageClassification/train/street/9425.jpg inflating: IntelImageClassification/train/street/9468.jpg inflating: IntelImageClassification/train/street/9530.jpg inflating: IntelImageClassification/train/street/9704.jpg inflating: IntelImageClassification/train/street/9770.jpg inflating: IntelImageClassification/train/street/9817.jpg inflating: IntelImageClassification/train/street/9879.jpg inflating: IntelImageClassification/train/street/9895.jpg inflating: IntelImageClassification/train/street/9926.jpg inflating: IntelImageClassification/train/street/999.jpg . Vamos a explorar el contenido de este dataset. Para ello vamos a crear un objeto Path que apunta al directorio que acabamos de crear. . path = Path(&#39;IntelImageClassification/&#39;) . Vemos que nuestro dataset consta de dos carpetas llamadas train y test. Recordar que es importante hacer la partición del dataset en dos conjuntos distintos, para luego poder evaluarlo correctamente. Podemos ahora crear objetos path que apunten respectivamente a nuestro conjunto de entrenamiento y a nuestro conjunto de test. . trainPath = path/&#39;train&#39; testPath = path/&#39;test&#39; . Cargando el dataset . A continuación vamos a mostrar cómo se carga el dataset para poder posteriormente crear nuestro modelo. Este proceso se hace en dos pasos. Primero se construye un objeto DataBlock y a continuación se construye un objeto DataLoader a partir del DataBlock. Tienes más información sobre estos objetos en la documentación de FastAI. . Datablock . Comenzamos construyendo el objeto DataBlock. A continuación explicaremos cada una de sus componentes. . db = DataBlock(blocks = (ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2,seed=42), get_y=parent_label, item_tfms = Resize(256), batch_tfms=aug_transforms(size=128,min_scale=0.75)) . Dataloader . Pasamos ahora a construir nuestro DataLoader que se construye a partir del DataBlock construido anteriormente indicándole el path donde se encuentran nuestras imágenes. Además podemos configurar el DataLoader indicándole el tamaño del batch que queremos utilizar. Al trabajar con GPUs es importante que usemos batches de tamaño 2^n para optimizar el uso de la GPU. . dls = db.dataloaders(trainPath,bs=128) . Entrenando el modelo . Pasamos ahora a construir y entrenar nuestro modelo. Pero antes vamos a definir una serie de callbacks. . callbacks = [ ShowGraphCallback(), EarlyStoppingCallback(patience=3), SaveModelCallback(fname=&#39;modelResnet18&#39;) ] . Además de estos tres callbacks utilizaremos otro que nos servirá para acelerar el entrenamiento de nuestros modelos usando mixed precision. . Construyendo el modelo . A continuación construimos nuestro modelo, un objeto de la clase Learner, utilizando el método cnn_learner que toma como parámetros el DataLoader, la arquitectura que queremos entrenar (en nuestro caso un resnet18), la métrica que usaremos para evaluar nuestro modelo (esta evaluación se hace sobre el conjunto de validación, y en nuestro caso será la accuracy), y los callbacks. Notar que en la instrucción anterior incluimos la transformación del modelo a mixed precision. . learn = cnn_learner(dls,resnet18,metrics=accuracy,cbs=callbacks).to_fp16() . Downloading: &#34;https://download.pytorch.org/models/resnet18-f37072fd.pth&#34; to /root/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth . learn.fine_tune(10,base_lr=1e-3) . epoch train_loss valid_loss accuracy time . 0 | 1.036494 | 0.402519 | 0.861368 | 00:57 | . Better model found at epoch 0 with valid_loss value: 0.40251874923706055. . epoch train_loss valid_loss accuracy time . 0 | 0.514590 | 0.320449 | 0.890948 | 00:56 | . 1 | 0.423212 | 0.271075 | 0.914825 | 00:57 | . 2 | 0.347801 | 0.247673 | 0.918389 | 00:56 | . 3 | 0.284404 | 0.226699 | 0.925873 | 00:56 | . 4 | 0.233813 | 0.233442 | 0.924804 | 00:55 | . 5 | 0.194830 | 0.220699 | 0.929793 | 00:56 | . 6 | 0.156392 | 0.215009 | 0.933001 | 00:56 | . 7 | 0.141562 | 0.211194 | 0.931932 | 00:56 | . 8 | 0.124631 | 0.213230 | 0.930862 | 00:55 | . 9 | 0.122977 | 0.212255 | 0.933713 | 00:56 | . Better model found at epoch 0 with valid_loss value: 0.3204491138458252. . Better model found at epoch 1 with valid_loss value: 0.271074503660202. Better model found at epoch 2 with valid_loss value: 0.24767258763313293. Better model found at epoch 3 with valid_loss value: 0.22669899463653564. Better model found at epoch 5 with valid_loss value: 0.22069944441318512. Better model found at epoch 6 with valid_loss value: 0.21500901877880096. Better model found at epoch 7 with valid_loss value: 0.21119406819343567. . Gradient CAM . El mapa de activación de clases (en inglés, class activation map o CAM) usa la salida de la última capa confolucional junto con las predicciones del modelo para producir un mapa de valor que nos ayuda a visualizar porqué el modelo tomo la decisión. . Para construir los mapas de activación, vamos a necesitar acceder a las activaciones dentro del modelo. Para ello vamos a usar los hooks que permiten introducir código en los calculos de propagación hacia adelante y hacia atrás del modelo. Es posible agregar un hook a cualquier capa del modelo, y este será ejecutado al calcular las salidas (forward hook) o durante el proceso de backpropagation (backward hook). Un forward hook es una función que toma tres cosas: un modulo (la arquitectura de la red), la entrada del modulo y su salida. Definimos a continuación dos hooks (uno forward y otro backward) que nos permitirán acceder a las activaciones del modelo. Una descripción más detallada de estos hooks puede verse en la librería FastAI. . class Hook(): def __init__(self, m): self.hook = m.register_forward_hook(self.hook_func) def hook_func(self, m, i, o): self.stored = o.detach().clone() def __enter__(self, *args): return self def __exit__(self, *args): self.hook.remove() . class HookBwd(): def __init__(self, m): self.hook = m.register_backward_hook(self.hook_func) def hook_func(self, m, gi, go): self.stored = go[0].detach().clone() def __enter__(self, *args): return self def __exit__(self, *args): self.hook.remove() . A continuación elegimos la clase de la cual queremos extraer el mapa de activación. Para ello vamos a cargar una imagen, lo cargamos como un batch de datos, y vemos la predicción devuelta por el modelo, y utilizar dicha clase. . img = PILImage.create(&#39;IntelImageClassification/test/mountain/20058.jpg&#39;) x, = first(dls.test_dl([img])) print(learn.predict(img)) img . (&#39;mountain&#39;, TensorBase(3), TensorBase([7.3781e-04, 2.4450e-04, 2.0575e-02, 9.7693e-01, 1.2035e-03, 3.1028e-04])) . En este caso, la clase es montaña cuyo índice es 3. . cls = 3 . Ahora para la clase cuyo índice es 3 atrapamos los descriptores de la última capa convolucional y calculamos los gradientes de las salidas de activación de la clase montaña. . with HookBwd(learn.model[0]) as hookg: with Hook(learn.model[0]) as hook: output = learn.model.eval()(x.cuda()) act = hook.stored output[0,cls].backward() grad = hookg.stored . /usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py:1025: UserWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior. warnings.warn(&#34;Using a non-full backward hook when the forward contains multiple autograd Nodes &#34; . Los pesos que nos interesan son la media de los gradientes de los descriptores, y esto lo podemos calcular del siguiente modo. . w = grad[0].mean(dim=[1,2], keepdim=True) cam_map = (w * act[0]).sum(0) . Por último podemos visualizar el mapa del calor usando el siguiente código. . x_dec = TensorImage(dls.train.decode((x,))[0][0]) _,ax = plt.subplots() x_dec.show(ctx=ax) ax.imshow(cam_map.detach().cpu(), alpha=0.6, extent=(0,x.shape[2],x.shape[3],0), interpolation=&#39;bilinear&#39;, cmap=&#39;magma&#39;); . Es posible hacer lo mismo no solo con la última capa convolucional de la red, sino con cualquier otra de las capas, por ejemplo con la penultima capa del modelo. . with HookBwd(learn.model[0][-2]) as hookg: with Hook(learn.model[0][-2]) as hook: output = learn.model.eval()(x.cuda()) act = hook.stored output[0,cls].backward() grad = hookg.stored w = grad[0].mean(dim=[1,2], keepdim=True) cam_map = (w * act[0]).sum(0) . /usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py:1025: UserWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior. warnings.warn(&#34;Using a non-full backward hook when the forward contains multiple autograd Nodes &#34; . Y volvemos a realizar la visualización. . x_dec = TensorImage(dls.train.decode((x,))[0][0]) _,ax = plt.subplots() x_dec.show(ctx=ax) ax.imshow(cam_map.detach().cpu(), alpha=0.6, extent=(0,x.shape[2],x.shape[3],0), interpolation=&#39;bilinear&#39;, cmap=&#39;magma&#39;); .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/04/07/practica9-interpretabilidad.html",
            "relUrl": "/practica/2022/04/07/practica9-interpretabilidad.html",
            "date": " • Apr 7, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Modelos de clasificación de texto basados en mecanismos de atención",
            "content": "En este notebook se muestra cómo crear un modelo de clasificación de texto usando modelos basados en mecanismos de atención mediante la librería HuggingFace, y en concreto mediante la librería blurr que integra HuggingFace con FastAI. . Para esta práctica es necesario el uso de GPU, así que recuerda activar esta opción en Colab. . Librer&#237;as . Comenzamos actualizando la librería FastAI, e instalando las librerías de HuggingFace (llamadas transformers y datasets) y la librería blurr. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uqq !pip install datasets -Uqq !pip install transformers[sentencepiece] -Uqq !pip install git+https://github.com/ohmeow/blurr.git@dev-2.0.0 -Uqq . |████████████████████████████████| 189 kB 4.2 MB/s |████████████████████████████████| 55 kB 3.6 MB/s |████████████████████████████████| 325 kB 3.5 MB/s |████████████████████████████████| 1.1 MB 38.3 MB/s |████████████████████████████████| 134 kB 31.0 MB/s |████████████████████████████████| 212 kB 35.2 MB/s |████████████████████████████████| 67 kB 4.7 MB/s |████████████████████████████████| 127 kB 40.2 MB/s |████████████████████████████████| 94 kB 1.6 MB/s |████████████████████████████████| 271 kB 34.0 MB/s |████████████████████████████████| 144 kB 49.3 MB/s ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts. datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible. |████████████████████████████████| 3.8 MB 4.0 MB/s |████████████████████████████████| 596 kB 45.2 MB/s |████████████████████████████████| 895 kB 48.6 MB/s |████████████████████████████████| 6.5 MB 36.5 MB/s |████████████████████████████████| 1.2 MB 42.8 MB/s |████████████████████████████████| 43 kB 1.4 MB/s |████████████████████████████████| 96 kB 3.8 MB/s Building wheel for ohmeow-blurr (setup.py) ... done Building wheel for seqeval (setup.py) ... done . Cargamos a continuación las librerías que necesitaremos en esta práctica. . from fastai.data.all import * from fastai.learner import * from fastai.losses import CrossEntropyLossFlat from fastai.optimizer import Adam, OptimWrapper, params from fastai.metrics import accuracy, F1Score from fastai.torch_core import * from fastai.torch_imports import * from transformers import AutoModelForSequenceClassification from blurr.data.core import * from blurr.modeling.core import * from blurr.utils import BLURR from datasets import load_dataset,concatenate_datasets . Dataset . Para este ejemplo vamos a usar el dataset Gutenberg Poem Dataset, un dataset para detectar sentimientos en poemas (negativos, positivos, sin impacto, mezcla de positivo y negativo). . Descarga el dataset usando el siguiente comando. . poem_sentiment_dataset = load_dataset(&quot;poem_sentiment&quot;) . Using custom data configuration default Reusing dataset poem_sentiment (/root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099) . Vamos a añadir a nuestro dataset una columna que nos indique si estamos trabajando con el conjunto de entrenamiento o el de validación. Para lo cuál debemos definir la siguiente función. . def add_is_valid_batch_friendly(examples, is_valid=False): return {&quot;is_valid&quot;: [is_valid for txt in examples[&quot;verse_text&quot;]]} . Y ahora añadimos esa información. . poem_sentiment_dataset[&quot;train&quot;] = poem_sentiment_dataset[&quot;train&quot;].map(partial(add_is_valid_batch_friendly,is_valid=False),batched=True) poem_sentiment_dataset[&quot;validation&quot;] = poem_sentiment_dataset[&quot;validation&quot;].map(partial(add_is_valid_batch_friendly,is_valid=True),batched=True) print(poem_sentiment_dataset) print(poem_sentiment_dataset[&quot;train&quot;][0]) . Loading cached processed dataset at /root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099/cache-a5043da3f45ff884.arrow Loading cached processed dataset at /root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099/cache-078c48838227da06.arrow . DatasetDict({ train: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;, &#39;is_valid&#39;], num_rows: 892 }) validation: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;, &#39;is_valid&#39;], num_rows: 105 }) test: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;], num_rows: 104 }) }) {&#39;id&#39;: 0, &#39;verse_text&#39;: &#39;with pale blue berries. in these peaceful shades--&#39;, &#39;label&#39;: 1, &#39;is_valid&#39;: False} . Antes de empezar a entrenar nuestro modelo combinamos los conjuntos de entrenamiento y test. . proc_ds = concatenate_datasets([poem_sentiment_dataset[&quot;train&quot;],poem_sentiment_dataset[&quot;validation&quot;]]) proc_ds . Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;, &#39;is_valid&#39;], num_rows: 997 }) . Entrenando un modelo de clasificaci&#243;n . El proceso a seguir para hacer fine-tuning sobre el modelo de lenguaje de FastAI es análogo al visto en prácticas anteriores. Comenzamos creando un DataBlock a partir de nuestro dataframe. Sin embargo, para llevar a cabo esta tarea tenemos que definirlo a partir de los constructores de la librería Blurr. . En primer lugar definimos la tarea con la que vamos a trabajar que es la clasificación de secuencias de texto. . model_cls = AutoModelForSequenceClassification . A continuación debemos indicar el modelo que vamos a utilizar, ya que la creación de los datablocks es dependiente de esta elección. En nuestro caso usaremo el modelo Bert. . pretrained_model_name = &quot;bert-base-uncased&quot; . Seguidamente debemos crear la configuración de nuesto datablock, para ello vamos a usar la configuración por defecto del modelo que hemos seleccionado y cambiaremos el número de posibles clases de nuestro problema (en este caso 4). . labels = proc_ds.features[&quot;label&quot;].names labels n_labels = len(labels) . Por último generamos varias componentes que son necesarias para entrenar nuestro modelo y que son dependientes del modelo que elijamos: . - La arquitectura del modelo. - La configuración del modelo. - El tokenizer. - El modelo de huggingface. . hf_arch, hf_config, hf_tokenizer,hf_model = BLURR.get_hf_objects( pretrained_model_name,model_cls= model_cls, config_kwargs={&quot;num_labels&quot;: n_labels} ) hf_arch, type(hf_config), type(hf_tokenizer),type(hf_model) . (&#39;bert&#39;, transformers.models.bert.configuration_bert.BertConfig, transformers.models.bert.tokenization_bert_fast.BertTokenizerFast, transformers.models.bert.modeling_bert.BertForSequenceClassification) . Ahora ya podemos construir nuestro datablock para lo cual primero debemos preprocesarlo con el modelo que vamos a usar. Notar que debemos indicar el atributo donde se encuentran las frases de nuestro dataset (en este caso verse_text). . preprocessor = ClassificationPreprocessor(hf_tokenizer,label_mapping=labels,text_attr=&#39;verse_text&#39;) ds = preprocessor.process_hf_dataset(proc_ds) ds . Dataset({ features: [&#39;proc_verse_text&#39;, &#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;, &#39;is_valid&#39;, &#39;label_name&#39;, &#39;verse_text_start_char_idx&#39;, &#39;verse_text_end_char_idx&#39;], num_rows: 997 }) . También debemos identificar los índices de nuestro dataset que pertenecen al conjunto de validación. . val_idxs = [idx for idx,el in enumerate(ds) if el[&quot;is_valid&quot;]==True] min(val_idxs),max(val_idxs) . (892, 996) . Y por fin construimos nuestro datablock. . blocks = ( TextBlock( hf_arch, hf_config, hf_tokenizer, hf_model, is_pretokenized=True, before_batch_kwargs={&quot;labels&quot;:labels}, tok_kwargs={&quot;add_special_tokens&quot;:False} ), CategoryBlock ) dblock = DataBlock( blocks=blocks, get_x=ItemGetter(&#39;verse_text&#39;), get_y=ItemGetter(&#39;label&#39;), splitter=IndexSplitter(val_idxs) ) . Creamos ahora nuestro dataloader. . dls = dblock.dataloaders(ds,bs=16) . Podemos ahora mostrar un batch de este dataloader. . dls.show_batch(dataloaders=dls, max_n=2) . text target . 0 for&#39;twas e&#39;en as a great god&#39;s slaying, and they feared the wrath of the sky ; | 0 | . 1 &quot; what hope wouldst thou hope, o sigurd, ere we kiss, we twain, and depart? &quot; | 3 | . Creamos ahora nuestro Learner. . model = BaseModelWrapper(hf_model) learn = Learner(dls, model, metrics=[accuracy], cbs=[BaseModelCallback], splitter=blurr_splitter ) . Y por último entrenamos el modelo. . learn.fine_tune(10,1e-3) . epoch train_loss valid_loss accuracy time . 0 | 1.128518 | 0.917785 | 0.657143 | 00:05 | . epoch train_loss valid_loss accuracy time . 0 | 1.050082 | 0.924744 | 0.657143 | 00:10 | . 1 | 0.986408 | 0.964888 | 0.657143 | 00:10 | . 2 | 0.830305 | 0.625145 | 0.780952 | 00:10 | . 3 | 0.544306 | 0.568373 | 0.809524 | 00:10 | . 4 | 0.310422 | 0.601602 | 0.847619 | 00:10 | . 5 | 0.181153 | 0.590411 | 0.857143 | 00:10 | . 6 | 0.102145 | 0.958344 | 0.752381 | 00:10 | . 7 | 0.057657 | 0.965625 | 0.761905 | 00:10 | . 8 | 0.031127 | 0.774979 | 0.847619 | 00:10 | . 9 | 0.021683 | 0.779923 | 0.847619 | 00:10 | . Una vez entrenado el modelo podemos guardarlo para el futuro. . export_fname = &#39;seq_class_learn_export&#39; learn.export(fname=f&#39;{export_fname}.pkl&#39;) . Para realizar predicciones debemos usar el método blurr_predict. . learn.blurr_predict(&#39;with pale blue berries. in these peaceful shades--.&#39;) . [{&#39;class_index&#39;: 1, &#39;class_labels&#39;: [0, 1, 2, 3], &#39;label&#39;: &#39;1&#39;, &#39;probs&#39;: [0.000199360991246067, 0.9650265574455261, 0.0011597874108701944, 0.03361422196030617], &#39;score&#39;: 0.9650265574455261}] . Por último, validamos en nuestro conjunto de test. . poem_sentiment_dataset[&quot;test&quot;] = poem_sentiment_dataset[&quot;test&quot;].map(partial(add_is_valid_batch_friendly,is_valid=True),batched=True) proc_ds_test = concatenate_datasets([poem_sentiment_dataset[&quot;train&quot;],poem_sentiment_dataset[&quot;test&quot;]]) ds_test = preprocessor.process_hf_dataset(proc_ds_test) test_idxs = [idx for idx,el in enumerate(ds_test) if el[&quot;is_valid&quot;]==True] dblock_test = DataBlock( blocks=blocks, get_x=ItemGetter(&#39;verse_text&#39;), get_y=ItemGetter(&#39;label&#39;), splitter=IndexSplitter(test_idxs) ) dls_test = dblock_test.dataloaders(ds_test,bs=16) learn.dls = dls_test learn.validate() . (#2) [0.7783738374710083,0.8269230723381042] . Con esto hemos logrado un modelo con una accuracy del 82% (muy superior al 69% logrado en la práctica anterior). .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/03/22/practica8-clasificacion-texto-blurr.html",
            "relUrl": "/practica/2022/03/22/practica8-clasificacion-texto-blurr.html",
            "date": " • Mar 22, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Modelos de clasificación de texto usando self-supervised learning",
            "content": "En este notebook se muestra cómo crear un modelo de clasificación de texto usando la aproximación ULMFit. . En primer lugar es necesario disponer de un modelo de lenguaje entrenado con un dataset de tamaño considerable. En nuestro caso la Wikipedia. Este modelo sirve para conocer los fundamentos del lenguaje con el cual se está trabajando. Sin embargo, a la hora de construir un modelo de clasificación es conveniente que el modelo comprenda el estilo que se usa para escribir esos textos. Dicho estilo puede ser más informal o más técnico que el contenido de la wikipedia. En el caso del dataset IMDb, este va a contener una gran cantidad de nombres de directores, actores, y además el estilo de redacción es más informal que los textos que aparecen en la Wikipedia. Por ello, a partir del modelo de lenguaje de Wikipedia entrenaremos un modelo de lenguaje para IMDb, y a partir de ese modelo de lenguaje construiremos nuestro clasificador. . Afortunadamente la librería FastAI ya proporciona un modelo de lenguaje para la Wikipedia (construir este tipo de modelos puede llevar días), por lo que nos podemos centrar en los otros dos pasos. . Para esta práctica es necesario el uso de GPU, así que recuerda activar esta opción en Colab. . Librer&#237;as . Comenzamos actualizando la librería FastAI y descargando la librería datasets de HuggingFace. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uqq !pip install datasets -Uqq . |████████████████████████████████| 189 kB 4.3 MB/s |████████████████████████████████| 55 kB 2.0 MB/s |████████████████████████████████| 325 kB 4.3 MB/s |████████████████████████████████| 134 kB 34.0 MB/s |████████████████████████████████| 67 kB 1.5 MB/s |████████████████████████████████| 212 kB 38.3 MB/s |████████████████████████████████| 1.1 MB 26.4 MB/s |████████████████████████████████| 127 kB 39.1 MB/s |████████████████████████████████| 271 kB 35.1 MB/s |████████████████████████████████| 144 kB 47.7 MB/s |████████████████████████████████| 94 kB 1.3 MB/s ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts. datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible. . Cargamos a continuación las librerías que necesitaremos en esta práctica que son la parte de procesado de lenguaje natural de la librería fastAI, la librería pandas, y la funcionalidad para cargar datasets de HuggingFace. . import pandas as pd from fastai.text.all import * from datasets import load_dataset . Dataset . Para este ejemplo vamos a usar el dataset Gutenberg Poem Dataset, un dataset para detectar sentimientos en poemas (negativos, positivos, sin impacto, mezcla de positivo y negativo). . Descarga el dataset usando el siguiente comando. . poem_sentiment_dataset = load_dataset(&quot;poem_sentiment&quot;) . Using custom data configuration default . Downloading and preparing dataset poem_sentiment/default (download: 48.70 KiB, generated: 58.53 KiB, post-processed: Unknown size, total: 107.23 KiB) to /root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099... Dataset poem_sentiment downloaded and prepared to /root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099. Subsequent calls will reuse this data. . Carga de datos . Cargamos a continuación el dataset en distintos dataframes de pandas (el formato que puede leer la librería de FastAI). . train_df = poem_sentiment_dataset[&quot;train&quot;].to_pandas() valid_df = poem_sentiment_dataset[&quot;validation&quot;].to_pandas() test_df = poem_sentiment_dataset[&quot;test&quot;].to_pandas() . A continuación procesamos el dataset como vimos en la práctica anterior para tenerlo en el formato adecuado. . train_df[&#39;set&#39;]=False valid_df[&#39;set&#39;]=True train_df = train_df.drop(columns=[&#39;id&#39;],axis=1) valid_df = valid_df.drop(columns=[&#39;id&#39;],axis=1) train_valid_df = pd.concat([train_df,valid_df]) train_valid_df = train_valid_df.rename(columns={&quot;verse_text&quot;: &quot;text&quot;}) . Modelo de lenguaje . El proceso a seguir para hacer fine-tuning sobre el modelo de lenguaje de FastAI es análogo al visto en prácticas anteriores. Comenzamos creando un DataBlock a partir de nuestro dataframe. . db_lm = DataBlock( blocks=TextBlock.from_df(&#39;text&#39;, is_lm=True,max_vocab=100000), # Indicamos que vamos a trabajar con un modelo de lenguaje get_items=ColReader(&#39;text&#39;), # Indicamos donde estará el texto dentro del dataframe splitter=RandomSplitter(0.1) # Partimos el dataset en entrenamiento y validación ) . Creamos ahora nuestro dataloader (esto puede llevar varios segundos). . dls_lm = db_lm.dataloaders(train_valid_df, bs=128, seq_len=80) . Podemos ahora mostrar un batch de este dataloader. Como podemos apreciar, la entrada del modelo es una frase, y la salida es dicha frase desplazada una posición a la derecha. . dls_lm.show_batch(max_n=2) . text text_ . 0 xxbos before the xxunk soul , whose xxunk will xxbos and not be xxunk xxunk to the moon , xxbos so xxunk to me . xxunk , friend , since friend xxbos and _ xxunk _ , with his xxunk , xxunk look , xxbos nor is he , as some xxunk xxunk , xxbos the days pass over me xxbos a hundred xxunk , and xxunk | before the xxunk soul , whose xxunk will xxbos and not be xxunk xxunk to the moon , xxbos so xxunk to me . xxunk , friend , since friend xxbos and _ xxunk _ , with his xxunk , xxunk look , xxbos nor is he , as some xxunk xxunk , xxbos the days pass over me xxbos a hundred xxunk , and xxunk more | . 1 more , had xxunk their leaves and xxunk , xxbos of xxunk &#39;s love and the xxunk of xxunk . xxbos and xxunk are xxunk , and xxunk flame . xxbos &quot; i xxunk xxunk has always held the xxunk . &quot; xxbos all along down &quot; xxunk xxunk ? &quot; xxbos who xxunk in the xxunk - xxunk still ? xxbos xxunk xxunk had xxunk the | , had xxunk their leaves and xxunk , xxbos of xxunk &#39;s love and the xxunk of xxunk . xxbos and xxunk are xxunk , and xxunk flame . xxbos &quot; i xxunk xxunk has always held the xxunk . &quot; xxbos all along down &quot; xxunk xxunk ? &quot; xxbos who xxunk in the xxunk - xxunk still ? xxbos xxunk xxunk had xxunk the xxunk | . Creamos ahora nuestro Learner. . learn = language_model_learner( dls_lm, # El dataloader que usamos AWD_LSTM, # La arquitectura que es la misma usada en la práctica anterior drop_mult=0.3, # Aplicamos dropout para evitar el sobreajuste metrics=[accuracy, Perplexity()] # Como métricas usamos la accuracy y la perplexity. ).to_fp16() . Y por último entrenamos el modelo. . learn.fine_tune(10,base_lr=2e-2) . epoch train_loss valid_loss accuracy perplexity time . 0 | 5.325081 | 5.248910 | 0.093750 | 190.358749 | 00:02 | . epoch train_loss valid_loss accuracy perplexity time . 0 | 5.301597 | 4.874115 | 0.142857 | 130.858353 | 00:02 | . 1 | 5.048782 | 4.420505 | 0.228795 | 83.138260 | 00:02 | . 2 | 4.785182 | 4.009061 | 0.245536 | 55.095131 | 00:02 | . 3 | 4.613196 | 3.922916 | 0.281250 | 50.547634 | 00:02 | . 4 | 4.439808 | 3.853290 | 0.283482 | 47.147942 | 00:02 | . 5 | 4.305257 | 3.711589 | 0.292411 | 40.918758 | 00:01 | . 6 | 4.179667 | 3.591018 | 0.308036 | 36.270988 | 00:01 | . 7 | 4.068951 | 3.525345 | 0.323661 | 33.965485 | 00:02 | . 8 | 3.980177 | 3.500305 | 0.327009 | 33.125561 | 00:02 | . 9 | 3.906196 | 3.494886 | 0.339286 | 32.946529 | 00:02 | . Una vez entrenado el modelo guardamos el encoder que usaremos luego para nuestro modelo de clasificación (esto es análogo a lo que vimos para los modelos de clasificación de imágenes). . learn.save_encoder(&#39;finetuned&#39;) . Entrenando un modelo de clasificaci&#243;n . Pasamos ahora a crear nuestro modelo de clasificación de texto. El proceso será el mismo que el que vimos en la práctica anterior con la diferencia de que antes de empezar a entrenar el modelo cargaremos el encoder guardado en el paso anterior. . Comenzamos definiendo un DataBlock que se creará a partir de nuestro dataframe df. . sentiment_clas = DataBlock( blocks=(TextBlock.from_df(&#39;text&#39;, vocab=dls_lm.vocab), # La entrada del modelo es texto usando el mismo # vocabulario que en el modelo de lenguaje CategoryBlock), #, y la salida una clase get_x=ColReader(&#39;text&#39;), # Indicamos donde estará el texto dentro del dataframe get_y=ColReader(&#39;label&#39;), # Indicamos cómo extraer la clase del dataframe splitter=ColSplitter(&#39;set&#39;) # Partimos el dataset en entrenamiento y validación ) . Ahora definimos nuestro dataloader a partir del DataBlock que acabamos de crear. . dls = sentiment_clas.dataloaders(train_valid_df, bs=64) . Podemos mostrar un batch de nuestro dataloader. . dls.show_batch(max_n=2) . text category . 0 xxbos when i xxunk the xxunk xxunk of xxunk , and the xxunk of mighty xxunk , i do not envy the xxunk , | 3 | . 1 xxbos till , xxunk &#39; xxunk i know , there xxunk xxunk an xxunk xxunk i could lay my xxunk &#39; on , | 2 | . Pasamos ahora a crear nuestro learner usando el método text_classifier_learner al que pasamos como arquitectura de red la arquitectura AWD_LSTM, además aplicamos dropout a nuestro modelo. . callbacks = [ShowGraphCallback(), SaveModelCallback()] learnClass = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy,cbs=callbacks).to_fp16() . Cargamos a continuación el encoder del modelo de lenguaje. . learnClass = learnClass.load_encoder(&#39;finetuned&#39;) . Ahora podemos utilizar toda la funcionalidad que ya vimos para clasificación de imágenes. Por ejemplo, podemos buscar un learning rate adecuado para entrenar nuestro modelo. . learnClass.lr_find() . SuggestedLRs(valley=0.005248074419796467) . Y a continuación aplicar fine tuning. . learnClass.fine_tune(10, 6e-2) . epoch train_loss valid_loss accuracy time . 0 | 1.356869 | 1.046609 | 0.657143 | 00:02 | . Better model found at epoch 0 with valid_loss value: 1.0466091632843018. . epoch train_loss valid_loss accuracy time . 0 | 1.072497 | 0.954486 | 0.657143 | 00:02 | . 1 | 0.982236 | 0.909238 | 0.657143 | 00:02 | . 2 | 0.933094 | 0.953875 | 0.685714 | 00:03 | . 3 | 0.846433 | 1.242218 | 0.542857 | 00:02 | . 4 | 0.762326 | 1.367901 | 0.552381 | 00:02 | . 5 | 0.654452 | 1.145903 | 0.647619 | 00:02 | . 6 | 0.537358 | 1.472025 | 0.590476 | 00:02 | . 7 | 0.447860 | 1.408006 | 0.609524 | 00:02 | . 8 | 0.364009 | 1.425131 | 0.619048 | 00:02 | . 9 | 0.294759 | 1.411824 | 0.628571 | 00:02 | . Better model found at epoch 0 with valid_loss value: 0.9544857740402222. . Better model found at epoch 1 with valid_loss value: 0.9092381000518799. . Ahora podemos usar nuestro modelo para predecir la clase de una nueva frase. . learnClass.predict(&#39;with pale blue berries. in these peaceful shades--.&#39;) . (&#39;2&#39;, TensorText(2), TensorText([0.1746, 0.1666, 0.5807, 0.0781])) . Por último, podemos validar nuestro modelo en el conjunto de test, para lo cuál hay que combinar los dataframes y construir un nuevo dataloader. . test_df[&#39;set&#39;]=True test_df = test_df.drop(columns=[&#39;id&#39;],axis=1) train_test_df = pd.concat([train_df,test_df]) train_test_df = train_test_df.rename(columns={&quot;verse_text&quot;: &quot;text&quot;}) dls_test = sentiment_clas.dataloaders(train_test_df, bs=64) . Modificamos ahora el dataloader de nuestro learner, y procedemos a validar. . learnClass.dls = dls_test learnClass.validate() . Better model found at epoch 0 with valid_loss value: 0.692307710647583. . (#2) [0.8739429712295532,0.692307710647583] . Hemos obtenido un modelo con una accuracy del 69% (un 3% mejor que sin aplicar la técnica de self-supervised learning). .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/03/22/practica7-clasificacion-texto-self-supervised.html",
            "relUrl": "/practica/2022/03/22/practica7-clasificacion-texto-self-supervised.html",
            "date": " • Mar 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Modelos de clasificación de texto",
            "content": "En este notebook se muestra cómo crear un modelo de clasificación de texto usando una variante de una red LSTM implementada en FastAI. . Para esta práctica es necesario el uso de GPU, así que recuerda activar esta opción en Colab. . Librer&#237;as . Comenzamos actualizando la librería FastAI y descargando la librería datasets de HuggingFace. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uqq !pip install datasets -Uqq . Cargamos a continuación las librerías que necesitaremos en esta práctica que son la parte de procesado de lenguaje natural de la librería fastAI, la librería pandas, y la funcionalidad para cargar datasets de HuggingFace. . import pandas as pd from fastai.text.all import * from datasets import load_dataset . Dataset . Para este ejemplo vamos a usar el dataset Gutenberg Poem Dataset, un dataset para detectar sentimientos en poemas (negativos, positivos, sin impacto, mezcla de positivo y negativo). . Descarga el dataset usando el siguiente comando. . poem_sentiment_dataset = load_dataset(&quot;poem_sentiment&quot;) . Using custom data configuration default Reusing dataset poem_sentiment (/root/.cache/huggingface/datasets/poem_sentiment/default/1.0.0/4e44428256d42cdde0be6b3db1baa587195e91847adabf976e4f9454f6a82099) . A continuación mostramos el dataset que hemos descargado. . poem_sentiment_dataset . DatasetDict({ train: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;], num_rows: 892 }) validation: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;], num_rows: 105 }) test: Dataset({ features: [&#39;id&#39;, &#39;verse_text&#39;, &#39;label&#39;], num_rows: 104 }) }) . Podemos ver que el dataset es una estructura DatasetDict que puede verse como un diccionario. El diccionario tiene tres claves que son train, validation y test que indican respectivamente los conjuntos de entrenamiento, validación y test (estas claves pueden variar dependiendo del dataset). Cada uno de estos subconjuntos es un Dataset que puede verse como una lista. Podemos ver por ejemplo la primera frase del conjunto de entrenamiento del siguiente modo. . poem_sentiment_dataset[&quot;train&quot;][0] . {&#39;id&#39;: 0, &#39;label&#39;: 1, &#39;verse_text&#39;: &#39;with pale blue berries. in these peaceful shades--&#39;} . Podemos ver también una descripción del dataset usando el atributo info. . print(poem_sentiment_dataset[&quot;train&quot;].info) . DatasetInfo(description=&#39;Poem Sentiment is a sentiment dataset of poem verses from Project Gutenberg. This dataset can be used for tasks such as sentiment classification or style transfer for poems. n&#39;, citation=&#39;@misc{sheng2020investigating, n title={Investigating Societal Biases in a Poetry Composition System}, n author={Emily Sheng and David Uthus}, n year={2020}, n eprint={2011.02686}, n archivePrefix={arXiv}, n primaryClass={cs.CL} n} n&#39;, homepage=&#39;https://github.com/google-research-datasets/poem-sentiment&#39;, license=&#39;&#39;, features={&#39;id&#39;: Value(dtype=&#39;int32&#39;, id=None), &#39;verse_text&#39;: Value(dtype=&#39;string&#39;, id=None), &#39;label&#39;: ClassLabel(num_classes=4, names=[&#39;negative&#39;, &#39;positive&#39;, &#39;no_impact&#39;, &#39;mixed&#39;], id=None)}, post_processed=None, supervised_keys=None, task_templates=None, builder_name=&#39;poem_sentiment&#39;, config_name=&#39;default&#39;, version=1.0.0, splits={&#39;train&#39;: SplitInfo(name=&#39;train&#39;, num_bytes=48667, num_examples=892, dataset_name=&#39;poem_sentiment&#39;), &#39;validation&#39;: SplitInfo(name=&#39;validation&#39;, num_bytes=5802, num_examples=105, dataset_name=&#39;poem_sentiment&#39;), &#39;test&#39;: SplitInfo(name=&#39;test&#39;, num_bytes=5601, num_examples=104, dataset_name=&#39;poem_sentiment&#39;)}, download_checksums={&#39;https://raw.githubusercontent.com/google-research-datasets/poem-sentiment/master/data//train.tsv&#39;: {&#39;num_bytes&#39;: 40567, &#39;checksum&#39;: &#39;09503a850796736a8e63504ae2c8de983f57dceebc2342ea93a7f7ad06af56d0&#39;}, &#39;https://raw.githubusercontent.com/google-research-datasets/poem-sentiment/master/data//dev.tsv&#39;: {&#39;num_bytes&#39;: 4747, &#39;checksum&#39;: &#39;0770bd7b80e04c92da82e78f9f93ce35d38b334b4830fca2b9b4d7e174f152e5&#39;}, &#39;https://raw.githubusercontent.com/google-research-datasets/poem-sentiment/master/data//test.tsv&#39;: {&#39;num_bytes&#39;: 4556, &#39;checksum&#39;: &#39;a406d87b62a6b7c9615468a8b66e69c027fa8f2f03a4f8f6c79df26c260de620&#39;}}, download_size=49870, post_processing_size=None, dataset_size=60070, size_in_bytes=109940) . Por último, podemos ver las características de nuestro dataset utilizando el atributo features. . poem_sentiment_dataset[&quot;train&quot;].features . {&#39;id&#39;: Value(dtype=&#39;int32&#39;, id=None), &#39;label&#39;: ClassLabel(num_classes=4, names=[&#39;negative&#39;, &#39;positive&#39;, &#39;no_impact&#39;, &#39;mixed&#39;], id=None), &#39;verse_text&#39;: Value(dtype=&#39;string&#39;, id=None)} . Con el comando anterior podemos ver las cuatro clases de nuestro dataset, y los índices que les corresponden. . Carga de datos . Cargamos a continuación el dataset en distintos dataframes de pandas (el formato que puede leer la librería de FastAI). . train_df = poem_sentiment_dataset[&quot;train&quot;].to_pandas() valid_df = poem_sentiment_dataset[&quot;validation&quot;].to_pandas() test_df = poem_sentiment_dataset[&quot;test&quot;].to_pandas() . Podemos ver el contenido del dataset usando el siguiente comando. . train_df . id verse_text label . 0 0 | with pale blue berries. in these peaceful shades-- | 1 | . 1 1 | it flows so long as falls the rain, | 2 | . 2 2 | and that is why, the lonesome day, | 0 | . 3 3 | when i peruse the conquered fame of heroes, and the victories of mighty generals, i do not envy the generals, | 3 | . 4 4 | of inward strife for truth and liberty. | 3 | . ... ... | ... | ... | . 887 887 | to his ears there came a murmur of far seas beneath the wind | 2 | . 888 888 | the one good man in the world who knows me, -- | 1 | . 889 889 | faint voices lifted shrill with pain | 0 | . 890 890 | an&#39;, fust you knowed on, back come charles the second; | 2 | . 891 891 | in the wild glens rough shepherds will deplore | 0 | . 892 rows × 3 columns . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Del dataset nos interesan dos campos: verse_text (que contiene el poema) y label (que contiene el sentimiento). . train_df[&#39;verse_text&#39;] . 0 with pale blue berries. in these peaceful shades-- 1 it flows so long as falls the rain, 2 and that is why, the lonesome day, 3 when i peruse the conquered fame of heroes, and the victories of mighty generals, i do not envy the generals, 4 of inward strife for truth and liberty. ... 887 to his ears there came a murmur of far seas beneath the wind 888 the one good man in the world who knows me, -- 889 faint voices lifted shrill with pain 890 an&#39;, fust you knowed on, back come charles the second; 891 in the wild glens rough shepherds will deplore Name: verse_text, Length: 892, dtype: object . train_df[&#39;label&#39;] . 0 1 1 2 2 0 3 3 4 3 .. 887 2 888 1 889 0 890 2 891 0 Name: label, Length: 892, dtype: int64 . Juntamos ahora nuestro conjunto de entrenamiento y de validación. Para poder diferenciarlos vamos a añadir una columna a cada uno de ellos para indicar al conjunto al que pertenecen. La columna set va a tener dos valores: True si pertenece al conjunto de validación y False si pertenece al conjunto de test. . train_df[&#39;set&#39;]=False valid_df[&#39;set&#39;]=True . También eliminamos la columna id que no va a ser necesaria. . train_df = train_df.drop(columns=[&#39;id&#39;],axis=1) valid_df = valid_df.drop(columns=[&#39;id&#39;],axis=1) . Ahora juntamos ambos datasets. . train_valid_df = pd.concat([train_df,valid_df]) . Por último, hay que renombrar la columna verse_text por text (esto es una restricción de FastAI). . train_valid_df = train_valid_df.rename(columns={&quot;verse_text&quot;: &quot;text&quot;}) train_valid_df . text label set . 0 with pale blue berries. in these peaceful shades-- | 1 | False | . 1 it flows so long as falls the rain, | 2 | False | . 2 and that is why, the lonesome day, | 0 | False | . 3 when i peruse the conquered fame of heroes, and the victories of mighty generals, i do not envy the generals, | 3 | False | . 4 of inward strife for truth and liberty. | 3 | False | . ... ... | ... | ... | . 100 said my companion, &#39;i will show you soon | 2 | True | . 101 but god said | 2 | True | . 102 but if thou do thy best | 2 | True | . 103 so generous to me. farewell, friend, since friend | 1 | True | . 104 let me all risk, and leave the deep heart dumb | 0 | True | . 997 rows × 3 columns . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Entrenando un modelo . El proceso para entrenar un modelo es el mismo que hemos visto para los modelos de clasificación de imágenes y podemos usar toda la funcionalidad vista hasta ahora. Comenzamos definiendo un DataBlock que se creará a partir de nuestro dataframe df. Tendremos que definir también una función que nos indique cuándo un poema es del conjunto de entrenamiento o del de validación. . sentiment_clas = DataBlock( blocks=(TextBlock.from_df(&#39;text&#39;), CategoryBlock), # La entrada del modelo es texto, y la salida una clase get_x=ColReader(&#39;text&#39;), # Indicamos donde estará el texto dentro del dataframe get_y=ColReader(&#39;label&#39;), # Indicamos cómo extraer la clase del dataframe splitter=ColSplitter(&#39;set&#39;) # Partimos el dataset en entrenamiento y validación ) . Ahora definimos nuestro dataloader a partir del DataBlock que acabamos de crear (esto le puede costar unos segundos). . dls = sentiment_clas.dataloaders(train_valid_df, bs=64) . Podemos mostrar un batch de nuestro dataloader. . dls.show_batch(max_n=2) . text category . 0 xxbos when i xxunk the xxunk xxunk of xxunk , and the xxunk of mighty xxunk , i do not envy the xxunk , | 3 | . 1 xxbos till , xxunk &#39; xxunk i know , there xxunk xxunk an xxunk xxunk i could lay my xxunk &#39; on , | 2 | . Pasamos ahora a crear nuestro learner usando el método text_classifier_learner al que pasamos como arquitectura de red la arquitectura AWD_LSTM, además aplicamos dropout a nuestro modelo. . callbacks = [ShowGraphCallback(), SaveModelCallback()] learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy,cbs=callbacks).to_fp16() . Ahora podemos utilizar toda la funcionalidad que ya vimos para clasificación de imágenes. Por ejemplo, podemos buscar un learning rate adecuado para entrenar nuestro modelo. . learn.lr_find() . SuggestedLRs(valley=0.002511886414140463) . Y a continuación aplicar fine tuning. . learn.fine_tune(10, 2e-2) . epoch train_loss valid_loss accuracy time . 0 | 1.432006 | 1.178530 | 0.638095 | 00:02 | . Better model found at epoch 0 with valid_loss value: 1.1785303354263306. . epoch train_loss valid_loss accuracy time . 0 | 1.194728 | 1.150354 | 0.638095 | 00:02 | . 1 | 1.108590 | 1.034699 | 0.657143 | 00:02 | . 2 | 1.015784 | 1.019889 | 0.647619 | 00:02 | . 3 | 0.909297 | 1.137827 | 0.685714 | 00:02 | . 4 | 0.792113 | 1.079932 | 0.666667 | 00:02 | . 5 | 0.691815 | 1.335006 | 0.628571 | 00:02 | . 6 | 0.600908 | 1.133648 | 0.647619 | 00:02 | . 7 | 0.505813 | 1.160434 | 0.666667 | 00:02 | . 8 | 0.426953 | 1.188708 | 0.676190 | 00:02 | . 9 | 0.370063 | 1.186051 | 0.685714 | 00:02 | . Better model found at epoch 0 with valid_loss value: 1.1503543853759766. . Better model found at epoch 1 with valid_loss value: 1.0346990823745728. Better model found at epoch 2 with valid_loss value: 1.0198886394500732. . Ahora podemos usar nuestro modelo para predecir la clase de una nueva frase. . learn.predict(&#39;with pale blue berries. in these peaceful shades--.&#39;) . (&#39;1&#39;, TensorText(1), TensorText([0.1539, 0.4554, 0.1342, 0.2565])) . Por último, podemos validar nuestro modelo en el conjunto de test, para lo cuál hay que combinar los dataframes y construir un nuevo dataloader. . test_df[&#39;set&#39;]=True test_df = test_df.drop(columns=[&#39;id&#39;],axis=1) train_test_df = pd.concat([train_df,test_df]) train_test_df = train_test_df.rename(columns={&quot;verse_text&quot;: &quot;text&quot;}) dls_test = sentiment_clas.dataloaders(train_test_df, bs=64) . Modificamos ahora el dataloader de nuestro learner, y procedemos a validar. . learn.dls = dls_test learn.validate() . Better model found at epoch 0 with valid_loss value: 0.5480769276618958. . (#2) [1.1024993658065796,0.5480769276618958] . Como podemos ver nuestro modelo tiene una accuracy del 66%. En las próximas prácticas veremos cómo mejorarlo. .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/03/22/practica6-clasificacion-texto-basica.html",
            "relUrl": "/practica/2022/03/22/practica6-clasificacion-texto-basica.html",
            "date": " • Mar 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Modelos para datos estructurados",
            "content": "En este notebook se muestra cómo crear un modelo de clasificación para un dataset estructurado que contiene características categóricas usando una red neuronal. Para ello usaremos la librería FastAI. . Aunque para esta práctica no es necesario el uso de GPU, las pruebas serán más rápidas si tienes esta opción activada. . Librer&#237;as . Comenzamos actualizando la librería FastAI. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uq . |████████████████████████████████| 188 kB 10.1 MB/s |████████████████████████████████| 56 kB 2.6 MB/s . Cargamos a continuación las librerías que necesitaremos en esta práctica que son la parte de datos estructurados de la librería fastAI y la librería pandas. . from fastai.tabular.all import * import pandas as pd import random . Dataset . Para este ejemplo vamos a usar el Adult Data Set. Con este dataset se pretende ser capaz de predecir si una persona cobra más de 50000 dolares al año a partir de las siguientes características: . columns = [&#39;age&#39;,&#39;workclass&#39;,&#39;fnlwgt&#39;,&#39;education&#39;, &#39;education-num&#39;,&#39;marital-status&#39;, &#39;occupation&#39;, &#39;relationship&#39;, &#39;race&#39;, &#39;sex&#39;,&#39;capital-gain&#39;,&#39;capital-loss&#39;, &#39;hours-per-week&#39;,&#39;native-country&#39;,&#39;income&#39;] . Vamos a descargar el dataset usando los siguientes comandos. Debemos descargar tanto el conjunto de entrenamiento como el de test. . !wget https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data -O train.csv !wget https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.test -O test.csv . --2022-04-07 10:01:48-- https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data Resolving archive.ics.uci.edu (archive.ics.uci.edu)... 128.195.10.252 Connecting to archive.ics.uci.edu (archive.ics.uci.edu)|128.195.10.252|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 3974305 (3.8M) [application/x-httpd-php] Saving to: ‘train.csv’ train.csv 100%[===================&gt;] 3.79M 3.23MB/s in 1.2s 2022-04-07 10:01:50 (3.23 MB/s) - ‘train.csv’ saved [3974305/3974305] --2022-04-07 10:01:50-- https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.test Resolving archive.ics.uci.edu (archive.ics.uci.edu)... 128.195.10.252 Connecting to archive.ics.uci.edu (archive.ics.uci.edu)|128.195.10.252|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 2003153 (1.9M) [application/x-httpd-php] Saving to: ‘test.csv’ test.csv 100%[===================&gt;] 1.91M 1.85MB/s in 1.0s 2022-04-07 10:01:52 (1.85 MB/s) - ‘test.csv’ saved [2003153/2003153] . Si inspeccionais el fichero de test veremos que la primera línea no proporciona información útil, y además los valores de la columna del salario incluyen un punto. Los siguientes comandos se encargan de eliminar la primera línea del fichero y de eliminar los puntos. . !sed &#39;1d&#39; test.csv &gt; tmpfile; mv tmpfile test.csv . !sed &#39;s/ .//&#39; test.csv &gt; tmpfile; mv tmpfile test.csv . Carga de datos . Al igual que se trabajaba en la asignatura de aprendizaje automático pasamos a cargar ambos datasets. . df_train = pd.read_csv(&#39;train.csv&#39;,header=None,names=columns) df_test = pd.read_csv(&#39;test.csv&#39;,header=None,names=columns) . Para crear un modelo con datos estructurados en FastAI debemos: . Indicar la columna que queremos predecir, es decir la variable dependiente. | Las transformaciones que queremos aplicar a nuestro dataset. | Las características que son categóricas y continuas. | . Nuestra variable dependiente va a ser el salario: . dep_var = &#39;income&#39; . Las transformaciones que vamos a aplicar nuestro dataset son: . Categorizar las variables categoricas de manera que se use un embedding. | Reemplazar aquellos valores que faltan en el dataset por la media del resto de valores de ese descriptor. | Normalizar los datos. | . Esto se consigue definiendo la siguiente lista de transformaciones. . procs = [Categorify, FillMissing,Normalize] . Por último debemos indicar qué variables son continuas (números) o categóricas. De esto se encarga automáticamente la función cont_cat_split. . cont,cat = cont_cat_split(df_train, 1, dep_var=dep_var) . Podemos ver a hora que realmente las variables continuas y categóricas han sido separadas de forma correcta. . cat . [&#39;workclass&#39;, &#39;education&#39;, &#39;marital-status&#39;, &#39;occupation&#39;, &#39;relationship&#39;, &#39;race&#39;, &#39;sex&#39;, &#39;native-country&#39;] . cont . [&#39;age&#39;, &#39;fnlwgt&#39;, &#39;education-num&#39;, &#39;capital-gain&#39;, &#39;capital-loss&#39;, &#39;hours-per-week&#39;] . Entrenando un modelo . El proceso para entrenar un modelo es el mismo que hemos visto para los modelos de clasificación de imágenes y podemos usar toda la funcionalidad vista hasta ahora. Comenzamos definiendo un dataloader usando el método estático from_df de la clase TabularDataLoaders. Como siempre debemos definir un conjunto de validación, para ello debemos indicar los índices del dataset que tomaremos como conjunto de validación. En este caso vamos a tomar un 20% de los índices de manera aleatoria. . dlsTrain = TabularDataLoaders.from_df(df_train,&#39;.&#39;,procs=procs, cat_names=cat,cont_names=cont,y_names=&#39;income&#39;, valid_idx=random.sample(range(0,len(df_train)),int(len(df_train)*0.2)),bs=64) . Ahora definimos nuestro learner que va a ser una red neuronal, a la cual le tenemos que indicar el número de capas y neuronas con las que queremos trabajar. En este caso usaremos una red neuronal con dos capas ocultas la primera con 500 neuronas y la segunda con 250. . learn = tabular_learner(dlsTrain, layers=[500,250],metrics=[accuracy]) . Podemos ver la estructura del modelo que acabamos de construir. . learn.model . TabularModel( (embeds): ModuleList( (0): Embedding(10, 6) (1): Embedding(17, 8) (2): Embedding(8, 5) (3): Embedding(16, 8) (4): Embedding(7, 5) (5): Embedding(6, 4) (6): Embedding(3, 3) (7): Embedding(43, 13) ) (emb_drop): Dropout(p=0.0, inplace=False) (bn_cont): BatchNorm1d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) (layers): Sequential( (0): LinBnDrop( (0): Linear(in_features=58, out_features=500, bias=False) (1): ReLU(inplace=True) (2): BatchNorm1d(500, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) ) (1): LinBnDrop( (0): Linear(in_features=500, out_features=250, bias=False) (1): ReLU(inplace=True) (2): BatchNorm1d(250, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) ) (2): LinBnDrop( (0): Linear(in_features=250, out_features=2, bias=True) ) ) ) . Podemos ver que tenemos un TabularModel con una serie de embeddings. La siguiente celda nos sirve para ver qué es lo que hace un TabularModel. . ??TabularModel . Como hemos dicho tenemos toda la batería de funciones que ya conocemos, así que vamos a buscar el learning rate más adecuado. . learn.lr_find() . SuggestedLRs(valley=0.0006918309954926372) . Pasamos ahora a entrenar nuestro modelo. . learn.fit(10, 1e-3) . epoch train_loss valid_loss accuracy time . 0 | 0.350504 | 0.331476 | 0.843827 | 00:05 | . 1 | 0.322696 | 0.321616 | 0.847205 | 00:05 | . 2 | 0.330329 | 0.316916 | 0.848894 | 00:05 | . 3 | 0.317356 | 0.321670 | 0.846898 | 00:05 | . 4 | 0.322257 | 0.316217 | 0.851198 | 00:05 | . 5 | 0.322551 | 0.320621 | 0.848587 | 00:05 | . 6 | 0.318757 | 0.318485 | 0.851812 | 00:05 | . 7 | 0.325365 | 0.320952 | 0.849048 | 00:05 | . 8 | 0.305683 | 0.318356 | 0.852273 | 00:05 | . 9 | 0.308657 | 0.320151 | 0.850276 | 00:05 | . Evaluaci&#243;n . Hemos logrado una accuracy del 84.50 en el conjunto de validación, pero nos interesa ver el rendimiento de nuestro modelo en el conjunto de test. Para ello debemos primero combinar el conjunto de train y el conjunto de test para crear un dataloader en el que el conjunto de validación esté formado por todos los elementos del conjunto de test. . dfAll = pd.concat([df_train,df_test]) dlsTest = TabularDataLoaders.from_df(dfAll,&#39;.&#39;,procs=procs, cat_names=cat,cont_names=cont,y_names=&#39;income&#39;, valid_idx=list(range(len(df_train)+1,len(dfAll))),bs=64) . Cambiamos ahora el dataloader del learner. . learn.dls=dlsTest . Y procedemos a obtener la accuracy de nuestro modelo en el conjunto de test. . learn.validate() . (#2) [0.3215624988079071,0.8495700359344482] . También podemos usar nuestro modelo para hacer predicciones concretas con un ejemplo usando la función predict esto nos devolverá tres elementos: los datos sobre los que se ha realizado la predicción, la clase, y las probabilidades. . learn.predict(df_test.iloc[0][:-1]) . ( workclass education marital-status occupation relationship race sex 0 5.0 2.0 5.0 8.0 4.0 3.0 2.0 native-country age fnlwgt education-num capital-gain 0 40.0 -0.995675 0.350768 -1.197414 -0.145918 capital-loss hours-per-week income 0 -0.216656 -0.035429 0.0 , tensor(0), tensor([0.9983, 0.0017])) .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/03/14/practica5-datos-estructurados.html",
            "relUrl": "/practica/2022/03/14/practica5-datos-estructurados.html",
            "date": " • Mar 14, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Autoencoder",
            "content": "En este notebook se muestra cómo se puede definir un variational autoencoder. Para ello vamos a utilizar la librería Keras y el dataset MNIST. Pero vamos a ver primero un autoencoder básico. . En esta práctica vamos a hacer un uso intensivo de la GPU, así que es importante activar su uso desde la opción Configuración del cuaderno del menú Editar (esta opción debería estar habilitada por defecto, pero es recomendable que lo compruebes). . Un autoencoder b&#225;sico . El dataset MNIST es un dataset ampliamente utilizado para probar algoritmos de aprendizaje automático. El problema que se intenta resolver con el dataset MNIST consiste en clasificar imágenes en escala de grises de dígitos manuscritos (de tamaño 28x28) en 10 categorías (del 0 al 9). En nuestro caso no vamos a crear un clasificador para el dataset de MNIST sino que lo vamos a utilizar para mostrar cómo podemos usar un auto-encoder para eliminar el ruido de las imágenes. . Comenzamos cargando las librerías necesarias. . import numpy as np import tensorflow as tf from tensorflow import keras from tensorflow.keras import layers from tensorflow.keras import backend as K import warnings warnings.filterwarnings(&quot;ignore&quot;) import matplotlib.pyplot as plt . Dataset . Para entrenar el autoencoder vamos a usar el dataset de MNIST donde los píxeles estarán normalizados entre 0 y 1. . En este caso no nos interesan las etiquetas del dataset, solo las imágenes. . (x_train, _), (x_test, _) = keras.datasets.mnist.load_data() . Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz 11493376/11490434 [==============================] - 1s 0us/step 11501568/11490434 [==============================] - 1s 0us/step . Normalizamos el dataset y lo preparamos para poder alimentar al autoencoder. . x_train = x_train.astype(&#39;float32&#39;) / 255. x_test = x_test.astype(&#39;float32&#39;) / 255. x_train = np.reshape(x_train, (len(x_train), 28, 28, 1)) x_test = np.reshape(x_test, (len(x_test), 28, 28, 1)) . Autoencoder . Pasamos ahora a definir la arquitectura de nuestro autoencoder. Para ello lo primero que debemos hacer es definir la forma que tendrán los datos de entrada de nuestro autoencoder. El dataset MNIST consta de imágenes de tamaño $28 times 28$ en escala de grises, por lo que solo tienen un canal. . input_img = layers.Input(shape=(28,28,1)) . Recordar que un autoencoder consta de un encoder y un decoder. Definimos a continuación nuestro encoder que va a constar de una pila de capas de convolución y de max pooling. Al aplicar el proceso de encoding llegamos a una reprentación final de tamaño (4,4,8) es decir 128 dimensiones, es decir hemos reducido casi a una sexta parte la codificación de nuestras imágenes. . x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(input_img) # Capa de max pooling con filtro de tamaño 2x2 y aplicando padding x = layers.MaxPooling2D((2, 2), padding=&#39;same&#39;)(x) x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(x) encoded = layers.MaxPooling2D((2, 2), padding=&#39;same&#39;)(x) . El decoder se define mediante una pila de capas de convolución y de upsampling (capas con la función inversa que las de pooling). Notar que la entrada de la primera capa del decoder es la salida del encoder. Notar que la arquitectura es simétrica a la del encoder. . x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(encoded) # Capa de upsampling con filtro de tamaño 2x2 y aplicando padding x = layers.UpSampling2D((2, 2))(x) x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(x) x = layers.UpSampling2D((2, 2))(x) decoded = layers.Conv2D(1, (3, 3), activation=&#39;sigmoid&#39;, padding=&#39;same&#39;)(x) . Por último definimos nuestro modelo de autoencoder y lo compilamos. En Keras es necesario compilar un modelo para fijar el optimizador que se utilizará para entrenarlo (en este caso ADAM que es una variante del descenso de gradiente) y la función de pérdida (en este caso la binary crossentropy). . autoencoder = keras.Model(input_img, decoded) autoencoder.compile(optimizer=&#39;adam&#39;, loss=&#39;binary_crossentropy&#39;) . Con la siguiente instrucción podemos mostrar la arquitectura de una red de Keras. . autoencoder.summary() . Model: &#34;model&#34; _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= input_1 (InputLayer) [(None, 28, 28, 1)] 0 conv2d (Conv2D) (None, 28, 28, 32) 320 max_pooling2d (MaxPooling2D (None, 14, 14, 32) 0 ) conv2d_1 (Conv2D) (None, 14, 14, 32) 9248 max_pooling2d_1 (MaxPooling (None, 7, 7, 32) 0 2D) conv2d_2 (Conv2D) (None, 7, 7, 32) 9248 up_sampling2d (UpSampling2D (None, 14, 14, 32) 0 ) conv2d_3 (Conv2D) (None, 14, 14, 32) 9248 up_sampling2d_1 (UpSampling (None, 28, 28, 32) 0 2D) conv2d_4 (Conv2D) (None, 28, 28, 1) 289 ================================================================= Total params: 28,353 Trainable params: 28,353 Non-trainable params: 0 _________________________________________________________________ . También puede ser útil visualizar dicha red. . from keras.utils.vis_utils import plot_model plot_model(autoencoder, to_file=&#39;autoencoder_plot.png&#39;, show_shapes=True, show_layer_names=True) . Vamos ahora a entrenar nuestro modelo para ello usamos el método fit que está disponible para cualquier modelo de Keras. . autoencoder.fit(x_train, x_train, epochs=50, batch_size=128, validation_data=(x_test, x_test)) . Epoch 1/50 469/469 [==============================] - 19s 18ms/step - loss: 0.1155 - val_loss: 0.0767 Epoch 2/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0742 - val_loss: 0.0715 Epoch 3/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0712 - val_loss: 0.0700 Epoch 4/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0697 - val_loss: 0.0686 Epoch 5/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0688 - val_loss: 0.0679 Epoch 6/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0680 - val_loss: 0.0673 Epoch 7/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0675 - val_loss: 0.0667 Epoch 8/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0669 - val_loss: 0.0663 Epoch 9/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0666 - val_loss: 0.0662 Epoch 10/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0662 - val_loss: 0.0657 Epoch 11/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0659 - val_loss: 0.0653 Epoch 12/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0657 - val_loss: 0.0653 Epoch 13/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0655 - val_loss: 0.0649 Epoch 14/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0653 - val_loss: 0.0647 Epoch 15/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0651 - val_loss: 0.0647 Epoch 16/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0649 - val_loss: 0.0645 Epoch 17/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0648 - val_loss: 0.0644 Epoch 18/50 469/469 [==============================] - 9s 19ms/step - loss: 0.0647 - val_loss: 0.0643 Epoch 19/50 469/469 [==============================] - 8s 16ms/step - loss: 0.0645 - val_loss: 0.0645 Epoch 20/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0644 - val_loss: 0.0640 Epoch 21/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0643 - val_loss: 0.0641 Epoch 22/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0642 - val_loss: 0.0638 Epoch 23/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0641 - val_loss: 0.0638 Epoch 24/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0640 - val_loss: 0.0636 Epoch 25/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0640 - val_loss: 0.0635 Epoch 26/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0639 - val_loss: 0.0635 Epoch 27/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0638 - val_loss: 0.0635 Epoch 28/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0638 - val_loss: 0.0634 Epoch 29/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0637 - val_loss: 0.0634 Epoch 30/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0637 - val_loss: 0.0633 Epoch 31/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0636 - val_loss: 0.0632 Epoch 32/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0636 - val_loss: 0.0632 Epoch 33/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0635 - val_loss: 0.0631 Epoch 34/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0635 - val_loss: 0.0631 Epoch 35/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0634 - val_loss: 0.0630 Epoch 36/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0634 - val_loss: 0.0631 Epoch 37/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0634 - val_loss: 0.0630 Epoch 38/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0633 - val_loss: 0.0630 Epoch 39/50 469/469 [==============================] - 7s 15ms/step - loss: 0.0633 - val_loss: 0.0629 Epoch 40/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0633 - val_loss: 0.0629 Epoch 41/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0632 - val_loss: 0.0629 Epoch 42/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0632 - val_loss: 0.0629 Epoch 43/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0632 - val_loss: 0.0629 Epoch 44/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0632 - val_loss: 0.0628 Epoch 45/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0631 - val_loss: 0.0627 Epoch 46/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0631 - val_loss: 0.0628 Epoch 47/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0631 - val_loss: 0.0627 Epoch 48/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0631 - val_loss: 0.0628 Epoch 49/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0630 - val_loss: 0.0626 Epoch 50/50 469/469 [==============================] - 7s 14ms/step - loss: 0.0630 - val_loss: 0.0627 . &lt;keras.callbacks.History at 0x7f0a900f1610&gt; . Vamos a mostrar la reconstrucción de algunos de los dígitos. Al ejecutar la siguiente celda, la primera fila muestra los dígitos originales y la segunda los reconstruidos. . decoded_imgs = autoencoder.predict(x_test) n = 10 plt.figure(figsize=(20, 4)) for i in range(1,n): ax = plt.subplot(2, n, i) plt.imshow(x_test[i].reshape(28, 28)) plt.gray() ax.get_xaxis().set_visible(False) ax.get_yaxis().set_visible(False) ax = plt.subplot(2, n, i + n) plt.imshow(decoded_imgs[i].reshape(28, 28)) plt.gray() ax.get_xaxis().set_visible(False) ax.get_yaxis().set_visible(False) plt.show() . Aplicaci&#243;n a la eliminaci&#243;n de ruido . Vamos a poner ahora a nuestro encoder a trabajar en el problema de la eliminación de ruido. Esto va a ser tan sencillo como entrenar nuestro autoencoder para mapear dígitos con ruido a imágenes limpias. . Para ello, el primer paso es construir nuestro dataset con ruido aplicando un ruido Gaussiano a las imágenes, y luego limitando los valores al rango de 0 a 1. . En primer lugar procedemos a añadir ruido a las imágenes del dataset de MNIST. . noise_factor = 0.5 x_train_noisy = x_train + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_train.shape) x_test_noisy = x_test + noise_factor * np.random.normal(loc=0.0, scale=1.0, size=x_test.shape) x_train_noisy = np.clip(x_train_noisy, 0., 1.) x_test_noisy = np.clip(x_test_noisy, 0., 1.) . Podemos ver a continuación algunas de las imágenes a las que se les ha añadido el ruido. . n = 10 plt.figure(figsize=(20, 2)) for i in range(1, n + 1): ax = plt.subplot(1, n, i) plt.imshow(x_test_noisy[i].reshape(28, 28)) plt.gray() ax.get_xaxis().set_visible(False) ax.get_yaxis().set_visible(False) plt.show() . Autoencoder . Pasamos ahora a definir la arquitectura de nuestro autoencoder. Para ello lo primero que debemos hacer es definir la forma que tendrán los datos de entrada de nuestro autoencoder. El dataset MNIST consta de imágenes de tamaño $28 times 28$ en escala de grises, por lo que solo tienen un canal. . input_img = layers.Input(shape=(28,28,1)) . Recordar que un autoencoder consta de un encoder y un decoder. Definimos a continuación nuestro encoder que va a constar de una pila de capas de convolución y de maxpooling. . x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(input_img) x = layers.MaxPooling2D((2, 2), padding=&#39;same&#39;)(x) x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(x) encoded = layers.MaxPooling2D((2, 2), padding=&#39;same&#39;)(x) . El decoder se define mediante una pila de capas de convolución y de upsampling (capas con la función inversa que las de pooling). Notar que la entrada de la primera capa del decoder es la salida del encoder; además, al igual que antes la arquitectura es simétrica al encoder. . x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(encoded) x = layers.UpSampling2D((2, 2))(x) x = layers.Conv2D(32, (3, 3), activation=&#39;relu&#39;, padding=&#39;same&#39;)(x) x = layers.UpSampling2D((2, 2))(x) decoded = layers.Conv2D(1, (3, 3), activation=&#39;sigmoid&#39;, padding=&#39;same&#39;)(x) . Por último definimos nuestro modelo de autoencoder y lo compilamos. . autoencoder_noise = keras.Model(input_img, decoded) autoencoder_noise.compile(optimizer=&#39;adam&#39;, loss=&#39;binary_crossentropy&#39;) . Con la siguiente instrucción podemos mostrar la arquitectura del nuevo autoencoder. . autoencoder_noise.summary() . Model: &#34;model_1&#34; _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= input_2 (InputLayer) [(None, 28, 28, 1)] 0 conv2d_5 (Conv2D) (None, 28, 28, 32) 320 max_pooling2d_2 (MaxPooling (None, 14, 14, 32) 0 2D) conv2d_6 (Conv2D) (None, 14, 14, 32) 9248 max_pooling2d_3 (MaxPooling (None, 7, 7, 32) 0 2D) conv2d_7 (Conv2D) (None, 7, 7, 32) 9248 up_sampling2d_2 (UpSampling (None, 14, 14, 32) 0 2D) conv2d_8 (Conv2D) (None, 14, 14, 32) 9248 up_sampling2d_3 (UpSampling (None, 28, 28, 32) 0 2D) conv2d_9 (Conv2D) (None, 28, 28, 1) 289 ================================================================= Total params: 28,353 Trainable params: 28,353 Non-trainable params: 0 _________________________________________________________________ . También puede ser útil visualizar dicha red. . plot_model(autoencoder_noise, to_file=&#39;autoencoder_noise_plot.png&#39;, show_shapes=True, show_layer_names=True) . Vamos ahora a entrenar nuestro modelo para ello usamos el método fit que está disponible para cualquier modelo de Keras. . autoencoder_noise.fit(x_train_noisy, x_train, epochs=100, batch_size=128, validation_data=(x_test_noisy, x_test)) . Epoch 1/100 469/469 [==============================] - 8s 15ms/step - loss: 0.1726 - val_loss: 0.1164 Epoch 2/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1134 - val_loss: 0.1092 Epoch 3/100 469/469 [==============================] - 6s 14ms/step - loss: 0.1083 - val_loss: 0.1059 Epoch 4/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1056 - val_loss: 0.1041 Epoch 5/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1037 - val_loss: 0.1021 Epoch 6/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1023 - val_loss: 0.1009 Epoch 7/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1011 - val_loss: 0.0998 Epoch 8/100 469/469 [==============================] - 7s 14ms/step - loss: 0.1001 - val_loss: 0.0990 Epoch 9/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0993 - val_loss: 0.0982 Epoch 10/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0987 - val_loss: 0.0979 Epoch 11/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0983 - val_loss: 0.0976 Epoch 12/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0979 - val_loss: 0.0973 Epoch 13/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0975 - val_loss: 0.0967 Epoch 14/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0971 - val_loss: 0.0972 Epoch 15/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0969 - val_loss: 0.0963 Epoch 16/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0966 - val_loss: 0.0964 Epoch 17/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0964 - val_loss: 0.0958 Epoch 18/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0962 - val_loss: 0.0955 Epoch 19/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0959 - val_loss: 0.0957 Epoch 20/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0958 - val_loss: 0.0954 Epoch 21/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0957 - val_loss: 0.0952 Epoch 22/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0956 - val_loss: 0.0954 Epoch 23/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0954 - val_loss: 0.0951 Epoch 24/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0953 - val_loss: 0.0948 Epoch 25/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0952 - val_loss: 0.0948 Epoch 26/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0951 - val_loss: 0.0953 Epoch 27/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0950 - val_loss: 0.0948 Epoch 28/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0949 - val_loss: 0.0947 Epoch 29/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0949 - val_loss: 0.0945 Epoch 30/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0948 - val_loss: 0.0944 Epoch 31/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0947 - val_loss: 0.0944 Epoch 32/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0947 - val_loss: 0.0945 Epoch 33/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0946 - val_loss: 0.0943 Epoch 34/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0945 - val_loss: 0.0945 Epoch 35/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0945 - val_loss: 0.0944 Epoch 36/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0945 - val_loss: 0.0943 Epoch 37/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0944 - val_loss: 0.0941 Epoch 38/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0944 - val_loss: 0.0941 Epoch 39/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0943 - val_loss: 0.0942 Epoch 40/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0942 - val_loss: 0.0941 Epoch 41/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0943 - val_loss: 0.0942 Epoch 42/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0942 - val_loss: 0.0940 Epoch 43/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0942 - val_loss: 0.0939 Epoch 44/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0941 - val_loss: 0.0941 Epoch 45/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0941 - val_loss: 0.0938 Epoch 46/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0941 - val_loss: 0.0941 Epoch 47/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0941 - val_loss: 0.0941 Epoch 48/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0940 - val_loss: 0.0939 Epoch 49/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0940 - val_loss: 0.0938 Epoch 50/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0939 - val_loss: 0.0939 Epoch 51/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0940 - val_loss: 0.0938 Epoch 52/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0939 - val_loss: 0.0939 Epoch 53/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0938 - val_loss: 0.0939 Epoch 54/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0938 - val_loss: 0.0938 Epoch 55/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0939 - val_loss: 0.0937 Epoch 56/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0938 - val_loss: 0.0938 Epoch 57/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0938 - val_loss: 0.0939 Epoch 58/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0938 - val_loss: 0.0939 Epoch 59/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0937 Epoch 60/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0937 Epoch 61/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0937 Epoch 62/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0936 Epoch 63/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0936 Epoch 64/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0937 - val_loss: 0.0938 Epoch 65/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0937 - val_loss: 0.0937 Epoch 66/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0937 Epoch 67/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0939 Epoch 68/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0936 Epoch 69/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0936 - val_loss: 0.0936 Epoch 70/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0936 Epoch 71/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0938 Epoch 72/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0936 - val_loss: 0.0938 Epoch 73/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0936 Epoch 74/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0936 Epoch 75/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0937 Epoch 76/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0938 Epoch 77/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0937 Epoch 78/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0935 Epoch 79/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0937 Epoch 80/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0935 - val_loss: 0.0936 Epoch 81/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0934 - val_loss: 0.0934 Epoch 82/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0935 - val_loss: 0.0940 Epoch 83/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0942 Epoch 84/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0936 Epoch 85/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0934 - val_loss: 0.0934 Epoch 86/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0934 - val_loss: 0.0936 Epoch 87/100 469/469 [==============================] - 7s 15ms/step - loss: 0.0934 - val_loss: 0.0934 Epoch 88/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0934 Epoch 89/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0935 Epoch 90/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0934 Epoch 91/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0935 Epoch 92/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 93/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 94/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0934 - val_loss: 0.0938 Epoch 95/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 96/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 97/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 98/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 99/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0935 Epoch 100/100 469/469 [==============================] - 7s 14ms/step - loss: 0.0933 - val_loss: 0.0934 . &lt;keras.callbacks.History at 0x7f0a234423d0&gt; . Por último podemos predecir usando el modelo entrenado con las imágenes de test: . decoded_imgs = autoencoder_noise.predict(x_test_noisy) . Y a continuación mostrar el resultado obtenido. . n = 10 plt.figure(figsize=(20, 4)) for i in range(1,n): ax = plt.subplot(2, n, i) plt.imshow(x_test_noisy[i].reshape(28, 28)) plt.gray() ax.get_xaxis().set_visible(False) ax.get_yaxis().set_visible(False) ax = plt.subplot(2, n, i + n) plt.imshow(decoded_imgs[i].reshape(28, 28)) plt.gray() ax.get_xaxis().set_visible(False) ax.get_yaxis().set_visible(False) plt.show() . Variational autoencoder . Como hemos visto en teoría un autoencoder toma una imagen, la mapea a un espacio vectorial subyacente por medio de un encoder, y seguidamente la decodifica a una salida con el tamaño de la imagen original. En la práctica, los autoencoders no son especialmente útiles, y han sido reemplazados por los variational autoencoders (o VAEs). . Un VAE en lugar de comprimir la imagen en un vector fijo en el espacio subyacente, la convierte a los parámetros de una distribución estadística (representada mediante una media y una varianza). Esencialmente, esto significa que asumimos que la imagen original ha sido generada mediante un proceso estadístico, y que la aleatoriedad de dicho proceso debe ser tomada en cuenta a la hora de proceso de codificación y decodificación. . Un VAE usa los parámetros de media y varianza para tomar una muestra aleatoria de un elemento de la distribución, y decodifica dicho elemento de vuelta. Esto hace que mejore la robusted y fuerza a que el espacio subyacente obtenga representaciones significativas (notar que cualquier muestra de la distribución tiene que ser decodificada a una salida valida). . Desde el punto de vista técnico, un VAE funciona del siguiente modo: . Un encoder convierte la entrada en dos parámetros de un espacio subyacente de representaciones que denotaremos por z_mean y z_log_var. | Tomamos una muestra aleatoria z de la distribución normal que asumimos que genera la imagen de entrada mediante la fórmula z = z_mean + exp(z_log_var)*epsilon donde epsilon es un valor aleatorio pequeño. | La muestra z se decodifica. Al tomar epsilon de manera aleatoria y con valor pequeño, el proceso asegura que cada punto que está cerca de la localización subyacente de la imagen puede ser decodificado a algo similar a la imagen de entrada. | Para entrenar un VAE se usan dos funciones de pérdida: una que es la función de pérdida de reconstrucción que fuerza a que las muestras decodificadas se ajusten a las entradas iniciales, y una función de pérdida de regularización que ayuda a una formación correcta de los espacios subyacentes y a que no se produzca sobreajuste. . Capa de Sampling . Lo primero que vamos a definir es una nueva capa encargada de tomar una muestra aleatoria a partir de los valores de z_mean y z_log_var. Para ello debemos definir una nueva clase que hereda de la clase Layer de Keras y definir la función call. . import numpy as np import tensorflow as tf from tensorflow import keras from tensorflow.keras import layers class Sampling(layers.Layer): def call(self, inputs): z_mean, z_log_var = inputs batch = tf.shape(z_mean)[0] dim = tf.shape(z_mean)[1] epsilon = tf.keras.backend.random_normal(shape=(batch, dim)) return z_mean + tf.exp(0.5 * z_log_var) * epsilon . Encoder . El encoder va a ser similar al encoder que vimos para el autoencoder, la principal diferencia es que va a producir dos vectores de salida, z_mean y z_log_var. . latent_dim = 2 encoder_inputs = keras.Input(shape=(28, 28, 1)) x = layers.Conv2D(32, 3, activation=&quot;relu&quot;, strides=2, padding=&quot;same&quot;)(encoder_inputs) x = layers.Conv2D(64, 3, activation=&quot;relu&quot;, strides=2, padding=&quot;same&quot;)(x) x = layers.Flatten()(x) x = layers.Dense(16, activation=&quot;relu&quot;)(x) z_mean = layers.Dense(latent_dim, name=&quot;z_mean&quot;)(x) z_log_var = layers.Dense(latent_dim, name=&quot;z_log_var&quot;)(x) z = Sampling()([z_mean, z_log_var]) encoder = keras.Model(encoder_inputs, [z_mean, z_log_var, z], name=&quot;encoder&quot;) encoder.summary() . Model: &#34;encoder&#34; __________________________________________________________________________________________________ Layer (type) Output Shape Param # Connected to ================================================================================================== input_3 (InputLayer) [(None, 28, 28, 1)] 0 [] conv2d_10 (Conv2D) (None, 14, 14, 32) 320 [&#39;input_3[0][0]&#39;] conv2d_11 (Conv2D) (None, 7, 7, 64) 18496 [&#39;conv2d_10[0][0]&#39;] flatten (Flatten) (None, 3136) 0 [&#39;conv2d_11[0][0]&#39;] dense (Dense) (None, 16) 50192 [&#39;flatten[0][0]&#39;] z_mean (Dense) (None, 2) 34 [&#39;dense[0][0]&#39;] z_log_var (Dense) (None, 2) 34 [&#39;dense[0][0]&#39;] sampling (Sampling) (None, 2) 0 [&#39;z_mean[0][0]&#39;, &#39;z_log_var[0][0]&#39;] ================================================================================================== Total params: 69,076 Trainable params: 69,076 Non-trainable params: 0 __________________________________________________________________________________________________ . Decoder . Ahora podemos definir el decoder, utilizando una arquitectura simétrica al encoder. . latent_inputs = keras.Input(shape=(latent_dim,)) x = layers.Dense(7 * 7 * 64, activation=&quot;relu&quot;)(latent_inputs) x = layers.Reshape((7, 7, 64))(x) x = layers.Conv2DTranspose(64, 3, activation=&quot;relu&quot;, strides=2, padding=&quot;same&quot;)(x) x = layers.Conv2DTranspose(32, 3, activation=&quot;relu&quot;, strides=2, padding=&quot;same&quot;)(x) decoder_outputs = layers.Conv2DTranspose(1, 3, activation=&quot;sigmoid&quot;, padding=&quot;same&quot;)(x) decoder = keras.Model(latent_inputs, decoder_outputs, name=&quot;decoder&quot;) decoder.summary() . Model: &#34;decoder&#34; _________________________________________________________________ Layer (type) Output Shape Param # ================================================================= input_4 (InputLayer) [(None, 2)] 0 dense_1 (Dense) (None, 3136) 9408 reshape (Reshape) (None, 7, 7, 64) 0 conv2d_transpose (Conv2DTra (None, 14, 14, 64) 36928 nspose) conv2d_transpose_1 (Conv2DT (None, 28, 28, 32) 18464 ranspose) conv2d_transpose_2 (Conv2DT (None, 28, 28, 1) 289 ranspose) ================================================================= Total params: 65,089 Trainable params: 65,089 Non-trainable params: 0 _________________________________________________________________ . Por último vamos a definir un nuevo modelo que une nuestro encoder y decoder definidos anteriormente, y definimos nuestra función de pérdida que va a tener en cuenta la función de pérdida de reconstrucción y la función de pérdida de regularización. Para ello debemos definir una nueva clase que herede de Model. . class VAE(keras.Model): def __init__(self, encoder, decoder, **kwargs): super(VAE, self).__init__(**kwargs) self.encoder = encoder self.decoder = decoder self.total_loss_tracker = keras.metrics.Mean(name=&quot;total_loss&quot;) self.reconstruction_loss_tracker = keras.metrics.Mean( name=&quot;reconstruction_loss&quot; ) self.kl_loss_tracker = keras.metrics.Mean(name=&quot;kl_loss&quot;) @property def metrics(self): return [ self.total_loss_tracker, self.reconstruction_loss_tracker, self.kl_loss_tracker, ] def train_step(self, data): with tf.GradientTape() as tape: z_mean, z_log_var, z = self.encoder(data) reconstruction = self.decoder(z) reconstruction_loss = tf.reduce_mean( tf.reduce_sum( keras.losses.binary_crossentropy(data, reconstruction), axis=(1, 2) ) ) kl_loss = -0.5 * (1 + z_log_var - tf.square(z_mean) - tf.exp(z_log_var)) kl_loss = tf.reduce_mean(tf.reduce_sum(kl_loss, axis=1)) total_loss = reconstruction_loss + kl_loss grads = tape.gradient(total_loss, self.trainable_weights) self.optimizer.apply_gradients(zip(grads, self.trainable_weights)) self.total_loss_tracker.update_state(total_loss) self.reconstruction_loss_tracker.update_state(reconstruction_loss) self.kl_loss_tracker.update_state(kl_loss) return { &quot;loss&quot;: self.total_loss_tracker.result(), &quot;reconstruction_loss&quot;: self.reconstruction_loss_tracker.result(), &quot;kl_loss&quot;: self.kl_loss_tracker.result(), } . Entrenamiento . Finalmente, instanciamos el modelo y lo compilamos. Notar que no es necesario definir una función de pérdida de manera explícita ya que la hemos definido anteriormente. Esto supone que a la hora de entrenar el modelo no hará falta proporcionar la salida espera del modelo ya que es la misma que la entrada y de ello se encarga la capa definida anteriormente. . vae = VAE(encoder, decoder) vae.compile(optimizer=keras.optimizers.Adam()) . Podemos ahora entrenar el modelo para lo que vamos a juntar los conjuntos de entrenamiento y test de MNIST. . (x_train, _), (x_test, _) = keras.datasets.mnist.load_data() mnist_digits = np.concatenate([x_train, x_test], axis=0) mnist_digits = np.expand_dims(mnist_digits, -1).astype(&quot;float32&quot;) / 255 vae.fit(mnist_digits, epochs=30, batch_size=128) . Epoch 1/30 547/547 [==============================] - 12s 18ms/step - loss: 258.3222 - reconstruction_loss: 207.3263 - kl_loss: 3.3780 Epoch 2/30 547/547 [==============================] - 10s 18ms/step - loss: 175.8255 - reconstruction_loss: 167.4281 - kl_loss: 5.5007 Epoch 3/30 547/547 [==============================] - 10s 18ms/step - loss: 167.3953 - reconstruction_loss: 160.0686 - kl_loss: 5.8272 Epoch 4/30 547/547 [==============================] - 10s 18ms/step - loss: 162.9637 - reconstruction_loss: 155.8265 - kl_loss: 6.1042 Epoch 5/30 547/547 [==============================] - 10s 18ms/step - loss: 159.7077 - reconstruction_loss: 153.3320 - kl_loss: 6.2538 Epoch 6/30 547/547 [==============================] - 10s 18ms/step - loss: 158.1543 - reconstruction_loss: 151.6510 - kl_loss: 6.3135 Epoch 7/30 547/547 [==============================] - 10s 18ms/step - loss: 156.9544 - reconstruction_loss: 150.2694 - kl_loss: 6.3696 Epoch 8/30 547/547 [==============================] - 10s 18ms/step - loss: 155.9744 - reconstruction_loss: 149.1816 - kl_loss: 6.4029 Epoch 9/30 547/547 [==============================] - 10s 18ms/step - loss: 154.6804 - reconstruction_loss: 148.4061 - kl_loss: 6.4388 Epoch 10/30 547/547 [==============================] - 10s 18ms/step - loss: 154.5413 - reconstruction_loss: 147.5961 - kl_loss: 6.4629 Epoch 11/30 547/547 [==============================] - 10s 18ms/step - loss: 153.7180 - reconstruction_loss: 147.1163 - kl_loss: 6.4786 Epoch 12/30 547/547 [==============================] - 10s 18ms/step - loss: 153.2216 - reconstruction_loss: 146.5846 - kl_loss: 6.4871 Epoch 13/30 547/547 [==============================] - 10s 18ms/step - loss: 152.5861 - reconstruction_loss: 146.1002 - kl_loss: 6.4937 Epoch 14/30 547/547 [==============================] - 10s 18ms/step - loss: 152.2902 - reconstruction_loss: 145.7991 - kl_loss: 6.5250 Epoch 15/30 547/547 [==============================] - 10s 18ms/step - loss: 151.8982 - reconstruction_loss: 145.4320 - kl_loss: 6.5198 Epoch 16/30 547/547 [==============================] - 10s 18ms/step - loss: 151.8144 - reconstruction_loss: 145.0116 - kl_loss: 6.5122 Epoch 17/30 547/547 [==============================] - 10s 18ms/step - loss: 151.3430 - reconstruction_loss: 144.8974 - kl_loss: 6.5174 Epoch 18/30 547/547 [==============================] - 10s 18ms/step - loss: 151.0552 - reconstruction_loss: 144.5603 - kl_loss: 6.5250 Epoch 19/30 547/547 [==============================] - 10s 18ms/step - loss: 150.9264 - reconstruction_loss: 144.3094 - kl_loss: 6.5371 Epoch 20/30 547/547 [==============================] - 10s 18ms/step - loss: 149.9879 - reconstruction_loss: 143.9915 - kl_loss: 6.5339 Epoch 21/30 547/547 [==============================] - 10s 18ms/step - loss: 150.5420 - reconstruction_loss: 143.8894 - kl_loss: 6.5456 Epoch 22/30 547/547 [==============================] - 10s 18ms/step - loss: 149.8986 - reconstruction_loss: 143.6472 - kl_loss: 6.5409 Epoch 23/30 547/547 [==============================] - 10s 18ms/step - loss: 149.7602 - reconstruction_loss: 143.5481 - kl_loss: 6.5314 Epoch 24/30 547/547 [==============================] - 10s 18ms/step - loss: 150.0828 - reconstruction_loss: 143.3013 - kl_loss: 6.5392 Epoch 25/30 547/547 [==============================] - 10s 18ms/step - loss: 149.4021 - reconstruction_loss: 143.1110 - kl_loss: 6.5467 Epoch 26/30 547/547 [==============================] - 10s 18ms/step - loss: 149.6587 - reconstruction_loss: 142.8784 - kl_loss: 6.5507 Epoch 27/30 547/547 [==============================] - 10s 18ms/step - loss: 149.4968 - reconstruction_loss: 142.8175 - kl_loss: 6.5572 Epoch 28/30 547/547 [==============================] - 10s 18ms/step - loss: 148.9915 - reconstruction_loss: 142.6800 - kl_loss: 6.5604 Epoch 29/30 547/547 [==============================] - 10s 18ms/step - loss: 149.2337 - reconstruction_loss: 142.4957 - kl_loss: 6.5624 Epoch 30/30 547/547 [==============================] - 10s 18ms/step - loss: 149.0440 - reconstruction_loss: 142.3415 - kl_loss: 6.5585 . &lt;keras.callbacks.History at 0x7f09ae6fe910&gt; . Una vez que el modelo se ha entrenado, podemos usar el decoder para convertir puntos aleatorios del espacio subyacente en imágenes. . import matplotlib.pyplot as plt def plot_latent_space(vae, n=30, figsize=15): # display a n*n 2D manifold of digits digit_size = 28 scale = 1.0 figure = np.zeros((digit_size * n, digit_size * n)) # linearly spaced coordinates corresponding to the 2D plot # of digit classes in the latent space grid_x = np.linspace(-scale, scale, n) grid_y = np.linspace(-scale, scale, n)[::-1] for i, yi in enumerate(grid_y): for j, xi in enumerate(grid_x): z_sample = np.array([[xi, yi]]) x_decoded = vae.decoder.predict(z_sample) digit = x_decoded[0].reshape(digit_size, digit_size) figure[ i * digit_size : (i + 1) * digit_size, j * digit_size : (j + 1) * digit_size, ] = digit plt.figure(figsize=(figsize, figsize)) start_range = digit_size // 2 end_range = n * digit_size + start_range pixel_range = np.arange(start_range, end_range, digit_size) sample_range_x = np.round(grid_x, 1) sample_range_y = np.round(grid_y, 1) plt.xticks(pixel_range, sample_range_x) plt.yticks(pixel_range, sample_range_y) plt.xlabel(&quot;z[0]&quot;) plt.ylabel(&quot;z[1]&quot;) plt.imshow(figure, cmap=&quot;Greys_r&quot;) plt.show() plot_latent_space(vae) . La cuadrícula anterior muestra una distribución continua de los dígitos de las distintas clases, y se puede ver cómo un dígito se transforma en otro al seguir un camino a través del espacio subyacente. Notar que hay direcciones subyacentes que tienen significado (como cuatri-ficar o uni-ficar). . Por último podemos ver los clústeres del espacio subyacente asociados a cada clase. . def plot_label_clusters(vae, data, labels): # display a 2D plot of the digit classes in the latent space z_mean, _, _ = encoder.predict(data) plt.figure(figsize=(12, 10)) plt.scatter(z_mean[:, 0], z_mean[:, 1], c=labels) plt.colorbar() plt.xlabel(&quot;z[0]&quot;) plt.ylabel(&quot;z[1]&quot;) plt.set_cmap(&#39;viridis&#39;) plt.show() (x_train, y_train), _ = keras.datasets.mnist.load_data() x_train = np.expand_dims(x_train, -1).astype(&quot;float32&quot;) / 255 plot_label_clusters(vae, x_train, y_train) .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/02/28/practica4-autoencoder.html",
            "relUrl": "/practica/2022/02/28/practica4-autoencoder.html",
            "date": " • Feb 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Segmentación semántica",
            "content": "En este notebook se muestra cómo crear un modelo de segmentación semántica usando la arquitectura U-net incluida en la librería FastAI. . En esta práctica vamos a hacer un uso intensivo de la GPU, así que es importante activar su uso desde la opción Configuración del cuaderno del menú Editar (esta opción debería estar habilitada por defecto, pero es recomendable que lo compruebes). . Librer&#237;as . Comenzamos actualizando la librería FastAI. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install fastai -Uq . Cargamos a continuación las librerías que necesitaremos en esta práctica. . from fastai.basics import * from fastai.vision import models from fastai.vision.all import * from fastai.metrics import * from fastai.data.all import * from fastai.callback import * from pathlib import Path import random . Dataset . Para esta práctica vamos a usar como dataset el proporcionado en el trabajo Deep neural networks for grape bunch segmentation in natural images from a consumer‑grade camera. Este dataset dedicado a la segmentación de racimos de uva consta de 66 imágenes de entrenamiento y 14 de test con 5 categorías: background, leaves, wood, pole, y grape. Los siguientes comandos descargan y descomprimen dicho dataset. En este notebook vamos a usar solo dos clases: background y grape. . %%capture !wget https://www.dropbox.com/s/uknzc914w311web/dataset.zip?dl=1 -O dataset.zip !unzip dataset.zip . Vamos a explorar el contenido de este dataset. Para ello vamos a crear un objeto Path que apunta al directorio que acabamos de crear. . path=Path(&#39;dataset/&#39;) . Como en la práctica anterior, podemos ver el contenido de este directorio usando el comando ls(). . path.ls() . Si exploráis el directorio podréis ver que hay dos carpetas llamadas Images y Labels. La carpeta Images contiene las imágenes del dataset, y la carpeta Labels contiene las en forma de máscara. Para cada imagen, hay un fichero de anotación siguiendo la siguiente nomenclatura: si la imagen se llama color_xxx.jpg, su fichero de anotación es gt_xxx.png. El dataset está partido en entrenamiento y test como puede verse en las carpetas Images y Labels. Además, se proporcionan dos ficheros txt que van a contener las clases de los objetos que utilizaremos en esta práctica. El fichero codes.txt contiene solo dos clases (background y grape), mientras que el fichero codesAll.txt contiene todas las posibles clases. . (path/&#39;Images&#39;).ls() . (path/&#39;Images/train&#39;).ls() . (path/&#39;Labels/train&#39;).ls() . Definiciones previas . El proceso para entrenar nuestro modelo va a ser similar al visto en la práctica 1 para crear un modelo de clasificación. Sin embargo, para cargar nuestro dataset será necesario dar unas definiciones previas. Estas definiciones son necesarias para ajustar la carga del datos a la estructura de nuestro dataset. . En primer lugar vamos a definir los paths donde se van a encontrar nuestras imágenes y sus etiquetas. . path_images = path/&quot;Images&quot; path_labels = path/&quot;Labels&quot; . A continuación definimos el nombre que va a tener nuestra carpeta de test. . test_name = &quot;test&quot; . Seguidamente definimos una función que dado el path de una imagen nos devuelve el path de su anotación. . def get_y_fn (x): return Path(str(x).replace(&quot;Images&quot;,&quot;Labels&quot;).replace(&quot;color&quot;,&quot;gt&quot;).replace(&quot;.jpg&quot;,&quot;.png&quot;)) . Seguidamente cargamos las clases que pueden tener los píxeles de nuestra imágenes y lo almacenamos en una lista codes. . codes = np.loadtxt(path/&#39;codes.txt&#39;, dtype=str) . codes . Podemos ahora ver alguna de las imágenes de nuestro dataset. . img_f = path_images/&#39;train/color_206.jpg&#39; img = PILImage.create(img_f) img.show(figsize=(5, 5)) . Y también la anotación asociada. . mask = PILMask.create(get_y_fn(img_f)) mask.show(figsize=(5, 5), alpha=1) . Como podemos ver en la imagen anterior tenemos una máscara donde cada tipo de objeto de nuestra imagen tiene un color distinto. . Partici&#243;n del dataset . Como en cualquier problema de machine learning debemos partir nuestro dataset en entrenamiento y test. En nuestro caso los datos ya están separados por lo que vamos a definir una función que nos permite diferenciarlos gracias a la estructura de carpetas que usamos. . def ParentSplitter(x): return Path(x).parent.name==test_name . Data augmentation . Al igual que con los modelos definidos en prácticas anteriores podemos usar técnicas de aumento de datos, para lo que usaremos la librería Albumentations. Recordar que dichas transformaciones no deben aplicarse solo a la imagen sino también a su anotación. Para ello vamos a definir una clase que hereda de la clase ItemTransform y que nos va a permitir realizar transformaciones sobre pares (imagen,máscara). . La clase ItemTransform tiene un método encodes que es el encargado de realizar la transformación sobre su entrada x que en este caso será un par (imagen,máscara). Además el constructor de la clase que vamos a definir recibirá como parámetro las transformaciones a aplicar. . from albumentations import ( Compose, OneOf, ElasticTransform, GridDistortion, OpticalDistortion, HorizontalFlip, Rotate, Transpose, CLAHE, ShiftScaleRotate ) class SegmentationAlbumentationsTransform(ItemTransform): split_idx = 0 def __init__(self, aug): self.aug = aug def encodes(self, x): img,mask = x aug = self.aug(image=np.array(img), mask=np.array(mask)) return PILImage.create(aug[&quot;image&quot;]), PILMask.create(aug[&quot;mask&quot;]) . En nuestro caso vamos a utilizar solo flips horizontales, rotaciones, y una operación que aplica una pequeña distorsión a la imagen. Dichas transformaciones se aplicarán de manera secuencia y de manera aleatoria. . transforms=Compose([HorizontalFlip(p=0.5), Rotate(p=0.40,limit=10),GridDistortion() ],p=1) . Por último construimos un objeto de la clase definida anteriormente. . transformPipeline=SegmentationAlbumentationsTransform(transforms) . También va a ser necesario realizar una transformación adicional sobre las máscaras. Las máscaras contienen píxeles con 7 valores distintos (255: grape, 150: leaves, 76: pole, 74: pole, 29: wood, 25: wood, 0: background). Como vamos a trabajar únicamente con las clases grape y background, los píxeles del resto de clases deberán estar a 0 (es decir los vamos a considerar como background). Además, los números de las clases deben ser 0,1,2,... Es por esto que es necesario cambiar todos los píxeles con valor 255 a valor 1. Para realizar estas transformaciones definimos la siguiente clase. . class TargetMaskConvertTransform(ItemTransform): def __init__(self): pass def encodes(self, x): img,mask = x #Convert to array mask = np.array(mask) mask[mask!=255]=0 # Change 255 for 1 mask[mask==255]=1 # Back to PILMask mask = PILMask.create(mask) return img, mask . Dataloader . Ya estamos listos para definir nuestro DataBlock y seguidamente nuestro DataLoader. Nuestro DataBlock se define del siguiente modo. . trainDB = DataBlock(blocks=(ImageBlock, MaskBlock(codes)), get_items=partial(get_image_files,folders=[&#39;train&#39;]), get_y=get_y_fn, splitter=RandomSplitter(valid_pct=0.2), item_tfms=[Resize((480,640)), TargetMaskConvertTransform(), transformPipeline], batch_tfms=Normalize.from_stats(*imagenet_stats) ) . Vamos a explicar cada una de las componentes anteriores: . blocks=(ImageBlock, MaskBlock(codes)). En este caso tenemos que la entrada de nuestro modelo va a ser una imagen (representada mediante un ImageBlock) y su salida es una máscara (representado mediante MaskBlock) cuyos posibles valores son aquellos proporcionados por la lista de clases almacenada en la variable codes. | get_items=partial(get_image_files,folders=[&#39;train&#39;]). El parámetro get_items sirve para indicar cómo cargar los datos de nuestro dataset. Para esto vamos a usar la función get_image_files que devuelve los paths de las imágenes que se encuentran dentro de la carpeta folders (en nuestro caso la carpeta train). | get_y=get_y_fn. El parámetro get_y sirve para indicar cómo obtener la anotación asociada con una entrada (recordar que una entrada va a ser una imagen definida a partir de su path). Para esto tenemos la función get_y_fn definida anteriormente. | splitter=RandomSplitter(valid_pct=0.2). Como siempre debemos partir nuestro dataset para tener un conjunto de validación de cara a seleccionar nuestros hiperparámetros. En este caso partimos el conjunto de entrenamiento usando un porcentaje 80/20. | item_tfms=[Resize((480,640)), TargetMaskConvertTransform(), transformPipeline]. En el parámetro item_tfms indicamos las transformaciones que vamos a aplicar a nuestras imágenes y sus correspondientes máscaras. Además de las explicadas anteriormente vamos a reescalar las imágenes al tamaño 480x640. | batch_tfms=Normalize.from_stats(*imagenet_stats). En el parámetro batch_tfms indicamos las transformaciones que se realizan a nivel de batch. En este caso como en nuestro modelo utilizaremos un backbone preentrenado en ImageNet debemos normalizar las imágenes para que tengan la escala de esas imágenes. | . Con las explicaciones anteriores en sencillo comprender como definimos el siguiente DataBlock que nos servirá para evaluar nuestros modelos en el conjunto de test. . testDB = DataBlock(blocks=(ImageBlock, MaskBlock(codes)), get_items=partial(get_image_files,folders=[&#39;train&#39;,&#39;test&#39;]), get_y=get_y_fn, splitter=FuncSplitter(ParentSplitter), item_tfms=[Resize((480,640)), TargetMaskConvertTransform(), transformPipeline], batch_tfms=Normalize.from_stats(*imagenet_stats) ) . Ahora ya podemos definir nuestros Dataloaders indicando el path donde se encuentran las imágenes y el batch size que vamos a utilizar. . bs = 4 trainDLS = trainDB.dataloaders(path_images,bs=bs) testDLS = testDB.dataloaders(path_images,bs=bs) . Como siempre es conveniente mostrar un batch para comprobar que se están cargando los datos correctamente. . trainDLS.show_batch(vmin=0,vmax=1,figsize=(12, 9)) . Definici&#243;n de modelo . Ya podemos definir nuestro modelo y entrenarlo como hemos hecho en prácticas anteriores. Para ello vamos a crear un Learner mediante la función unet_learner a la cual le tenemos que proporcionar el DataLoader el backbone que vamos a utilizar (en este caso usaremos un modelo Resnet-18) y las métricas Dice y Jaccard que emplearemos para evaluar nuestro modelo. . learn = unet_learner(trainDLS,resnet18,metrics=[Dice(),JaccardCoeff()]).to_fp16() . Por último entrenamos nuestro modelo. . learn.fit_one_cycle(20,3e-3) . Una vez entrenado el modelo lo vamos a guardar para usarlo posteriormente. Lo primero que hacemos es extraer el modelo del Learner y caragarlo en la CPU. . aux=learn.model aux=aux.cpu() . Ahora vamos a guardarlo, para lo cual es necesario cargar una imagen que le servirá como referencia para realizar las transformaciones necesarias. Para ello es necesario normalizar la imagen para que sigan el estándar de ImageNet. . import torchvision.transforms as transforms img = PILImage.create(path_images/&#39;train/color_206.jpg&#39;) transformer=transforms.Compose([transforms.Resize((480,640)), transforms.ToTensor(), transforms.Normalize( [0.485, 0.456, 0.406], [0.229, 0.224, 0.225])]) img=transformer(img).unsqueeze(0) img=img.cpu() traced_cell=torch.jit.trace(aux, (img)) traced_cell.save(&quot;unet.pth&quot;) . Evaluando el modelo . Al igual que vimos para los modelos de clasificación, la métrica mostrada durante el proceso de entrenamiento se refiere al conjunto de validación, mientras que nos interesa saber el resultado obtenido para el conjunto de test. . Para ello debemos modificar el dataloader del objeto Learn que hemos entrenado anteriormente. . learn.dls = testDLS . Por último evaluamos nuestro modelo usando el método validate(). En este caso el método validate() devuelve tres valores, el valor de la pérdida, y el valor de las métricas definidas anteriormente con respecto al conjunto de test. . learn.validate() . Inferencia . Vamos a ver cómo usar el modelo ante una nueva imagen. Para ello lo primero que vamos a hacer es cargar el modelo. El modelo inicialmente lo cargaremos en la CPU, pero posteriormente si hay una GPU disponible la usaremos para inferencia. . device = torch.device(&quot;cuda&quot; if torch.cuda.is_available() else &quot;cpu&quot;) model = torch.jit.load(&quot;unet.pth&quot;) model = model.cpu() model.eval() . El siguiente paso es cargar la imagen, para lo que usaremos la librería PIL. . import PIL . img = PIL.Image.open(&#39;dataset/Images/test/color_154.jpg&#39;) . La siguiente instrucción permite mostrar la imagen que acabamos de cargar. . img . Ya estaríamos listos para relizar las predicciones sobre la imagen. Sin embargo, cabe recordar que primero debemos reescalar las imágenes y normalizarlas. . import torchvision.transforms as transforms def transform_image(image): my_transforms = transforms.Compose([transforms.ToTensor(), transforms.Normalize( [0.485, 0.456, 0.406], [0.229, 0.224, 0.225])]) image_aux = image return my_transforms(image_aux).unsqueeze(0).to(device) . El siguiente paso consiste en transformar la imagen. . image = transforms.Resize((480,640))(img) tensor = transform_image(image=image) . Ahora ya podemos realizar pasarle el objeto construido anteriormente al modelo para realizar la predicción. . model.to(device) with torch.no_grad(): outputs = model(tensor) outputs = torch.argmax(outputs,1) . Ahora almacenamos el resultado en un array y convertimos el índice asociado con la clase grape (que era 1) al valor 255. . mask = np.array(outputs.cpu()) mask[mask==1]=255 . La predicción devuelta por el modelo es un vector de tamaño 480x640 por lo que tendremos que ponerla en forma de matriz. . mask=np.reshape(mask,(480,640)) . Con esto ya podemos mostrar la máscara generada. . Image.fromarray(mask.astype(&#39;uint8&#39;)) . Podemos compararla con la máscara real. . PIL.Image.open(&#39;dataset/Labels/test/gt_154.png&#39;) . Como vemos el modelo se aproxima bastante, pero la segmentación no es excesivamente buena. En la práctica veremos cómo crear mejores modelos. .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/02/22/practica3-segmentacion-semantica.html",
            "relUrl": "/practica/2022/02/22/practica3-segmentacion-semantica.html",
            "date": " • Feb 22, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Detector de objetos",
            "content": "En este notebook se muestra cómo crear un modelo de detección de objetos usando la arquitectura Faster R-CNN. Para crear nuestro modelo vamos a utilizar la librería IceVision que es una librería para crear modelos de detección usando FastAI. . En esta práctica vamos a hacer un uso intensivo de la GPU, así que es importante activar su uso desde la opción Configuración del cuaderno del menú Editar (esta opción debería estar habilitada por defecto, pero es recomendable que lo compruebes). . Librer&#237;as . Comenzamos descargando la librería IceVision. Al finalizar la instalación deberás reiniciar el kernel (menú Entorno de ejecución -&gt; Reiniciar Entorno de ejecución). . !pip install icevision[all] -Uq . A continuación, cargamos aquellas librerías que son necesarias. . from icevision.all import * . Dataset . Para esta práctica vamos a usar como ejemplo el Fruit Images for Object Detection dataset. Este dataset consta de 240 imágenes de entrenamiento y 60 de test con tres categorías: manzanas, plátanos y naranjas. Los siguientes comandos descargan y descomprimen dicho dataset. . %%capture !wget https://www.dropbox.com/s/1dsfd5rrmg3riqj/fruits.zip?dl=1 -O fruits.zip !unzip fruits.zip . Vamos a explorar el contenido de este dataset. Para ello vamos a crear un objeto Path que apunta al directorio que acabamos de crear. . path=Path(&#39;fruits&#39;) . Como en la práctica anterior, podemos ver el contenido de este directorio usando el comando ls(). . path.ls() . Si exploráis el directorio podréis ver que hay dos carpetas (llamadas train y test), y que cada una de ellas contiene dos carpetas, llamadas images y labels. La carpeta images contiene las imágenes del dataset, y la carpeta labels contiene las anotaciones en formato Pascal VOC. Para cada imagen, hay un fichero xml con el mismo nombre que contiene su extensión. . Icevision . El proceso para crear y evaluar un modelo de IceVision consta de los siguientes pasos: . Crear un parser para leer las imágenes y las anotaciones. | Construir objetos record a partir de los parser. | Crear los datasets a partir de los records y los aumentos que queramos aplicar. | Crear un dataloader a partir de los datasets. | Definir un modelo. | Entrenar el modelo. | Guardar el modelo. | Usar el modelo para inferencia | Vamos a ver en detalle cada uno de estos pasos. . Parser . IceVision proporciona una serie de parsers definidos por defecto para leer las anotaciones en distintos formatos entre ellos Pascal VOC y COCO. También es posible crear parsers propios. A pesar de que existe un parser para el formato de nuestra anotación, vamos a ver cómo crear un parser desde cero. . El primer paso es crear una plantilla para nuestro dataset. . template_record = ObjectDetectionRecord() . A continuación IceVision proporciona el método generate_template que nos proporciona los métodos que debemos implementar. . Parser.generate_template(template_record) . A continuación vamos a implementar nuestra clase con cada uno de esos métodos. . import xml.etree.ElementTree as ET class MyParser(Parser): &quot;&quot;&quot;Definimos el constructor de nuestra clase que va a recibir cuatro parámetros: - La plantilla definida previamente. - El path al directorio donde se encuentran las imágenes. - El path al directorio donde se encuentran las anotaciones. - Un objeto class_map con las clases que tiene nuestro dataset. &quot;&quot;&quot; def __init__(self, template_record,path_img,path_anotaciones,class_map): super().__init__(template_record=template_record) self.path_img = path_img self.path_anotaciones= path_anotaciones self.class_map = class_map &quot;&quot;&quot;El método iter escanea el directorio de anotaciones y nos devuelve el nombre de cada fichero. Dicho nombre será utilizado por el resto de método&quot;&quot;&quot; def __iter__(self): with os.scandir(self.path_anotaciones) as ficheros: for fichero in ficheros: yield fichero.name &quot;&quot;&quot;El método len nos indica el número de elementos de los que consta nuestro dataset&quot;&quot;&quot; def __len__(self): return len(self.path_anotaciones) &quot;&quot;&quot;A partir del nombre del fichero de anotación, record_id debe devolver el identificador (o nombre) de la imagen asociada&quot;&quot;&quot; def record_id(self, o) -&gt; Hashable: #o --&gt; nombre de la anotación return o[:o.find(&#39;.&#39;)] &quot;&quot;&quot;A continuación deberíamos definir el método parse_fields, pero vamos a definir una serie de definiciones previas que nos serán útiles&quot;&quot;&quot; &quot;&quot;&quot;El método prepare recibe el nombre de un fichero de anotación como parámetro y realiza una serie de labores de preprocesamiento sobre dicho fichero de anotación. En este caso lo procesa usando la funcionalidad de la librería para trabajar con xml&quot;&quot;&quot; def prepare(self, o): tree = ET.parse(str(self.path_anotaciones)+&#39;/&#39;+str(o)) self._root = tree.getroot() &quot;&quot;&quot;El método filepath a partir del nombre del fichero de anotación devuelve el path de la imagen asociada&quot;&quot;&quot; def filepath(self, o) -&gt; Union[str, Path]: path=Path(f&quot;{o[:o.find(&#39;.&#39;)]}.jpg&quot;) return self.path_img / path &quot;&quot;&quot;La función image_width_height devuelve el ancho y el alto de una imagen a partir del nombre del fichero de anotación&quot;&quot;&quot; def image_width_height(self, o) -&gt; Tuple[int, int]: return get_img_size(str(self.path_img)+&#39;/&#39;+f&quot;{o[:o.find(&#39;.&#39;)]}.jpg&quot;) &quot;&quot;&quot;La función labels recibe el nombre del fichero de anotación y debe devolver una lista con los identificadores de las clases contenidas en dicho fichero.&quot;&quot;&quot; def labels(self, o) -&gt; List[int]: labels = [] for object in self._root.iter(&quot;object&quot;): label = object.find(&quot;name&quot;).text label_id = self.class_map.get_by_name(label) labels.append(label) return labels &quot;&quot;&quot;La función bboxes recibe el nombre del fichero de anotación y debe devolver una lista de bboxes que son las anotaciones contenidas en dicho fichero. El formato de cada BBOX es xmin, ymin, xmax, ymax.&quot;&quot;&quot; def bboxes(self, o) -&gt; List[BBox]: def to_int(x): return int(float(x)) bboxes = [] for object in self._root.iter(&quot;object&quot;): xml_bbox = object.find(&quot;bndbox&quot;) xmin = to_int(xml_bbox.find(&quot;xmin&quot;).text) ymin = to_int(xml_bbox.find(&quot;ymin&quot;).text) xmax = to_int(xml_bbox.find(&quot;xmax&quot;).text) ymax = to_int(xml_bbox.find(&quot;ymax&quot;).text) bbox = BBox.from_xyxy(xmin, ymin, xmax, ymax) bboxes.append(bbox) return bboxes &quot;&quot;&quot;Definimos a continuación el método parse_fields para cada elemento de nuestro dataset proporcionamos: - El path a la imagen. - El tamaño de la imagen. - El mapa de clases. - Los rectángulos que indican cada uno de los objetos de la imagen. - Las etiquetas de cada uno de los objetos de la imagen.&quot;&quot;&quot; def parse_fields(self, o: Any, record: BaseRecord, is_new: bool): self.prepare(o) if is_new: record.set_filepath(self.filepath(o)) record.set_img_size(self.image_width_height(o)) record.detection.set_class_map(self.class_map) record.detection.add_bboxes(self.bboxes(o)) record.detection.add_labels(self.labels(o)) . Una vez que hemos definido nuestra clase para parsear las anotaciones de nuestro dataset, vamos a construir los objetos correspondientes. . Lo primero que tenemos que hacer es construir nuestro class_map que es un objeto de la clase ClassMap y que contiene las clases de objetos de nuestro dataset. . class_map = ClassMap([&#39;apple&#39;,&#39;banana&#39;,&#39;orange&#39;]) . A continuación definimos nuestros parsers. Uno para leer el conjunto de entrenamiento, y otro para el de test. . trainPath = Path(&#39;fruits&#39;)/&#39;train&#39; parserTrain = MyParser(template_record, trainPath/&#39;images&#39;, trainPath/&#39;labels&#39;, class_map) testPath = Path(&#39;fruits&#39;)/&#39;test&#39; parserTest = MyParser(template_record,testPath/&#39;images&#39;, testPath/&#39;labels&#39;, class_map) . Records . Un record es un diccionario que contiene todos los campos parseados definidos en el proceso anterior. Mientras que cada parser es específico para cada anotación concreta, los objetos record tienen una estructura común. Para construir los records a partir de nuestros objetos parser debemos llamar al método parse e indicarle cómo se van a repartir los datos que se lean. . Como siempre, vamos a dividir nuestro dataset en tres partes: un conjunto de entrenamiento, uno de validación y uno de test. Por lo tanto tendremos que construir tres records llamados train_records, valid_records y test_records. Los records de entrenamiento y validación los construiremos a partir de los datos de entrenamiento usando una partición 90/10. Mientras que el record de test se construye a partir del conjunto de test usándolo completamente. . train_records, valid_records = parserTrain.parse(RandomSplitter((0.9, 0.1))) test_records,_= parserTest.parse(RandomSplitter((1.0, 0.0))) . Transforms . Las transformaciones o aumentos son una parte fundamental cuando estamos construyendo modelos en visión por computador. IceVision incluye por defecto la librería Albumentations que nos proporciona una gran cantidad de transformaciones. Además es capaz de gestionar los cambios en la anotación que son necesarios cuando se trabaja en detección de objetos. . IceVision proporciona una función muy útil que es tfms.A.aug_tfms con una gran cantidad de transformaciones. Además podemos añadirle cualquier otra transformación de Albumentations. . Para nuestro ejemplo vamos a usar las transformaciones sugeridas por defecto por IceVision y aplicar la técnica de presizing vista para clasificación de imágenes; además será necesario normalizar las imágenes al rango de las imágenes de ImageNet. Notar que las transformaciones se aplicarán solo al conjunto de entrenamiento. Para los conjuntos de validación y test únicamente tendremos que escalar la imagen al tamaño adecuado y normalizarla. . presize = 512 size = 384 . train_tfms = tfms.A.Adapter( [*tfms.A.aug_tfms(size=size, presize=presize), tfms.A.Normalize()] ) valid_tfms = tfms.A.Adapter([*tfms.A.resize_and_pad(size), tfms.A.Normalize()]) . Dataset . La clase Dataset sirve para combinar los records y las transformaciones. Debemos crear un dataset para nuestro conjunto de entrenamiento, otro para el conjunto de validación y otro para el de test. . train_ds = Dataset(train_records, train_tfms) valid_ds = Dataset(valid_records, valid_tfms) test_ds = Dataset(test_records, valid_tfms) . Una vez creados dichos datasets podemos mostrar imágenes de los mismos. En concreto la siguiente instrucción muestra imágenes del conjunto de entrenamiento a las cuáles se les han aplicado una serie de transformaciones. Es conveniente ejecutar esta visualización para comprobar que todo está correcto. . samples = [train_ds[0] for _ in range(3)] show_samples(samples, ncols=3, class_map=class_map, denormalize_fn=denormalize_imagenet) . DataLoaders . Al igual que vimos para los modelos de clasificación de FastAI, el último paso es crear nuestros DataLoaders a partir de los datasets construidos anteriormente. Notar que cada modelo tiene su propio DataLoader. En este caso como vamos a crear un modelo de Faster RCNN debemos usar las siguientes instrucciones. . train_dl = models.torchvision.faster_rcnn.train_dl(train_ds, batch_size=8, num_workers=0, shuffle=True) valid_dl = models.torchvision.faster_rcnn.valid_dl(valid_ds, batch_size=8, num_workers=0, shuffle=False) test_dl = models.torchvision.faster_rcnn.valid_dl(test_ds, batch_size=8, num_workers=0, shuffle=False) . Entrenando el modelo . Para crear y entrenar nuestro modelo debemos crear un objeto Learner de FastAI. Para crear dicho objeto, lo primero que debemos hacer es construir un modelo con la arquitectura que queremos usar, en este caso Faster RCNN y con un backbone que es Resnet18. . model = models.torchvision.faster_rcnn.model(backbone=models.torchvision.faster_rcnn.backbones.resnet18_fpn(pretrained=True), num_classes=len(class_map)) . A continuación debemos proporcionar las métricas que queremos utilizar para evaluar el modelo. Por el momento la única métrica soportada por IceVision es el mAP de COCO, por lo tanto utilizaremos dicha métrica. . metrics = [COCOMetric(metric_type=COCOMetricType.bbox)] . Ya estamos listos para construir nuestro Learner. Notar que dicho objeto se construye de manera distinta dependiendo de la arquitectura que queramos utilizar. . learn = models.torchvision.faster_rcnn.fastai.learner(dls=[train_dl, valid_dl], model=model, metrics=metrics) . Ahora podemos entrenar nuestro modelo utilizando la técnica de fine tuning que vimos en clase. . learn.fine_tune(10,freeze_epochs=2) . Una vez finalizado el entrenamiento podemos guardar nuestro modelo del siguiente modo. . torch.save(model.state_dict(),&#39;fasterRCNNFruits.pth&#39;) . Evaluando el modelo . Al igual que vimos para los modelos de clasificación, la métrica mostrada durante el proceso de entrenamiento se refiere al conjunto de validación, mientras que nos interesa saber el resultado obtenido para el conjunto de test. . Para ello, lo primero que debemos hacer es construir un nuevo dataloader del siguiente modo, indicando que el conjunto de validación es el de test. . newdl = fastai.DataLoaders(models.torchvision.faster_rcnn.fastai.convert_dataloader_to_fastai(train_dl), models.torchvision.faster_rcnn.fastai.convert_dataloader_to_fastai(test_dl)).to(&#39;cuda&#39;) . A continuación modificamos el dataloader del objeto Learn que hemos entrenado anteriormente. . learn.dls = newdl . Por último evaluamos nuestro modelo usando el método validate(). Al igual que en el caso de los modelos de clasificación el método validate() devuelve dos valores, el valor de la pérdida y el valor de la métrica asociada al conjunto de validación, que en este caso es el de test. . learn.validate() . Inferencia . Vamos a ver cómo usar el modelo ante una nueva imagen. Para ello lo primero que vamos a hacer es cargar dicho modelo. Para ello debemos crear un modelo con la arquitectura que utilizamos (Faster RCNN en nuestro caso), y posteriormente cargar el modelo. . model = models.torchvision.faster_rcnn.model(backbone=models.torchvision.faster_rcnn.backbones.resnet18_fpn, num_classes=len(class_map)) state_dict = torch.load(&#39;fasterRCNNFruits.pth&#39;) model.load_state_dict(state_dict) . El siguiente paso es cargar la imagen, para lo que usaremos la librería PIL. . import PIL . img = PIL.Image.open(&#39;fruits/test/images/mixed_25.jpg&#39;) . La siguiente instrucción permite mostrar la imagen que acabamos de cargar. . img . Ya estaríamos listos para relizar las predicciones sobre la imagen. Sin embargo, cabe recordar que primero debemos reescalar las imágenes y normalizarlas. . infer_tfms = tfms.A.Adapter([*tfms.A.resize_and_pad(size),tfms.A.Normalize()]) . Ya podemos realizar las predicciones mediante el método end2end_detect. Este método, que depende de la arquitectura que hayamos utilizado, recibe como parámetros la imagen sobre la que queremos realizar las predicciones, las transformaciones a aplicar, el modelo (movido a la CPU), el mapa de clases, y el nivel de confianza mínimo para realizar la predicción. . pred_dict = models.torchvision.faster_rcnn.end2end_detect(img, infer_tfms, model.to(&quot;cpu&quot;), class_map=class_map, detection_threshold=0.5) pred_dict[&#39;img&#39;] .",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/02/20/practica2-deteccion-de-objetos.html",
            "relUrl": "/practica/2022/02/20/practica2-deteccion-de-objetos.html",
            "date": " • Feb 20, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Clasificación de imágenes",
            "content": "En este notebook se muestra cómo crear un modelo de clasificación de imágenes utilizando las técnicas vistas en clase. . Para crear nuestro clasificador de imágenes vamos a utilizar la librería fastAI. Este notebook está inspirado en el curso asociado a dicha librería. . En esta práctica vamos a hacer un uso intensivo de la GPU, así que es importante activar su uso desde la opción Configuración del cuaderno del menú Editar (esta opción debería estar habilitada por defecto, pero es recomendable que lo compruebes). . Librer&#237;as . Comenzamos descargando la última versión de la librería FastAI. Al finalizar la instalación se reiniciará el kernel de manera automática. . !pip install fastai -Uq import IPython IPython.Application.instance().kernel.do_shutdown(True) . A continuación, cargamos aquellas librerías que son necesarias. . from fastai.vision.all import * . Dataset . Para esta práctica vamos a usar como ejemplo de dataset el Intel Image Classification dataset. Este dataset consta de imágenes de tamaño 150x150 distribuidas en 6 categorías (buildings, forest, glacier, mountain, sea, street). Los siguientes comandos descargan y descomprimen dicho dataset. . !wget https://unirioja-my.sharepoint.com/:u:/g/personal/joheras_unirioja_es/EbMVHqKMSnNHh6I0-4-QWdQBlVDKz2Uz5Ky73zc5tHGofg?download=1 -O IntelImageClassification.zip !unzip IntelImageClassification.zip . Vamos a explorar el contenido de este dataset. Para ello vamos a crear un objeto Path que apunta al directorio que acabamos de crear. . path = Path(&#39;IntelImageClassification/&#39;) . Con el objeto path podemos utilizar funciones como ls(). . path.ls() . Vemos que nuestro dataset consta de dos carpetas llamadas train y test. Recordar que es importante hacer la partición del dataset en dos conjuntos distintos, para luego poder evaluarlo correctamente. Podemos ahora crear objetos path que apunten respectivamente a nuestro conjunto de entrenamiento y a nuestro conjunto de test. . trainPath = path/&#39;train&#39; testPath = path/&#39;test&#39; . Veamos el contenido de cada uno de estos directorios. . trainPath.ls() . testPath.ls() . Podemos ver que tanto la carpeta train como la carpeta test contienen 6 subcarpetas, una por cada clase del dataset. . Cargando el dataset . A continuación vamos a mostrar cómo se carga el dataset para poder posteriormente crear nuestro modelo. Este proceso se hace en dos pasos. Primero se construye un objeto DataBlock y a continuación se construye un objeto DataLoader a partir del DataBlock. Tienes más información sobre estos objetos en la documentación de FastAI. . Datablock . Comenzamos construyendo el objeto DataBlock. A continuación explicaremos cada una de sus componentes. . db = DataBlock(blocks = (ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2,seed=42), get_y=parent_label, item_tfms = Resize(256), batch_tfms=aug_transforms(size=128,min_scale=0.75)) . Vamos a ver las distintas componentes del DataBlock. . El atributo blocks sirve para indicar el tipo de nuestros datos. Como estamos en un problema de clasificación de imágenes, tenemos que la entrada de nuestro modelo será una imagen, es decir un ImageBlock, y la salida será una categoría, es decir un CategoryBlock. Por lo tanto indicamos que blocks = (ImageBlock, CategoryBlock). | El atributo get_items debe proporcionar una función para leer los datos. En nuestro caso queremos leer una serie de imágenes que estarán almacenadas en un path. Para ello usamos la función get_image_files. Puedes ver qué hace exactamente esta función ejecutando el comando ??get_image_files. | El atributo splitter nos indica cómo partir el dataset. Daros cuenta que tenemos un conjunto de entrenamiento y uno de test, pero para entrenar nuestro modelo y probar distintas alternativas nos interesa usar un conjunto de validación, que lo vamos a tomar de forma aleatorea a partir de nuestro conjunto de entrenamiento usando un 20% del mismo. Para ello usaremos el objeto RandomSplitter(valid_pct=0.2,seed=42). | El atributo get_y sirve para indicar cómo extraemos la clase a partir de nuestros datos. La función get_image_files nos proporciona una lista con los paths a las imágenes de nuestro dataset. Si nos fijamos en dichos paths, la clase de cada imagen viene dada por la carpeta en la que está contenida, por lo que podemos usar el método parent_label para obtener la clase de la misma. | . Por último, los atributos item_tfms y batch_tfms sirven para aplicar una técnica conocida como preescalado (o presizing). . Preescalado (presizing) . El preescalado es una técnica de aumento de datos diseñada para minimizar la destrucción de datos. Para poder sacar el máximo partido a las GPUs, es necesario que todas las imágenes tengan el mismo tamaño, por lo que es común reescalar todas las imágenes al mismo tamaño. . Sin embargo, hay varias técnicas de aumento que si se aplican después de reescalar pueden introducir zonas vacías o degradar los datos. Por ejemplo, si rotamos una imagen 45 grados, los bordes de la imagen quedan vacíos, lo que no le sirve para nada al modelo. Para solucionar este problema se utiliza la técnica del preescalado que consta de dos pasos. . Las imágenes se reescalan a una dimensión mayor que la que se usará realmente para entrenar. | Se aplican las distintas técnicas de aumento, y finalmente se reescala al tamaño deseado. | El punto clave es el primer paso que sirve para crear imágenes con el suficiente espacio para luego poder aplicar los distintos aumentos. Tienes más información sobre esta técnica en el libro de FastAI. . En nuestro caso estamos haciendo un escalado inicial a tamaño 256 para luego aplicar un escalado a tamaño 128. Notar que no sólo estamos aplicando un escalado como técnica de aumento de datos, sino que también gracias a la función aug_transforms se aplican otros aumentos. . Data augmentation . Como hemos visto en clase, la técnica de aumento de datos (o data augmentation) nos proporciona un método para aumentar el tamaño de nuestro dataset. FastAI ofrece una serie de aumentos por defecto que se pueden configurar mediante el método aug_transforms. Veamos a continuación que aumentos ofrece dicha función. . ??aug_transforms . Como vemos la función anterior puede ser utilizada para fijar distintos aumentos y la probabilidad con la que queremos que se apliquen. En caso de querer otro tipo de transformaciones que no estén incluidas por defecto en dicha función podemos usar la librería Albumentations como se explica en la documentación de FastAI. . Dataloader . Pasamos ahora a construir nuestro DataLoader que se construye a partir del DataBlock construido anteriormente indicándole el path donde se encuentran nuestras imágenes. Además podemos configurar el DataLoader indicándole el tamaño del batch que queremos utilizar. Al trabajar con GPUs es importante que usemos batches de tamaño 2^n para optimizar el uso de la GPU. . dls = db.dataloaders(trainPath,bs=128) . A continuación mostramos un batch de nuestro DataLoader. Es conveniente comprobar que realmente se han cargado las imágenes y sus anotaciones de manera correcta. . dls.show_batch() . Entrenando el modelo . Pasamos ahora a construir y entrenar nuestro modelo. Pero antes vamos a definir una serie de callbacks. . Callbacks . En ocasiones nos interesa cambiar el comportamiento por defecto que tiene el proceso de entrenamiento, por ejemplo para guardar los mejores pesos que se han producido hasta ese momento. El procedimiento usado por FastAI para incluir dicha funcionalidad son los callbacks que sirven para modificar el proceso de entrenamiento. La lista completa de callbacks incluida en FastAI, está disponible en su documentación. En nuesto caso sólo vamos a utilizar 3 callbacks: . ShowGraphCallback: este callback sirve para mostrar las curvas de entrenamiento y validación. | EarlyStoppingCallback: este callback nos permite aplicar la técnica de early stopping. Para ello debemos indicarle la métrica que queremos monitorizar para saber cuándo parar, y la paciencia (es decir cuántas épocas dejamos que el modelo continúe entrenando si no ha habido mejora). | SaveModelCallback: este callback guarda el mejor modelo encontrado durante el proceso de entrenamiento y lo carga al final del mismo. Como vamos a crear un modelo usando la arquitectura resnet18 conviene que indiquemos esto en el nombre del modelo. También sería conveniente indicar el nombre del dataset para no confundirlos. | . callbacks = [ ShowGraphCallback(), EarlyStoppingCallback(patience=3), SaveModelCallback(fname=&#39;modelResnet18&#39;) ] . Además de estos tres callbacks utilizaremos otro que nos servirá para acelerar el entrenamiento de nuestros modelos usando mixed precision. . Construyendo el modelo . A continuación construimos nuestro modelo, un objeto de la clase Learner, utilizando el método cnn_learner que toma como parámetros el DataLoader, la arquitectura que queremos entrenar (en nuestro caso un resnet18), la métrica que usaremos para evaluar nuestro modelo (esta evaluación se hace sobre el conjunto de validación, y en nuestro caso será la accuracy), y los callbacks. Notar que en la instrucción anterior incluimos la transformación del modelo a mixed precision. . learn = cnn_learner(dls,resnet18,metrics=accuracy,cbs=callbacks).to_fp16() . Notar que internamente la función cnn_learner hace varias cosas con la arquitectura que le pasamos como parámetro (en este caso resnet18). Dicha arquitectura fue entrenada inicialmente para el problema de ImageNet, por lo que ante una nueva imagen, su salida sería la predicción en una de las 1000 clases de ImageNet. Sin embargo, internamente la función cnn_learner elimina las últimas capas de dicha arquitectura, y las reemplaza con una adecuada para nuestro problema concreto. . Antes de entrenar nuestro modelo debemos encontrar un learning rate adecuado. . Learning rate finder . Como hemos visto en teoría, el trabajo de Leslie Smith proporciona un método para encontrar un learning rate adecuado para entrenar nuestro modelo. Dicho learning rate lo puedes encontrar con la función lr_find(). . learn.lr_find() . La función anterior no solo nos devuelve un gráfico sino que nos sugiere dos valores lr_min y lr_steep. La recomendación es utilizar el valor de lr_steep, para entrenar el modelo. . Fine-tuning . A continuación vamos a aplicar la técnica de fine tuning. En FastAI esto es tan sencillo como llamar al método fine_tune del objeto Learner. Este método recibe dos parámetros principalmente, el número de épocas (10 en nuestro caso) y el learning rate. El proceso que sigue para entrenar consiste en: . Congelar todas las capas salvo la última, y entrenar esa parte del modelo durante una época. | Descongelar la red, y entrenar el modelo por el número de épocas indicado. | Al ejecutar la siguiente instrucción aparecerá una tabla donde podrás ver la pérdida para el conjunto de entrenamiento, la pérdida para el conjunto de validación, y la accuracy para el conjunto de validación. . learn.fine_tune(10,base_lr=1e-3) . Al final del entrenamiento se ha guardado un modelo en la carpeta models que contiene el mejor modelo construido. . Path(&#39;models&#39;).ls() . Para su uso posterior, es conveniente exportar el modelo. Para ello es necesario en primer lugar convertir el modelo a fp32. . learn.to_fp32() learn.export() . Podemos ver que dicho modelo se ha guardado en el mismo directorio donde nos encontramos. . Path().ls(file_exts=&#39;.pkl&#39;) . Evaluando el modelo . Una vez tenemos entrenado nuestro modelo nos interesa saber: . ¿Qué tal funciona en el conjunto de test? | ¿Qué errores comete? | ¿Cómo se utiliza para predecir la clase ante nuevas imágenes? | Evaluando el modelo en el conjunto de test . Para poder evaluar nuestro modelo en el conjunto de test debemos crear un nuevo DataBlock y un nuevo DataLoader. La única diferencia con el DataBlock utilizado previamente es que para hacer la partición del dataset usamos un objeto de la clase GrandparentSplitter indicando que el conjunto de validación es nuestro conjunto de test. En el caso del DataLoader, la diferencia con el definido anteriormente es que cambiamos la ruta al path. . dbTest = DataBlock(blocks = (ImageBlock, CategoryBlock), get_items=get_image_files, splitter=GrandparentSplitter(valid_name=&#39;test&#39;), get_y=parent_label, item_tfms = Resize(256), batch_tfms=aug_transforms(size=128,min_scale=0.75)) dlsTest = dbTest.dataloaders(path,bs=128) . Para trabajar con este dataloader debemos modificar nuestro objeto Learner. En concreto su atributo dls. . learn.dls = dlsTest . Ahora podemos evaluar nuestro modelo usando el método validate. . learn.validate() . El método validate nos devuelve dos valores: el valor de la función de pérdida, y el valor de nuestra métrica (la accuracy en este caso). Por lo que podemos ver que el modelo tiene una accuracy en el conjunto de test de aproximadamente un 82% (esto puede variar dependiendo de la ejecución). . Interpretaci&#243;n del modelo . Hemos visto que nuestro modelo obtiene una accuracy aproximada (puede variar debido a la aleatoriedad del proceso de entrenamiento) de un 92% en el conjunto de validación. Pero nos interesa conocer los errores que se cometen y si estos son razonables. Para ello podemos construir un objeto ClassificationInterpretation a partir de nuestro Learner y mostrar la matriz de confusión asociada. Recordar que hemos cambiado el DataLoader en el paso anterior, porque es conveniente volver al dataloader usado inicialmente. . learn.dls=dls . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix(figsize=(12,12),dpi=60) . Si nos fijamos, la mayoría de errores se producen porque el modelo confunde imágenes de la clase street con imágenes de la clase buildings; e imágenes de la clase mountain con la clase glacier. Podemos ver aquellas en las que se produce un mayor error del siguiente modo. Normalmente utilizaríamos el comando interp.plot_top_losses(10,nrows=2), pero como se muestra en el foro de FastAI, esto produce un comportamiento anómalo que será corregido en próximas versiones, por lo que tenemos que usar la solución que proporcionan en dicho hilo que consiste en definir la siguiente función. . def plot_top_losses_fix(interp, k, largest=True, **kwargs): losses,idx = interp.top_losses(k, largest) if not isinstance(interp.inputs, tuple): interp.inputs = (interp.inputs,) if isinstance(interp.inputs[0], Tensor): inps = tuple(o[idx] for o in interp.inputs) else: inps = interp.dl.create_batch(interp.dl.before_batch([tuple(o[i] for o in interp.inputs) for i in idx])) b = inps + tuple(o[idx] for o in (interp.targs if is_listy(interp.targs) else (interp.targs,))) x,y,its = interp.dl._pre_show_batch(b, max_n=k) b_out = inps + tuple(o[idx] for o in (interp.decoded if is_listy(interp.decoded) else (interp.decoded,))) x1,y1,outs = interp.dl._pre_show_batch(b_out, max_n=k) if its is not None: #plot_top_losses(x, y, its, outs.itemgot(slice(len(inps), None)), L(self.preds).itemgot(idx), losses, **kwargs) plot_top_losses(x, y, its, outs.itemgot(slice(len(inps), None)), interp.preds[idx], losses, **kwargs) #TODO: figure out if this is needed #its None means that a batch knows how to show itself as a whole, so we pass x, x1 #else: show_results(x, x1, its, ctxs=ctxs, max_n=max_n, **kwargs) . Una vez definida dicha función ya podemos ver los mayores errores. . plot_top_losses_fix(interp,10,nrows=2) . A partir de la ejecución anterior, podemos ver que hay algunas imágenes que están mal anotadas, y otras en las que es comprensible por qué se está produciendo el error. . Usando el modelo . Vamos a ver cómo usar el modelo ante una nueva imagen. Para ello lo primero que vamos a hacer es cargar dicho modelo. . learn_inf = load_learner(&#39;export.pkl&#39;) . Ahora podemos usar dicho modelo para hacer inferencia con una nueva imagen mediante el método predict. En nuestro caso vamos a usar una imagen del conjunto de test. . learn_inf.predict(&#39;IntelImageClassification/test/buildings/20057.jpg&#39;) . La función anterior devuelve tres valores: . La clase (buildings en este caso). | El índice asociado a dicha clase. | Las probabilidades para cada una de las categorías. | . Creando una aplicaci&#243;n para nuestro modelo . Es fundamental que los modelos sean usables, por lo que es conveniente proporcionar una interfaz secilla que permita usar nuestros modelos. Para ello, vamos a usar dos herramientas: Gradio y los espacios de HuggingFace. En concreto vamos a ver cómo construir la siguiente aplicación siguiendo los pasos del blog de Tanishq Abraham. . Para crear nuestra aplicación vamos a seguir los siguientes pasos: . Descarga el fichero export.pkl creado anteriormente. | Descarga dos de las imágenes del dataset. | Crea una cuenta en HuggingFace. Este paso sólo hay que realizarlo una vez. | Crea un espacio en HuggingFace. Al crear dicho espacio usamos como nombre Practica1 y seleccionamos Gradio como SDK. | Una vez creado el espacio vamos a la pestaña Files and versions. En dicha pestaña debemos: Subir el fichero export.pkl mediante el botón Add file -&gt; Upload file. | Sube las dos imágenes que hayas descargado mediante el botón Add file -&gt; Upload file. | Crear un fichero requirements.txt mediante el botón Add file -&gt; Create a new file. Este fichero contendrá las librerías que son necesarias instalar para ejecutar nuestra aplicación, en este caso fastai. | Crear un fichero app.py mediante el botón Add file -&gt; Create a new file. Este fichero contendrá el código de la aplicación. | . | Siguiendo estos pasos tendrás una aplicación que podrás ver desde la pestaña App (la construcción de la aplicación puede llevar unos segundos, el proceso de construcción lo podrás ver pulsando en el botón See logs. |",
            "url": "https://ap2122.github.io/aprendizajeprofundo2122/practica/2022/01/10/practica1-clasificacion-imagenes.html",
            "relUrl": "/practica/2022/01/10/practica1-clasificacion-imagenes.html",
            "date": " • Jan 10, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Página creada por Jónathan Heras. .",
          "url": "https://ap2122.github.io/aprendizajeprofundo2122/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://ap2122.github.io/aprendizajeprofundo2122/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}